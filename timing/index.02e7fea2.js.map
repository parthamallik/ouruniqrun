{"mappings":"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AU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,YAAa,cACb,SAAU,WACV,YAAa,cACbcACX,SAAU,WACV,YAAa,cACba,cACba,aACb,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,UACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,UACV,QAAS,WACT,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,YAAa,cACb,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WAEfC,GAAS,CACL,EACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,gBACA,iBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,iBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,iBACA,iBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,gBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,mBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBAGJC,GAAc,CACVh7B,UAAY+6B,GACZrtG,YAAcotG,GACdG,aAAY,CAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MAEjFC,uBAAsB,SAAIxvG,OAClB,IAAIvE,EAAE,EAAEA,EAAE4zG,GAAU7zG,OAAOC,IAC3B,GAAGuE,EAAEqvG,GAAU5zG,GAAC,OAAU2zG,GAAY3zG,KC/4ElD,IAAIg0G,GAAe,IAAIC,GAAA/vG,QACrBgwG,GAAc,IAAIC,GAAAjwG,QAAW,CAC3BwB,OAAQsuG,KAEVI,GAAM,CACJC,MAAO,IAAIp4C,GAAK,CA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","sources":["node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/TextFeature.js","node_modules/ol/src/geom/flat/flip.js","node_modules/ol/src/format/Polyline.js","node_modules/ol/src/style/Text.js","node_modules/ol/src/OverlayPositioning.js","node_modules/ol/src/Overlay.js","route-info.js","main.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in desccending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type|Type[], listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return} CombinedOnSignature\n */\n\n/***\n * @typedef {import(\"./events\").EventsKey|Array<import(\"./events\").EventsKey>} OnReturn\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.on = this.onInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.once = this.onceInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, void>}\n     */\n    this.un = this.unInternal;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.TEXT;\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\nexport default TextFeature;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_dest,\n  opt_destOffset\n) {\n  let dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {assert} from '../asserts.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [opt_options] Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/GeometryLayout\").default}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : GeometryLayout.XY;\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    const geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    const feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(\n          geometry,\n          true,\n          this.adaptOptions(opt_options)\n        )\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [opt_factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [opt_factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./Observable\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./Observable\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (\n            options.positioning\n          )\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (\n      this.get(Property.MAP)\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (\n      this.get(Property.POSITIONING)\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","var coordinates = [\n    [77.70527, 12.90689],\n    [77.7054, 12.90729],\n    [77.70554, 12.90796],\n    [77.70561, 12.90835],\n    [77.70562, 12.90857],\n    [77.70562, 12.90863],\n    [77.70568, 12.90875],\n    [77.70578, 12.90888],\n    [77.70581, 12.90908],\n    [77.70587, 12.90949],\n    [77.70601, 12.90993],\n    [77.70626, 12.91047],\n    [77.70669, 12.91118],\n    [77.70695, 12.91157],\n    [77.70717, 12.91184],\n    [77.7073, 12.91195],\n    [77.70743, 12.91204],\n    [77.7077, 12.91215],\n    [77.70797, 12.91221],\n    [77.70863, 12.91238],\n    [77.71031, 12.91261],\n    [77.71185, 12.91283],\n    [77.71286, 12.91297],\n    [77.71296, 12.91297],\n    [77.71317, 12.91293],\n    [77.71354, 12.91275],\n    [77.71427, 12.91237],\n    [77.71447, 12.91228],\n    [77.71453, 12.91227],\n    [77.71458, 12.9123],\n    [77.71501, 12.91307],\n    [77.7153, 12.91361],\n    [77.71546, 12.91388],\n    [77.71557, 12.91399],\n    [77.71575, 12.91413],\n    [77.7162, 12.91449],\n    [77.7165, 12.91471],\n    [77.71685, 12.91497],\n    [77.71733, 12.91523],\n    [77.71782, 12.91554],\n    [77.7179, 12.91555],\n    [77.71812, 12.91572],\n    [77.71841, 12.91586],\n    [77.71893, 12.91579],\n    [77.71917, 12.91576],\n    [77.71929, 12.91571],\n    [77.71978, 12.91559],\n    [77.72023, 12.91549],\n    [77.72043, 12.91545],\n    [77.72073, 12.91544],\n    [77.72089, 12.91546],\n    [77.72148, 12.91565],\n    [77.72238, 12.91552],\n    [77.72287, 12.91547],\n    [77.72333, 12.91549],\n    [77.72356, 12.91555],\n    [77.72443, 12.91566],\n    [77.7246, 12.91572],\n    [77.72473, 12.91584],\n    [77.7248, 12.91593],\n    [77.72501, 12.91637],\n    [77.72529, 12.91693],\n    [77.72551, 12.91726],\n    [77.72582, 12.91752],\n    [77.72593, 12.91758],\n    [77.7262, 12.9177],\n    [77.72651, 12.91778],\n    [77.72755, 12.91793],\n    [77.7289, 12.91805],\n    [77.73019, 12.91814],\n    [77.73343, 12.91859],\n    [77.73426, 12.9187],\n    [77.73458, 12.91874],\n    [77.73478, 12.91881],\n    [77.73492, 12.9189],\n    [77.73507, 12.91902],\n    [77.73528, 12.91914],\n    [77.73542, 12.91919],\n    [77.73581, 12.91919],\n    [77.73604428, 12.91917488],\n    [77.73643, 12.91915],\n    [77.73652, 12.91917],\n    [77.73648, 12.91988],\n    [77.73646, 12.92085],\n    [77.73691, 12.92084],\n    [77.73744, 12.92075],\n    [77.73827, 12.92057],\n    [77.73858, 12.92052],\n    [77.73872, 12.92052],\n    [77.73905, 12.92059],\n    [77.7393, 12.92065],\n    [77.73964, 12.92068],\n    [77.73982, 12.92067],\n    [77.73996, 12.92065],\n    [77.74006, 12.92061],\n    [77.74021, 12.92052],\n    [77.74037, 12.92041],\n    [77.74052, 12.92034],\n    [77.74074, 12.92031],\n    [77.74153, 12.92026],\n    [77.74177, 12.92024],\n    [77.74232, 12.92015],\n    [77.74259, 12.92014],\n    [77.74286, 12.92014],\n    [77.74329, 12.92008],\n    [77.74403, 12.91997],\n    [77.74523, 12.91984],\n    [77.74587, 12.91977],\n    [77.74818, 12.91939],\n    [77.74831, 12.91937],\n    [77.74884, 12.91929],\n    [77.74915, 12.91922],\n    [77.75074, 12.91888],\n    [77.75111, 12.91879],\n    [77.75276, 12.91842],\n    [77.75352, 12.91826],\n    [77.75412, 12.91821],\n    [77.75499, 12.9182],\n    [77.75671, 12.91809],\n    [77.75699, 12.91806],\n    [77.7577, 12.91793],\n    [77.75864, 12.91776],\n    [77.75962, 12.91768],\n    [77.75998, 12.91762],\n    [77.76211, 12.91706],\n    [77.76338, 12.91676],\n    [77.76429, 12.9165],\n    [77.76463, 12.91639],\n    [77.76471, 12.91634],\n    [77.76501, 12.91606],\n    [77.76528, 12.91593],\n    [77.76537, 12.91588],\n    [77.76543, 12.9158],\n    [77.76552, 12.91557],\n    [77.76564, 12.91541],\n    [77.76579, 12.91527],\n    [77.76584, 12.9151],\n    [77.76583, 12.91497],\n    [77.7659, 12.91497],\n    [77.76596, 12.91491],\n    [77.76611, 12.91482],\n    [77.76644, 12.91473],\n    [77.76669, 12.91469],\n    [77.76772, 12.91457],\n    [77.768, 12.91451],\n    [77.76825, 12.91443],\n    [77.76954, 12.91394],\n    [77.77005, 12.91371],\n    [77.7707, 12.91339],\n    [77.77122, 12.91311],\n    [77.77178, 12.9129],\n    [77.77199, 12.91279],\n    [77.77224, 12.91256],\n    [77.77259, 12.91219],\n    [77.7729, 12.91189],\n    [77.77305, 12.91177],\n    [77.77338, 12.91165],\n    [77.77438, 12.91144],\n    [77.77468, 12.91141],\n    [77.77481, 12.9114],\n    [77.77504, 12.91134],\n    [77.77542, 12.91123],\n    [77.77555, 12.91122],\n    [77.77579, 12.91125],\n    [77.77631, 12.91137],\n    [77.77665413, 12.9115325],\n    [77.77667, 12.91154],\n    [77.7768, 12.9116],\n    [77.77688, 12.91166],\n    [77.77696, 12.91184],\n    [77.77698, 12.91191],\n    [77.77708, 12.91196],\n    [77.77717, 12.91198],\n    [77.77754, 12.912],\n    [77.77773, 12.912],\n    [77.77817, 12.91196],\n    [77.77869, 12.91188],\n    [77.77902, 12.91178],\n    [77.77929, 12.91159],\n    [77.77962, 12.91133],\n    [77.77992, 12.91113],\n    [77.78044, 12.91082],\n    [77.78078, 12.91069],\n    [77.78133, 12.91054],\n    [77.78193, 12.9104],\n    [77.78247, 12.91031],\n    [77.78333, 12.91011],\n    [77.78399, 12.90997],\n    [77.78563, 12.90974],\n    [77.78661, 12.90957],\n    [77.78755, 12.90936],\n    [77.78844, 12.90905],\n    [77.78866, 12.90899],\n    [77.78883, 12.90897],\n    [77.7892, 12.909],\n    [77.78944, 12.90907],\n    [77.78967, 12.90916],\n    [77.78998, 12.90916],\n    [77.7905, 12.90909],\n    [77.79158, 12.90896],\n    [77.79169, 12.90892],\n    [77.7919, 12.90871],\n    [77.7923, 12.90836],\n    [77.79266, 12.9081],\n    [77.7929, 12.90797],\n    [77.79331, 12.90784],\n    [77.79382, 12.90774],\n    [77.79408, 12.90773],\n    [77.7943, 12.90776],\n    [77.79505, 12.90787],\n    [77.79556, 12.90794],\n    [77.79576, 12.90794],\n    [77.79594, 12.90793],\n    [77.79618, 12.90782],\n    [77.79627, 12.90771],\n    [77.79634, 12.90754],\n    [77.79639, 12.90734],\n    [77.79647, 12.90725],\n    [77.79687, 12.90713],\n    [77.7972, 12.90686],\n    [77.7973, 12.90677],\n    [77.79748, 12.90663],\n    [77.79758, 12.90659],\n    [77.79796, 12.90651],\n    [77.79807, 12.90648],\n    [77.79816, 12.9064],\n    [77.79825, 12.90626],\n    [77.79831, 12.90598],\n    [77.79841, 12.90575],\n    [77.79862, 12.90545],\n    [77.79876, 12.90528],\n    [77.79899, 12.90504],\n    [77.79932, 12.90475],\n    [77.79964, 12.90449],\n    [77.79985, 12.90435],\n    [77.80015, 12.90409],\n    [77.80094, 12.90335],\n    [77.80165, 12.90267],\n    [77.80226, 12.90229],\n    [77.80299, 12.90196],\n    [77.8038, 12.90161],\n    [77.80467, 12.90123],\n    [77.80522, 12.90103],\n    [77.80632, 12.9006],\n    [77.80745, 12.90018],\n    [77.80801, 12.89989],\n    [77.80837, 12.8997],\n    [77.80865, 12.89944],\n    [77.80885, 12.89925],\n    [77.8095, 12.8985],\n    [77.80983, 12.8981],\n    [77.81014, 12.89778],\n    [77.81053, 12.89729],\n    [77.81091, 12.89668],\n    [77.81108, 12.8964],\n    [77.81141, 12.89595],\n    [77.81152, 12.89584],\n    [77.81169, 12.89573],\n    [77.81196, 12.89565],\n    [77.81222, 12.89563],\n    [77.813, 12.89554],\n    [77.8134, 12.89546],\n    [77.81443, 12.89518],\n    [77.81475, 12.89509],\n    [77.81484, 12.89505],\n    [77.81509, 12.89491],\n    [77.81548, 12.89465],\n    [77.81571, 12.89449],\n    [77.8159, 12.8944],\n    [77.81654, 12.89412],\n    [77.81669, 12.89406],\n    [77.8168, 12.89404],\n    [77.81709, 12.89406],\n    [77.81726, 12.89409],\n    [77.81754, 12.8942],\n    [77.81784, 12.89436],\n    [77.81794, 12.89446],\n    [77.81813, 12.8947],\n    [77.81824, 12.8948],\n    [77.81836, 12.89488],\n    [77.81861, 12.89495],\n    [77.8191, 12.89497],\n    [77.81937, 12.89495],\n    [77.81948, 12.89493],\n    [77.81955, 12.89498],\n    [77.81963, 12.89499],\n    [77.81984, 12.89497],\n    [77.82038, 12.89491],\n    [77.82062, 12.8949],\n    [77.82113, 12.89488],\n    [77.82143, 12.89486],\n    [77.82204, 12.8948],\n    [77.82217, 12.89481],\n    [77.82251, 12.89483],\n    [77.82288, 12.89478],\n    [77.8232, 12.89471],\n    [77.82344, 12.89462],\n    [77.82382, 12.89444],\n    [77.82469, 12.89403],\n    [77.82476, 12.89402],\n    [77.8249, 12.89401],\n    [77.82506, 12.89407],\n    [77.82534, 12.89429],\n    [77.82611, 12.89502],\n    [77.82646, 12.89533],\n    [77.82661, 12.89544],\n    [77.82696, 12.89555],\n    [77.82806, 12.89579],\n    [77.82861, 12.89595],\n    [77.82866, 12.89596],\n    [77.82863538, 12.89600719],\n    [77.82854, 12.89619],\n    [77.82795, 12.89741],\n    [77.82774, 12.89779],\n    [77.82741, 12.89835],\n    [77.82704, 12.89905],\n    [77.82681, 12.89957],\n    [77.82667, 12.90001],\n    [77.82657, 12.90035],\n    [77.82652, 12.90056],\n    [77.82649, 12.90087],\n    [77.82648, 12.90127],\n    [77.82652, 12.90169],\n    [77.82651, 12.90196],\n    [77.8265, 12.9023],\n    [77.82655, 12.90285],\n    [77.82656, 12.90345],\n    [77.82654, 12.90394],\n    [77.82652, 12.90439],\n    [77.82655, 12.90549],\n    [77.82653, 12.90585],\n    [77.82626, 12.90679],\n    [77.82609, 12.90725],\n    [77.82599, 12.90795],\n    [77.82576, 12.90919],\n    [77.82547, 12.9108],\n    [77.8254, 12.91122],\n    [77.82509, 12.91206],\n    [77.82466, 12.91305],\n    [77.82433, 12.91357],\n    [77.82414, 12.91393],\n    [77.82405, 12.91422],\n    [77.82398, 12.91457],\n    [77.82399, 12.91482],\n    [77.82408, 12.91526],\n    [77.8241, 12.9153],\n    [77.82405, 12.91535],\n    [77.82376, 12.91557],\n    [77.82355, 12.91575],\n    [77.82342, 12.91594],\n    [77.82326, 12.9162],\n    [77.8232, 12.91635],\n    [77.82318, 12.91661],\n    [77.82319, 12.91681],\n    [77.82321, 12.91703],\n    [77.82323, 12.91711],\n    [77.82337, 12.91747],\n    [77.8234, 12.91762],\n    [77.82347, 12.91809],\n    [77.82346, 12.91871],\n    [77.82343, 12.91993],\n    [77.82345, 12.9203],\n    [77.82348, 12.9205],\n    [77.82354, 12.92066],\n    [77.82361, 12.92081],\n    [77.82378, 12.92138],\n    [77.824, 12.92198],\n    [77.82418, 12.92243],\n    [77.82428, 12.92262],\n    [77.82438, 12.92285],\n    [77.82441, 12.92297],\n    [77.82445, 12.92325],\n    [77.82443, 12.92368],\n    [77.82442, 12.92398],\n    [77.82435, 12.92419],\n    [77.82419, 12.92443],\n    [77.8241, 12.92459],\n    [77.82405, 12.92483],\n    [77.82405, 12.92503],\n    [77.82411, 12.92542],\n    [77.82437, 12.9264],\n    [77.8246, 12.92729],\n    [77.82459, 12.92738],\n    [77.82454, 12.92745],\n    [77.82372, 12.92801],\n    [77.82267, 12.92856],\n    [77.82216, 12.92877],\n    [77.82184, 12.92886],\n    [77.82139, 12.92903],\n    [77.82098, 12.92924],\n    [77.82075, 12.92935],\n    [77.82058, 12.92939],\n    [77.82055, 12.92939],\n    [77.82055, 12.92946],\n    [77.82045, 12.92947],\n    [77.82013, 12.92945],\n    [77.81934, 12.92926],\n    [77.81917, 12.92924],\n    [77.81909, 12.92927],\n    [77.81895, 12.92992],\n    [77.81863, 12.93135],\n    [77.8186, 12.93145],\n    [77.81852, 12.93157],\n    [77.81833, 12.93171],\n    [77.81824966, 12.93179034],\n    [77.81821, 12.93183],\n    [77.81762, 12.93265],\n    [77.81726, 12.93317],\n    [77.81701, 12.9337],\n    [77.81675, 12.9343],\n    [77.81655, 12.93472],\n    [77.81632, 12.9352],\n    [77.81571, 12.93667],\n    [77.81535, 12.9375],\n    [77.81523, 12.93783],\n    [77.81521, 12.93797],\n    [77.81522, 12.9381],\n    [77.81528, 12.93842],\n    [77.81534, 12.93884],\n    [77.81536, 12.9392],\n    [77.81535, 12.93942],\n    [77.81536, 12.9395],\n    [77.81533, 12.93968],\n    [77.81523, 12.93991],\n    [77.81514, 12.94023],\n    [77.81505, 12.94056],\n    [77.81502, 12.94089],\n    [77.81502, 12.94139],\n    [77.81507, 12.94201],\n    [77.81515, 12.9425],\n    [77.8156, 12.94408],\n    [77.81565, 12.94435],\n    [77.81566, 12.94455],\n    [77.81565, 12.94478],\n    [77.81561, 12.94493],\n    [77.81552, 12.94521],\n    [77.81545, 12.94557],\n    [77.81543, 12.94587],\n    [77.8153, 12.94638],\n    [77.81529, 12.94655],\n    [77.81523, 12.94683],\n    [77.81516, 12.94701],\n    [77.81506, 12.94718],\n    [77.81493, 12.94733],\n    [77.81478, 12.94744],\n    [77.81466, 12.94752],\n    [77.81422, 12.9477],\n    [77.81398, 12.94778],\n    [77.81384, 12.9478],\n    [77.81359, 12.94771],\n    [77.81324, 12.94752],\n    [77.81302, 12.94748],\n    [77.81259, 12.94753],\n    [77.81225, 12.94763],\n    [77.81205, 12.94777],\n    [77.8116, 12.94822],\n    [77.81133, 12.94842],\n    [77.81109, 12.94856],\n    [77.81087, 12.94871],\n    [77.8108, 12.94879],\n    [77.81082, 12.94889],\n    [77.81091, 12.94923],\n    [77.81093, 12.94948],\n    [77.81093, 12.94957],\n    [77.81092, 12.94965],\n    [77.81087, 12.94975],\n    [77.81079, 12.94982],\n    [77.80986, 12.95008],\n    [77.80982, 12.95011],\n    [77.80979, 12.95017],\n    [77.80989, 12.95042],\n    [77.81004, 12.95093],\n    [77.81009, 12.95117],\n    [77.81008, 12.95139],\n    [77.81004, 12.95153],\n    [77.80981, 12.95192],\n    [77.80924, 12.95285],\n    [77.8088, 12.95348],\n    [77.80847, 12.95388],\n    [77.8082, 12.95421],\n    [77.80796, 12.95446],\n    [77.80774, 12.95466],\n    [77.80745, 12.95492],\n    [77.80734, 12.95499],\n    [77.80726, 12.95496],\n    [77.80686, 12.95481],\n    [77.80651, 12.95471],\n    [77.80615, 12.95465],\n    [77.80547, 12.95462],\n    [77.80526698, 12.95462],\n    [77.80515, 12.95462],\n    [77.80494, 12.95462],\n    [77.80482, 12.95467],\n    [77.80465, 12.95479],\n    [77.80445, 12.95506],\n    [77.80425, 12.95532],\n    [77.80405, 12.9555],\n    [77.80312, 12.95613],\n    [77.80299, 12.9562],\n    [77.80284, 12.95624],\n    [77.80264, 12.95627],\n    [77.80241, 12.95622],\n    [77.80216, 12.95614],\n    [77.80174, 12.95597],\n    [77.80142, 12.95574],\n    [77.80112, 12.95545],\n    [77.80084, 12.95514],\n    [77.80055, 12.95479],\n    [77.80036, 12.95458],\n    [77.80025, 12.9545],\n    [77.79998, 12.95442],\n    [77.79954, 12.95436],\n    [77.79904, 12.95432],\n    [77.79883, 12.95427],\n    [77.79839, 12.95412],\n    [77.79785, 12.95388],\n    [77.79759, 12.95374],\n    [77.79728, 12.95368],\n    [77.7972, 12.95365],\n    [77.79715, 12.95359],\n    [77.79708, 12.95346],\n    [77.79703, 12.95328],\n    [77.79698, 12.95294],\n    [77.79697, 12.95271],\n    [77.797, 12.95241],\n    [77.79715, 12.95171],\n    [77.79724, 12.95134],\n    [77.79727, 12.95109],\n    [77.7973, 12.95018],\n    [77.79729, 12.94958],\n    [77.7973, 12.94945],\n    [77.79734, 12.94934],\n    [77.79751, 12.94897],\n    [77.7976, 12.94875],\n    [77.79775, 12.94826],\n    [77.79791, 12.94759],\n    [77.79802, 12.9471],\n    [77.79807, 12.94674],\n    [77.79816, 12.9458],\n    [77.7982, 12.94507],\n    [77.79826, 12.94426],\n    [77.79841, 12.94236],\n    [77.79838, 12.94217],\n    [77.79827, 12.94184],\n    [77.79798, 12.94116],\n    [77.7979, 12.94094],\n    [77.79776, 12.94043],\n    [77.79768, 12.94013],\n    [77.7976, 12.93979],\n    [77.79758, 12.93949],\n    [77.79749, 12.93851],\n    [77.79745, 12.93797],\n    [77.79736, 12.93715],\n    [77.79733, 12.93679],\n    [77.79732, 12.93665],\n    [77.79717, 12.93665],\n    [77.79652, 12.93689],\n    [77.79622, 12.937],\n    [77.79552, 12.93719],\n    [77.79415, 12.93751],\n    [77.79337, 12.93766],\n    [77.79303, 12.93771],\n    [77.79267, 12.93773],\n    [77.79214, 12.93775],\n    [77.79159, 12.93782],\n    [77.7904, 12.93791],\n    [77.78833, 12.93817],\n    [77.7878, 12.93819],\n    [77.78775, 12.93817],\n    [77.78756, 12.938],\n    [77.78748, 12.93792],\n    [77.78735, 12.93781],\n    [77.78726, 12.93777],\n    [77.78695, 12.93776],\n    [77.78662, 12.9378],\n    [77.78648, 12.93778],\n    [77.78632, 12.93779],\n    [77.78621, 12.9378],\n    [77.7859, 12.93793],\n    [77.78569, 12.93802],\n    [77.78546749, 12.93812742],\n    [77.7854, 12.93816],\n    [77.78542, 12.93803],\n    [77.78542, 12.93791],\n    [77.78538, 12.93775],\n    [77.78531, 12.93758],\n    [77.78523, 12.9373],\n    [77.78519, 12.93697],\n    [77.78517, 12.93677],\n    [77.78511, 12.9366],\n    [77.78504, 12.93663],\n    [77.78503, 12.93661],\n    [77.78496, 12.9364],\n    [77.7848, 12.93603],\n    [77.78475, 12.93562],\n    [77.78476, 12.93507],\n    [77.78481, 12.93495],\n    [77.78489, 12.93483],\n    [77.78497, 12.93469],\n    [77.78496, 12.93429],\n    [77.78502, 12.93379],\n    [77.78507, 12.93365],\n    [77.78508, 12.93353],\n    [77.78498, 12.93298],\n    [77.78496, 12.93248],\n    [77.78503, 12.93247],\n    [77.78504, 12.93241],\n    [77.78509, 12.93224],\n    [77.78509, 12.93214],\n    [77.78496, 12.93105],\n    [77.78488, 12.93095],\n    [77.7848, 12.93089],\n    [77.78426, 12.93082],\n    [77.78414, 12.9308],\n    [77.78407, 12.93073],\n    [77.78383, 12.93033],\n    [77.78361, 12.92999],\n    [77.78321, 12.92943],\n    [77.78296, 12.92909],\n    [77.78274, 12.92869],\n    [77.78243, 12.92798],\n    [77.78224, 12.92761],\n    [77.78204, 12.92726],\n    [77.78177, 12.92665],\n    [77.78181, 12.92659],\n    [77.78171, 12.92647],\n    [77.78151, 12.92595],\n    [77.78128, 12.92544],\n    [77.78114, 12.92497],\n    [77.78094, 12.92442],\n    [77.78081, 12.92415],\n    [77.7805, 12.92357],\n    [77.78008, 12.92286],\n    [77.77967, 12.92222],\n    [77.77942, 12.92174],\n    [77.77936, 12.92161],\n    [77.77935, 12.92153],\n    [77.77932, 12.92137],\n    [77.77928, 12.92121],\n    [77.77922, 12.92108],\n    [77.77901, 12.92066],\n    [77.77887, 12.92037],\n    [77.77864, 12.91984],\n    [77.77839, 12.91935],\n    [77.77812, 12.91869],\n    [77.77791, 12.91814],\n    [77.77789, 12.91799],\n    [77.77786, 12.91785],\n    [77.77781, 12.91774],\n    [77.77772, 12.91752],\n    [77.77783, 12.91745],\n    [77.77785, 12.91738],\n    [77.77783, 12.91675],\n    [77.77779, 12.91649],\n    [77.77765, 12.91581],\n    [77.77754, 12.9152],\n    [77.77755, 12.91508],\n    [77.77769, 12.91468],\n    [77.77771, 12.9146],\n    [77.77771, 12.91452],\n    [77.77753, 12.91352],\n    [77.77732, 12.91252],\n    [77.77726, 12.91241],\n    [77.77714, 12.91223],\n    [77.7771, 12.9121],\n    [77.7771, 12.91204],\n    [77.77712, 12.91197],\n    [77.77708, 12.91195],\n    [77.77699, 12.91192],\n    [77.77696, 12.91188],\n    [77.77694, 12.91179],\n    [77.7769, 12.91169],\n    [77.77688, 12.91166],\n    [77.77689, 12.91164],\n    [77.77693, 12.91154],\n    [77.77703, 12.91124],\n    [77.77705718, 12.91117657],\n    [77.77709, 12.9111],\n    [77.77724, 12.91069],\n    [77.77725, 12.91063],\n    [77.77707, 12.9106],\n    [77.77694, 12.91058],\n    [77.77692, 12.91058],\n    [77.7769, 12.91063],\n    [77.77684, 12.91065],\n    [77.77671, 12.91065],\n    [77.77639, 12.91067],\n    [77.77634, 12.91068],\n    [77.77632, 12.91073],\n    [77.77618, 12.91085],\n    [77.77611, 12.91087],\n    [77.77607, 12.91072],\n    [77.77602, 12.91038],\n    [77.77597, 12.91032],\n    [77.77593, 12.91032],\n    [77.77584, 12.91034],\n    [77.77567, 12.91035],\n    [77.77564, 12.91033],\n    [77.77562, 12.91028],\n    [77.77559, 12.91018],\n    [77.77552, 12.91014],\n    [77.77538, 12.91009],\n    [77.77524, 12.91005],\n    [77.77519, 12.91001],\n    [77.77516, 12.90995],\n    [77.77513, 12.9098],\n    [77.77507, 12.9095],\n    [77.77498, 12.90915],\n    [77.77492, 12.90882],\n    [77.77491, 12.90875],\n    [77.77484, 12.90878],\n    [77.77439, 12.90877],\n    [77.77431, 12.90871],\n    [77.77428, 12.9087],\n    [77.774, 12.90882],\n    [77.77368, 12.90885],\n    [77.77363, 12.90887],\n    [77.77362, 12.90888],\n    [77.77361, 12.90893],\n    [77.77319, 12.90879],\n    [77.7729, 12.90862],\n    [77.77263, 12.9083],\n    [77.77242, 12.9081],\n    [77.7723, 12.90791],\n    [77.77207, 12.90789],\n    [77.77186, 12.90786],\n    [77.77173, 12.90776],\n    [77.77146, 12.90766],\n    [77.77129, 12.90753],\n    [77.77118, 12.90736],\n    [77.77094, 12.90734],\n    [77.77076, 12.90722],\n    [77.77071, 12.90713],\n    [77.77055, 12.90626],\n    [77.77048, 12.90607],\n    [77.77034, 12.90593],\n    [77.77015, 12.90587],\n    [77.76992, 12.90591],\n    [77.76974, 12.90598],\n    [77.76956, 12.90614],\n    [77.76947, 12.90629],\n    [77.76937, 12.90636],\n    [77.76896, 12.90652],\n    [77.7686, 12.9066],\n    [77.76842, 12.90658],\n    [77.76792, 12.90649],\n    [77.76509, 12.90614],\n    [77.76473, 12.90617],\n    [77.7646, 12.9059],\n    [77.76441, 12.90548],\n    [77.76424, 12.90489],\n    [77.76411, 12.90449],\n    [77.76406, 12.90441],\n    [77.76388, 12.90416],\n    [77.76351, 12.90272],\n    [77.76345, 12.90248],\n    [77.76345, 12.90245],\n    [77.76338, 12.90247],\n    [77.76332, 12.90225],\n    [77.76312, 12.90148],\n    [77.76293, 12.90069],\n    [77.7628, 12.90025],\n    [77.7627, 12.8998],\n    [77.76252, 12.8997],\n    [77.76213, 12.89953],\n    [77.7608, 12.89895],\n    [77.76057, 12.89885],\n    [77.7606, 12.89878],\n    [77.76034, 12.89868],\n    [77.76004, 12.8986],\n    [77.76, 12.89857],\n    [77.75999, 12.8985],\n    [77.75997, 12.89822],\n    [77.75994, 12.89797],\n    [77.75987, 12.89798],\n    [77.75986, 12.89788],\n    [77.75983, 12.89766],\n    [77.75976, 12.89713],\n    [77.75974, 12.89679],\n    [77.75965, 12.89537],\n    [77.75967, 12.89512],\n    [77.75975, 12.89447],\n    [77.75976, 12.89412],\n    [77.75972, 12.89377],\n    [77.75961, 12.89316],\n    [77.75955, 12.89284],\n    [77.75949, 12.89251],\n    [77.75953, 12.89213],\n    [77.7595, 12.89137],\n    [77.75951, 12.89106],\n    [77.7596, 12.89062],\n    [77.75964, 12.89039],\n    [77.7596, 12.89008],\n    [77.75949, 12.88924],\n    [77.75945, 12.8889],\n    [77.75943, 12.88863],\n    [77.75934, 12.88829],\n    [77.75903, 12.88742],\n    [77.75901, 12.88739],\n    [77.75908, 12.88736],\n    [77.75901, 12.8872],\n    [77.75881, 12.88674],\n    [77.75863, 12.88641],\n    [77.75839, 12.88604],\n    [77.75829, 12.88588],\n    [77.75825, 12.8858],\n    [77.75825, 12.88572],\n    [77.75828, 12.88565],\n    [77.75832, 12.88555],\n    [77.75826, 12.88552],\n    [77.75828, 12.88543],\n    [77.75826, 12.88528],\n    [77.75823, 12.88517],\n    [77.75815, 12.88501],\n    [77.75798, 12.88453],\n    [77.75755, 12.88363],\n    [77.75692, 12.88231],\n    [77.75680944, 12.88200043],\n    [77.75677, 12.88189],\n    [77.75674149, 12.88181396],\n    [77.75674, 12.88181],\n    [77.75682, 12.8818],\n    [77.75679, 12.88172],\n    [77.75676037, 12.88161885],\n    [77.7565, 12.88073],\n    [77.75645, 12.8806],\n    [77.75634, 12.88043],\n    [77.75627, 12.88036],\n    [77.7561, 12.88019],\n    [77.756, 12.88006],\n    [77.75576, 12.87966],\n    [77.7557, 12.87969],\n    [77.75568, 12.87966],\n    [77.75551, 12.87927],\n    [77.75544, 12.87915],\n    [77.7555, 12.87911],\n    [77.75546, 12.87903],\n    [77.75531, 12.87888],\n    [77.75521, 12.87882],\n    [77.75519, 12.87844],\n    [77.75513, 12.87787],\n    [77.75509, 12.87781],\n    [77.75494, 12.87775],\n    [77.75491, 12.87774],\n    [77.75483, 12.87735],\n    [77.75476, 12.87716],\n    [77.75445, 12.8765],\n    [77.75437, 12.87641],\n    [77.75416, 12.8763],\n    [77.75406, 12.87615],\n    [77.754, 12.87604],\n    [77.75361, 12.87606],\n    [77.75332, 12.87612],\n    [77.75311, 12.87617],\n    [77.75287, 12.87622],\n    [77.75216, 12.87611],\n    [77.75163, 12.87608],\n    [77.75133, 12.87604],\n    [77.75123, 12.87599],\n    [77.7511, 12.87585],\n    [77.75093, 12.87569],\n    [77.75065, 12.87545],\n    [77.75036, 12.87513],\n    [77.74995, 12.87461],\n    [77.74986, 12.87449],\n    [77.74979, 12.87431],\n    [77.74973, 12.87412],\n    [77.74961, 12.87327],\n    [77.74956, 12.87297],\n    [77.74956, 12.87273],\n    [77.74953, 12.87254],\n    [77.74945, 12.87232],\n    [77.74914, 12.87156],\n    [77.74902, 12.87132],\n    [77.74883, 12.87103],\n    [77.74855, 12.87068],\n    [77.74836, 12.87049],\n    [77.74811, 12.87022],\n    [77.74799, 12.87005],\n    [77.74775, 12.86959],\n    [77.74755, 12.86906],\n    [77.74684, 12.86743],\n    [77.74665, 12.86704],\n    [77.7464, 12.8666],\n    [77.7462, 12.86619],\n    [77.74581, 12.86551],\n    [77.74554, 12.86494],\n    [77.74493, 12.8637],\n    [77.74482, 12.86338],\n    [77.74469, 12.86284],\n    [77.74453, 12.86229],\n    [77.74424, 12.86172],\n    [77.74412, 12.86141],\n    [77.74406805, 12.86124116],\n    [77.74404, 12.86115],\n    [77.74385, 12.86113],\n    [77.74325, 12.86119],\n    [77.74267, 12.86128],\n    [77.74251, 12.86131],\n    [77.74227, 12.8613],\n    [77.74197, 12.86126],\n    [77.74188, 12.86123],\n    [77.74181, 12.86119],\n    [77.74173, 12.86102],\n    [77.74164, 12.86079],\n    [77.74161, 12.86075],\n    [77.74158, 12.86072],\n    [77.74146, 12.8607],\n    [77.74132, 12.86067],\n    [77.74105, 12.8602],\n    [77.74096, 12.86012],\n    [77.74084, 12.86009],\n    [77.74067, 12.86002],\n    [77.7405, 12.85999],\n    [77.74037, 12.86],\n    [77.73995, 12.86011],\n    [77.73931, 12.86027],\n    [77.73879, 12.86037],\n    [77.73835, 12.86042],\n    [77.73791, 12.86047],\n    [77.73783, 12.86045],\n    [77.73778, 12.8604],\n    [77.73775, 12.86033],\n    [77.73766, 12.86009],\n    [77.7375, 12.8598],\n    [77.7374, 12.85971],\n    [77.73733, 12.8597],\n    [77.73698, 12.85976],\n    [77.73673, 12.8598],\n    [77.73647, 12.85982],\n    [77.73615, 12.85984],\n    [77.73604, 12.85989],\n    [77.73584, 12.86012],\n    [77.73579, 12.86016],\n    [77.73541, 12.86033],\n    [77.73481, 12.86056],\n    [77.73478, 12.86061],\n    [77.73433, 12.86074],\n    [77.73399, 12.8608],\n    [77.73355, 12.8609],\n    [77.73318, 12.86101],\n    [77.73268, 12.86118],\n    [77.73254103, 12.86119813],\n    [77.73245, 12.86121],\n    [77.73240242, 12.86121159],\n    [77.73215, 12.86122],\n    [77.73191, 12.86121],\n    [77.73167, 12.86117],\n    [77.73145, 12.86115],\n    [77.73145, 12.86108],\n    [77.73095, 12.86107],\n    [77.73059, 12.86105],\n    [77.7299, 12.86099],\n    [77.7293, 12.86092],\n    [77.72929, 12.86099],\n    [77.72902, 12.86096],\n    [77.72825, 12.86086],\n    [77.72749, 12.86084],\n    [77.72716, 12.86082],\n    [77.72685, 12.86084],\n    [77.72622, 12.86085],\n    [77.72622, 12.86078],\n    [77.72615, 12.86078],\n    [77.72584, 12.86076],\n    [77.72506, 12.86067],\n    [77.72443, 12.86057],\n    [77.72438, 12.86056],\n    [77.72436, 12.86063],\n    [77.72418, 12.86059],\n    [77.72362, 12.86053],\n    [77.72296, 12.86045],\n    [77.72195, 12.86039],\n    [77.72084, 12.86036],\n    [77.72042, 12.8604],\n    [77.72036, 12.8604],\n    [77.72035, 12.86033],\n    [77.72017, 12.86032],\n    [77.71945, 12.86027],\n    [77.71936, 12.86032],\n    [77.71935, 12.86039],\n    [77.71924, 12.86039],\n    [77.7186, 12.86039],\n    [77.71813, 12.86038],\n    [77.71801, 12.86036],\n    [77.71793, 12.86032],\n    [77.71786, 12.86025],\n    [77.7177, 12.86008],\n    [77.71736, 12.85984],\n    [77.7173, 12.85982],\n    [77.71707, 12.85991],\n    [77.7161, 12.86018],\n    [77.71597, 12.8602],\n    [77.71582, 12.8602],\n    [77.71508, 12.86009],\n    [77.71491, 12.86006],\n    [77.71443, 12.8599],\n    [77.71353, 12.85961],\n    [77.71338, 12.85954],\n    [77.7133, 12.85948],\n    [77.71304, 12.85904],\n    [77.71289, 12.85865],\n    [77.71277, 12.85853],\n    [77.71266, 12.8585],\n    [77.71251, 12.85853],\n    [77.71232, 12.8586],\n    [77.71225, 12.85861],\n    [77.71214, 12.8586],\n    [77.71208, 12.85856],\n    [77.71205, 12.85849],\n    [77.71206, 12.85775],\n    [77.71206, 12.8577],\n    [77.71205, 12.85766],\n    [77.71201, 12.85765],\n    [77.71141, 12.85777],\n    [77.71122, 12.85782],\n    [77.711, 12.85783],\n    [77.71093, 12.85781],\n    [77.71094, 12.85778],\n    [77.711, 12.8575],\n    [77.71101, 12.85704],\n    [77.71099, 12.85686],\n    [77.71096, 12.85681],\n    [77.71095, 12.85682],\n    [77.710863, 12.85689676],\n    [77.71078, 12.85697],\n    [77.71065339, 12.85705808],\n    [77.71055, 12.85713],\n    [77.7101, 12.85756],\n    [77.70996, 12.85767],\n    [77.70964, 12.85786],\n    [77.709, 12.85818],\n    [77.70867, 12.85839],\n    [77.70859, 12.85845],\n    [77.70854, 12.8584],\n    [77.70842, 12.85849],\n    [77.70824, 12.85858],\n    [77.70792, 12.85866],\n    [77.70741, 12.85879],\n    [77.70726, 12.85886],\n    [77.70714, 12.85893],\n    [77.7069, 12.85912],\n    [77.70675, 12.85923],\n    [77.70628, 12.85952],\n    [77.706, 12.85973],\n    [77.70588, 12.85988],\n    [77.70577, 12.86013],\n    [77.70575, 12.86057],\n    [77.70573, 12.8611],\n    [77.70565, 12.86136],\n    [77.70552, 12.86152],\n    [77.70548, 12.86176],\n    [77.70547, 12.86209],\n    [77.70551, 12.86334],\n    [77.70548, 12.86354],\n    [77.70545, 12.86365],\n    [77.70535, 12.86383],\n    [77.70512, 12.86417],\n    [77.70501, 12.86438],\n    [77.70488, 12.86494],\n    [77.70484, 12.86529],\n    [77.70476, 12.86567],\n    [77.70443, 12.86653],\n    [77.70413, 12.86717],\n    [77.70404, 12.86716],\n    [77.70409, 12.86716],\n    [77.70413, 12.86717],\n    [77.70409, 12.86723],\n    [77.70387, 12.86758],\n    [77.70365, 12.86809],\n    [77.70372, 12.86811],\n    [77.70368, 12.86823],\n    [77.70362, 12.86843],\n    [77.70356, 12.86879],\n    [77.70349, 12.86906],\n    [77.70322, 12.86938],\n    [77.70289, 12.86961],\n    [77.70274, 12.86973],\n    [77.70267, 12.8698],\n    [77.70262, 12.87001],\n    [77.70256, 12.8702],\n    [77.70241, 12.87054],\n    [77.70227, 12.87073],\n    [77.70189, 12.87128],\n    [77.70177, 12.87155],\n    [77.70171, 12.87175],\n    [77.70168, 12.87205],\n    [77.70169, 12.87228],\n    [77.70175, 12.87272],\n    [77.70176, 12.87341],\n    [77.70168, 12.87377],\n    [77.70151, 12.87429],\n    [77.70124, 12.87487],\n    [77.70099, 12.87521],\n    [77.70079, 12.87545],\n    [77.70064, 12.8756],\n    [77.70014, 12.87607],\n    [77.69995, 12.87627],\n    [77.69986, 12.87641],\n    [77.69979, 12.87659],\n    [77.69969, 12.87702],\n    [77.69961, 12.87725],\n    [77.69946, 12.8775],\n    [77.69909, 12.87801],\n    [77.69872, 12.87857],\n    [77.69868295, 12.87866633],\n    [77.69857, 12.87896],\n    [77.69843, 12.87958],\n    [77.69833, 12.88018],\n    [77.69821, 12.88088],\n    [77.69812, 12.88122],\n    [77.69801, 12.88148],\n    [77.69771, 12.88222],\n    [77.69768, 12.88229],\n    [77.6971, 12.88376],\n    [77.69698, 12.88409],\n    [77.69682, 12.88446],\n    [77.69663, 12.8848],\n    [77.69647, 12.88529],\n    [77.69645, 12.88552],\n    [77.6965, 12.88572],\n    [77.69657, 12.88599],\n    [77.69656, 12.88627],\n    [77.69648, 12.88692],\n    [77.69643, 12.88736],\n    [77.69636, 12.88778],\n    [77.69628, 12.88798],\n    [77.69614, 12.8882],\n    [77.69607, 12.88847],\n    [77.69606, 12.8887],\n    [77.69612, 12.88926],\n    [77.69609, 12.88938],\n    [77.69598, 12.88958],\n    [77.69579, 12.8898],\n    [77.69572, 12.88999],\n    [77.69573, 12.89039],\n    [77.69577, 12.89077],\n    [77.69574, 12.89096],\n    [77.69575, 12.89094],\n    [77.69571, 12.891],\n    [77.69582, 12.89107],\n    [77.69597, 12.89119],\n    [77.69592, 12.89124],\n    [77.69593, 12.89126],\n    [77.69603, 12.89146],\n    [77.69612, 12.89159],\n    [77.69622, 12.89168],\n    [77.69631, 12.89176],\n    [77.69645, 12.89194],\n    [77.69696, 12.89232],\n    [77.69716, 12.89237],\n    [77.69731, 12.89235],\n    [77.69751, 12.89229],\n    [77.6981, 12.89205],\n    [77.69844, 12.89191],\n    [77.69853, 12.89192],\n    [77.69877, 12.892],\n    [77.69882, 12.89205],\n    [77.69881, 12.89204],\n    [77.69958, 12.89336],\n    [77.69963, 12.89341],\n    [77.6998, 12.89373],\n    [77.69989, 12.89396],\n    [77.69996, 12.8943],\n    [77.69999, 12.89433],\n    [77.70008, 12.89435],\n    [77.70025, 12.89429],\n    [77.70028, 12.89431],\n    [77.70035, 12.89428],\n    [77.70037, 12.89431],\n    [77.70039, 12.89437],\n    [77.7006, 12.89448],\n    [77.70069, 12.89452],\n    [77.70087, 12.89461],\n    [77.70105, 12.89477],\n    [77.7011, 12.89488],\n    [77.70110737, 12.8948972],\n    [77.70113, 12.89495],\n    [77.70247, 12.8945],\n    [77.70301, 12.89437],\n    [77.70305, 12.89436],\n    [77.70303, 12.89429],\n    [77.70349, 12.89421],\n    [77.70374, 12.89416],\n    [77.70399, 12.89406],\n    [77.7044, 12.89383],\n    [77.70466, 12.89364],\n    [77.70473, 12.89359],\n    [77.7048, 12.89358],\n    [77.70486, 12.8936],\n    [77.70498, 12.8937],\n    [77.70526, 12.89409],\n    [77.70531, 12.89413],\n    [77.70533, 12.89414],\n    [77.70536, 12.89414],\n    [77.70536, 12.89421],\n    [77.70536, 12.89424],\n    [77.70542, 12.89444],\n    [77.70541, 12.89458],\n    [77.70546, 12.89479],\n    [77.70602, 12.89637],\n    [77.70629, 12.89704],\n    [77.7066, 12.89779],\n    [77.70662, 12.89815],\n    [77.70662, 12.8984],\n    [77.70648, 12.89929],\n    [77.70636, 12.89997],\n    [77.70632, 12.90013],\n    [77.70626, 12.90019],\n    [77.7062, 12.90038],\n    [77.70614, 12.90047],\n    [77.70616, 12.9007],\n    [77.7062, 12.90136],\n    [77.70617, 12.9021],\n    [77.70615, 12.90212],\n    [77.70613, 12.90213],\n    [77.70548, 12.90249],\n    [77.70526886, 12.90292737],\n    [77.70526, 12.9029],\n    [77.70408, 12.90352],\n    [77.70405, 12.90354],\n    [77.70432, 12.90409],\n    [77.70446, 12.90443],\n    [77.70462, 12.90476],\n    [77.70472, 12.90507],\n    [77.70477, 12.9053],\n    [77.70483, 12.90547],\n    [77.70504, 12.90597],\n    [77.70537, 12.90695]\n],\ndistances = [\n    0,\n    46.660632551089655,\n    122.69087808102819,\n    166.71624486840955,\n    191.20352816547316,\n    197.8759517247947,\n    212.71969735932484,\n    230.78708908483247,\n    253.2626805901357,\n    299.31586636312926,\n    350.54065365923736,\n    416.41651737429333,\n    508.09477709624656,\n    559.8123991052981,\n    598.1523110825902,\n    616.8137441452535,\n    634.1033492426178,\n    665.8248016159619,\n    695.8450686548235,\n    769.8390810307982,\n    953.713547014029,\n    1122.410037817758,\n    1232.9864921101046,\n    1243.8830155938963,\n    1267.0973243007825,\n    1311.9300433376823,\n    1401.637953899483,\n    1425.5428702668687,\n    1432.2285852734165,\n    1438.675127324552,\n    1536.1624343260003,\n    1603.9428719474015,\n    1638.6239918413582,\n    1655.7254227145831,\n    1680.7020721387714,\n    1743.8073113251685,\n    1784.5067122541225,\n    1832.2057662232519,\n    1891.731255585024,\n    1955.0502319398388,\n    1963.8158425356091,\n    1994.2505476271908,\n    2029.3281202709134,\n    2086.2236399764834,\n    2112.4483938824123,\n    2126.5927161688483,\n    2181.3504042253057,\n    2231.373717519686,\n    2253.502873832571,\n    2286.0374647122585,\n    2303.524663740221,\n    2370.872934775448,\n    2469.485655244053,\n    2522.8902056684437,\n    2572.7981633011927,\n    2598.608261321887,\n    2693.6914410279987,\n    2713.2922992937565,\n    2732.701401082134,\n    2745.264519465128,\n    2799.226725296194,\n    2868.4970235107066,\n    2912.257953124088,\n    2956.582636392448,\n    2970.245110796565,\n    3002.4067696728143,\n    3037.162900683431,\n    3151.106547988259,\n    3298.0277972088916,\n    3438.1970732941804,\n    3792.8972409200856,\n    3883.682277203242,\n    3918.648064780687,\n    3941.679752422154,\n    3959.8576783063763,\n    3980.891608564422,\n    4007.2772389935462,\n    4023.443407143557,\n    4065.7148416286714,\n    4091.168205370198,\n    4133.084325752054,\n    4143.17580910572,\n    4222.245038855834,\n    4330.128345802781,\n    4378.917462450711,\n    4437.228905390681,\n    4529.386486593802,\n    4563.443564923369,\n    4578.621018788065,\n    4615.2239181897485,\n    4643.128142377207,\n    4680.127893794463,\n    4699.668148676398,\n    4715.004541869899,\n    4726.724069560291,\n    4745.820708407511,\n    4767.0470370031,\n    4785.0824093685405,\n    4809.168777046015,\n    4894.974702254476,\n    4921.096091339625,\n    4981.54687061937,\n    5010.847182441638,\n    5040.124445896152,\n    5087.210043299582,\n    5168.341185131828,\n    5299.201548526898,\n    5369.005201414981,\n    5622.905724981229,\n    5637.186182423576,\n    5695.314124746426,\n    5729.80535151404,\n    5906.22897066729,\n    5947.561897732152,\n    6131.062470901653,\n    6215.331309245002,\n    6280.596906484578,\n    6374.894643083606,\n    6561.710445568343,\n    6592.24146349551,\n    6670.538874257153,\n    6774.1556998304495,\n    6880.741691660195,\n    6920.32583085656,\n    7159.428485464219,\n    7301.057224556604,\n    7403.834203546858,\n    7442.660882778438,\n    7452.960814369489,\n    7497.978193235158,\n    7530.617404209009,\n    7541.846390212796,\n    7552.8676722391565,\n    7580.241159656924,\n    7602.281215503645,\n    7624.7937121709765,\n    7644.4620767497245,\n    7658.96372386417,\n    7666.560215714175,\n    7675.885263610013,\n    7694.978070966605,\n    7732.118858803382,\n    7759.579352836915,\n    7872.008956432624,\n    7903.08122424679,\n    7931.600246229473,\n    8081.655160440748,\n    8142.560212326322,\n    8221.485185941416,\n    8285.872420675028,\n    8350.904492731828,\n    8376.743648184565,\n    8414.00323689856,\n    8469.965406331874,\n    8517.314170709831,\n    8538.349405135443,\n    8576.525670888195,\n    8687.3976525786,\n    8720.08743857216,\n    8734.228535421194,\n    8760.03744559084,\n    8803.00316153346,\n    8817.146431058187,\n    8843.377320889247,\n    8901.297569594406,\n    8942.745510179466,\n    8944.917869193043,\n    8960.515807005298,\n    8971.468090805334,\n    8993.286684324383,\n    9001.38432724759,\n    9013.577908632496,\n    9023.59897105898,\n    9063.769212370262,\n    9084.370617401073,\n    9132.269921151266,\n    9189.330030812913,\n    9226.788276207477,\n    9262.883358166937,\n    9308.875748657161,\n    9348.272415073618,\n    9414.339310856265,\n    9453.925113975429,\n    9515.825781684362,\n    9582.69407904299,\n    9642.070879547844,\n    9737.897561980672,\n    9811.105410465534,\n    9990.685994982496,\n    10098.57160364322,\n    10203.094864868399,\n    10305.53117489407,\n    10330.291848447994,\n    10348.851484200266,\n    10389.092598207506,\n    10416.245138940712,\n    10443.108464263049,\n    10476.708568617942,\n    10533.603979688087,\n    10651.548857899137,\n    10664.276814789791,\n    10696.887446759893,\n    10755.147625076375,\n    10803.710483038489,\n    10833.47046405434,\n    10880.201016146393,\n    10936.584865335972,\n    10964.787297479057,\n    10988.864584151965,\n    11071.0686656183,\n    11126.891948904715,\n    11148.569330356935,\n    11168.11031771378,\n    11196.854958726268,\n    11212.499818542201,\n    11232.868683639876,\n    11255.758483140693,\n    11269.000200911058,\n    11314.361795157987,\n    11361.05987037119,\n    11375.814727401437,\n    11400.77764118435,\n    11412.49905754637,\n    11454.637682445837,\n    11467.022447589836,\n    11480.229535442546,\n    11498.605468602645,\n    11530.41523363026,\n    11558.193708598481,\n    11598.580044065251,\n    11622.82591100236,\n    11659.34825415564,\n    11707.507485057047,\n    11752.661904790231,\n    11780.239473673246,\n    11823.749623488759,\n    11942.50335179896,\n    12050.389817061012,\n    12128.856622452879,\n    12216.075703358107,\n    12312.110590635035,\n    12415.444263265443,\n    12479.075647835612,\n    12607.535622999563,\n    12738.618826400236,\n    12807.357621049347,\n    12851.73610587493,\n    12893.658102854473,\n    12923.938906439467,\n    13033.114531180016,\n    13090.195499141453,\n    13139.14057395169,\n    13208.10468020146,\n    13287.464194110958,\n    13323.64773028938,\n    13385.157671793922,\n    13402.244017820198,\n    13424.363686899078,\n    13454.952344938276,\n    13483.222383179756,\n    13568.357147006402,\n    13612.616777000982,\n    13728.519237210014,\n    13764.619408686267,\n    13775.340700537408,\n    13806.591771630465,\n    13857.805391220529,\n    13888.432609186655,\n    13911.329680144965,\n    13987.36656714481,\n    14004.941135805308,\n    14017.069915468204,\n    14048.581936588078,\n    14067.307976281816,\n    14100.029612757751,\n    14137.095822949972,\n    14152.62417766527,\n    14186.33354657049,\n    14202.63748938304,\n    14218.39606334149,\n    14246.589848449199,\n    14299.747930255833,\n    14329.097907778245,\n    14341.226542936467,\n    14350.633332558302,\n    14359.37656291187,\n    14382.247887655145,\n    14441.158967969748,\n    14467.197047594105,\n    14522.521299321863,\n    14555.115056223254,\n    14621.569624134934,\n    14635.709867562624,\n    14672.633533811928,\n    14713.12515278984,\n    14748.675913533589,\n    14776.553253345975,\n    14822.35035749754,\n    14927.094492149276,\n    14934.77964030884,\n    14950.004430058298,\n    14968.59445754442,\n    15007.581331303878,\n    15124.006970466093,\n    15175.266051651224,\n    15195.61345779532,\n    15235.473697532438,\n    15357.65325843477,\n    15419.866072368617,\n    15425.398844643963,\n    15431.286377552287,\n    15454.09568109922,\n    15604.07196277357,\n    15652.06913811571,\n    15723.88088058048,\n    15811.441616278253,\n    15874.409503185212,\n    15925.63670020391,\n    15964.967376081295,\n    15988.941184858384,\n    16023.566627382017,\n    16068.059681926725,\n    16114.963964378823,\n    16145.008779551117,\n    16182.832229988422,\n    16244.229303539783,\n    16310.956009362179,\n    16365.485554879491,\n    16415.570805483112,\n    16537.92876408475,\n    16578.018113058257,\n    16686.560879230085,\n    16740.928769544807,\n    16819.51977339379,\n    16959.63765382467,\n    17141.400582759616,\n    17188.714861018307,\n    17287.97842588598,\n    17407.520586411785,\n    17475.51038539611,\n    17520.527531377385,\n    17554.217700313344,\n    17593.8686188475,\n    17621.68851534101,\n    17671.57717780013,\n    17676.52642147005,\n    17684.29222664491,\n    17724.121552027642,\n    17754.432427106527,\n    17779.829421809773,\n    17813.544443262712,\n    17831.451630182208,\n    17860.447219059708,\n    17882.71620223313,\n    17907.277331751837,\n    17916.438854392578,\n    17959.24923521171,\n    17976.244653201604,\n    18029.055031681564,\n    18098.00487406506,\n    18233.701685058353,\n    18274.900949132214,\n    18297.376427532447,\n    18316.319344009087,\n    18334.64463202838,\n    18400.65029293374,\n    18471.501174647878,\n    18525.211193267198,\n    18548.96182347684,\n    18576.745086100174,\n    18590.49024313333,\n    18621.930230858143,\n    18669.796459819398,\n    18703.177105447015,\n    18727.735042739183,\n    18759.56307486189,\n    18779.857671430404,\n    18807.093668218655,\n    18829.33897129547,\n    18873.193310986262,\n    18985.748814026272,\n    19087.805606760496,\n    19097.873919144273,\n    19107.35943092056,\n    19215.87260758405,\n    19345.060520503288,\n    19405.062515140333,\n    19441.157884182572,\n    19493.46241904727,\n    19543.658971334637,\n    19571.42496574539,\n    19590.379147262025,\n    19593.640709557993,\n    19601.429442442877,\n    19612.328022626516,\n    19647.08164526132,\n    19735.269448306037,\n    19753.841323174183,\n    19763.138285469056,\n    19836.990570791368,\n    19999.73782551941,\n    20011.325320147454,\n    20027.239195663205,\n    20053.05345587229,\n    20065.528860015987,\n    20071.691515776005,\n    20183.056913301923,\n    20252.80988694207,\n    20317.672881554576,\n    20390.096058095784,\n    20441.582549386123,\n    20500.490038222048,\n    20676.808937850372,\n    20777.00885848718,\n    20815.93981468293,\n    20831.65782295698,\n    20846.154286661236,\n    20882.325978502424,\n    20929.47841415605,\n    20969.567263071163,\n    20994.054140136494,\n    21003.015517041786,\n    21023.292945468613,\n    21051.069130925276,\n    21087.96405553489,\n    21125.933274342566,\n    21162.772188762123,\n    21218.370191031296,\n    21287.52429901006,\n    21342.695596295693,\n    21525.026604012794,\n    21555.535915188007,\n    21577.804098611155,\n    21603.40395157708,\n    21620.6414466297,\n    21653.26999362892,\n    21694.015896036955,\n    21727.447967251734,\n    21785.882411956594,\n    21804.8194400974,\n    21836.627299831565,\n    21858.03273592273,\n    21879.82235560635,\n    21901.655097717176,\n    21921.998146228634,\n    21937.753813567382,\n    21989.46611689266,\n    22016.95375866869,\n    22032.290267003904,\n    22061.17444660034,\n    22104.59399016299,\n    22128.84986289143,\n    22175.779817009043,\n    22214.269806324355,\n    22240.962923819534,\n    22310.837675342835,\n    22347.59517825804,\n    22377.91360777336,\n    22407.017950502734,\n    22418.72553100209,\n    22430.07255503714,\n    22469.12288008136,\n    22497.01408696608,\n    22507.0409124587,\n    22516.079685627792,\n    22528.462658605302,\n    22540.124987629497,\n    22644.97138281965,\n    22650.4608277249,\n    22657.896119896523,\n    22687.736422249036,\n    22746.730702457295,\n    22773.963879807885,\n    22798.45284278807,\n    22814.615403540218,\n    22864.636242921875,\n    22985.090544568477,\n    23069.831469289165,\n    23126.90251656727,\n    23173.83371271967,\n    23211.901632403686,\n    23244.5044998102,\n    23287.20617800895,\n    23301.458641290512,\n    23310.757522185842,\n    23357.20481852927,\n    23396.734703215505,\n    23436.318877662456,\n    23510.08508060688,\n    23532.094511486783,\n    23544.83024725812,\n    23567.59617373382,\n    23581.751765352135,\n    23604.50614281851,\n    23641.53718400568,\n    23677.671784546816,\n    23707.176801920392,\n    23829.912163336532,\n    23846.00825598488,\n    23862.861086471203,\n    23884.789379062397,\n    23910.325758277293,\n    23938.83989966648,\n    23988.122386788105,\n    24031.210218815133,\n    24077.001031797667,\n    24122.92415587123,\n    24172.946209124504,\n    24204.07798532852,\n    24218.951812409985,\n    24249.53296447114,\n    24297.67893012564,\n    24352.043688066937,\n    24375.469734447568,\n    24425.98345661014,\n    24490.29871979991,\n    24522.488640479427,\n    24556.73834018574,\n    24566.03164332503,\n    24574.628330186246,\n    24590.95447136007,\n    24611.691751117323,\n    24649.884713240364,\n    24675.483078780213,\n    24709.000111608755,\n    24788.51684372971,\n    24830.800225046314,\n    24858.790322911773,\n    24960.030856022575,\n    25026.757662670643,\n    25041.257533526645,\n    25054.238567050987,\n    25099.31805462516,\n    25125.655039535795,\n    25182.51592582818,\n    25259.00801084351,\n    25314.782396015442,\n    25355.1777846959,\n    25460.155179872436,\n    25541.44321117092,\n    25631.745500720273,\n    25843.64068116111,\n    25865.018095824784,\n    25903.601545565452,\n    25985.48580134646,\n    26011.444635674514,\n    26070.150570578513,\n    26104.62015611949,\n    26143.411888272312,\n    26176.846144456456,\n    26286.2540910165,\n    26346.460052897393,\n    26438.161347411562,\n    26478.328472623016,\n    26493.97212544394,\n    26510.235843724673,\n    26585.5656497237,\n    26620.304616378726,\n    26699.053998863637,\n    26851.728900676964,\n    26937.889539475083,\n    26975.15429438892,\n    27014.232151519827,\n    27071.712652652077,\n    27131.823566070467,\n    27261.17476671432,\n    27487.360069169168,\n    27544.840238359422,\n    27550.697874458947,\n    27578.649904266822,\n    27591.071536202762,\n    27609.728718468992,\n    27620.448545813866,\n    27654.06239944888,\n    27690.100744450323,\n    27705.435000615777,\n    27722.810324044014,\n    27734.783276195518,\n    27771.356931712402,\n    27796.218315438033,\n    27823.128603371504,\n    27831.290437581873,\n    27845.907634556355,\n    27859.251340402094,\n    27877.563292655977,\n    27897.93234777007,\n    27930.25221087458,\n    27967.203241261974,\n    27989.54998576462,\n    28009.542498500654,\n    28017.836390703644,\n    28020.337334713226,\n    28044.893264942315,\n    28089.54205056705,\n    28135.455721064547,\n    28196.62503060975,\n    28211.036072570638,\n    28226.958866812827,\n    28244.78723521978,\n    28289.282472957693,\n    28345.26166830777,\n    28361.756124374315,\n    28375.15788752927,\n    28437.270648748356,\n    28492.913146472336,\n    28500.600569279813,\n    28507.383612750145,\n    28527.05611019425,\n    28538.189889697944,\n    28660.21128341951,\n    28674.32514864671,\n    28685.27812634863,\n    28744.31865766099,\n    28757.521511955852,\n    28768.399955326997,\n    28819.92636889703,\n    28864.62455842932,\n    28940.49822055324,\n    28987.012751742623,\n    29037.479283875025,\n    29123.278967056376,\n    29169.287459961397,\n    29213.835332625098,\n    29287.707456486714,\n    29295.66828762158,\n    29312.860280940247,\n    29374.611245936696,\n    29436.557924148463,\n    29490.978160171122,\n    29555.863846934553,\n    29589.02838876229,\n    29661.747950226934,\n    29752.87998178222,\n    29836.77848264442,\n    29896.63551718707,\n    29912.487677266876,\n    29921.450885784994,\n    29939.53799803815,\n    29957.850742717936,\n    29973.701681472925,\n    30025.654243686335,\n    30061.292195146503,\n    30125.2806054518,\n    30186.131327439725,\n    30265.138952412726,\n    30330.39405652597,\n    30347.214061665964,\n    30363.11817606887,\n    30376.497875580946,\n    30402.835018438895,\n    30417.074506222136,\n    30425.157619217694,\n    30495.24414478853,\n    30524.478630018664,\n    30601.599784437523,\n    30670.469122067112,\n    30683.858494752294,\n    30730.85413721319,\n    30740.012746526227,\n    30748.910195984216,\n    30861.803543707927,\n    30975.304410631335,\n    30989.159537441774,\n    31013.029241217224,\n    31028.12076150289,\n    31034.79290412247,\n    31042.87319188937,\n    31047.746101542118,\n    31058.055448542167,\n    31063.56557441886,\n    31073.805485826364,\n    31085.74053098913,\n    31089.72076399273,\n    31092.194948307973,\n    31104.130134388357,\n    31139.205277388755,\n    31146.84903117139,\n    31156.078170807697,\n    31204.480420623633,\n    31211.2403284786,\n    31231.03270355725,\n    31245.29705901886,\n    31247.46476918381,\n    31253.432485326444,\n    31260.30564778406,\n    31274.39584828949,\n    31309.14997389463,\n    31314.68236761301,\n    31320.650101464096,\n    31340.856385353247,\n    31348.762516951792,\n    31365.99600119618,\n    31404.18891572562,\n    31412.784348251447,\n    31417.11988005835,\n    31427.124759907707,\n    31445.58356479772,\n    31449.5231729361,\n    31455.490917526993,\n    31467.076354887402,\n    31475.871140631996,\n    31492.031521848654,\n    31507.843948190555,\n    31514.85543801309,\n    31522.278273576816,\n    31539.272111519265,\n    31573.25892961702,\n    31613.38108650673,\n    31650.647440962017,\n    31658.509161662976,\n    31666.797398283077,\n    31715.5832148082,\n    31726.52435680998,\n    31729.962159865387,\n    31763.113787670303,\n    31797.956936761024,\n    31803.815351762954,\n    31805.37057765464,\n    31811.035504400723,\n    31859.1458251368,\n    31895.82432517558,\n    31941.89481334131,\n    31973.716708315536,\n    31998.52641005569,\n    32023.553988887536,\n    32046.558051015356,\n    32064.507375058198,\n    32095.81292420877,\n    32119.232392034464,\n    32141.581915526956,\n    32167.689493837985,\n    32191.327055451176,\n    32202.712369862955,\n    32300.995330524758,\n    32323.447701860598,\n    32345.19232811978,\n    32366.84511374428,\n    32392.173685072863,\n    32413.186413189072,\n    32439.595341384957,\n    32458.925011084328,\n    32472.280823015975,\n    32520.153786637737,\n    32560.18118292099,\n    32579.831734097428,\n    32634.947687273725,\n    32944.140683794576,\n    32983.32905278604,\n    33016.5013247257,\n    33067.54756580465,\n    33135.69425779362,\n    33182.35641768735,\n    33192.795437072156,\n    33226.76390926876,\n    33391.832167189175,\n    33419.30614106511,\n    33422.686280790695,\n    33430.60862834427,\n    33455.92532864869,\n    33544.24796024693,\n    33634.47481717588,\n    33685.390891579445,\n    33736.589921749095,\n    33759.04672788748,\n    33805.35239846318,\n    33963.27846855792,\n    33990.57538430858,\n    33999.011427506324,\n    34029.307132432165,\n    34063.0200321062,\n    34068.4956941283,\n    34076.3599035313,\n    34107.572015301404,\n    34135.56290448713,\n    34143.24314993003,\n    34154.426327083245,\n    34179.109860405326,\n    34238.53283140793,\n    34276.406217061456,\n    34434.60565926279,\n    34462.49428795861,\n    34535.29303117827,\n    34574.23583933165,\n    34613.40116005499,\n    34682.27512821985,\n    34718.45479369831,\n    34755.72800288394,\n    34798.20934070518,\n    34882.78372083636,\n    34917.27634964205,\n    34967.16735228426,\n    34993.112019150205,\n    35027.85732931169,\n    35122.021104431224,\n    35160.0771710097,\n    35190.17877406422,\n    35229.22351095187,\n    35331.63272126507,\n    35335.61133811547,\n    35343.89988343204,\n    35363.24160936051,\n    35418.79582726595,\n    35460.35561331233,\n    35509.03479087015,\n    35529.8716368589,\n    35539.776426647026,\n    35548.68417527237,\n    35557.13564276677,\n    35569.08450996848,\n    35576.42003190069,\n    35586.680757759445,\n    35603.51537202572,\n    35616.193171859995,\n    35636.00078176856,\n    35692.47119837964,\n    35802.87060800134,\n    35964.75946837207,\n    36001.22098916883,\n    36014.282210218815,\n    36023.33692701162,\n    36024.13625365023,\n    36032.88154248734,\n    36042.35385933123,\n    36054.05043849168,\n    36156.83786255359,\n    36172.276919483134,\n    36194.62753994443,\n    36205.500542059664,\n    36231.90081548967,\n    36249.971535146375,\n    36301.50063559219,\n    36308.818720766496,\n    36312.81792409612,\n    36359.93921333318,\n    36375.29629502271,\n    36383.186654914105,\n    36393.09301923101,\n    36416.39125690926,\n    36429.12694368522,\n    36471.43873864415,\n    36535.15414171526,\n    36543.12116971249,\n    36560.70094250845,\n    36564.16009182621,\n    36608.38633956269,\n    36630.838170953124,\n    36711.555285125294,\n    36724.80267265597,\n    36750.6470735654,\n    36770.54193942275,\n    36784.39808399868,\n    36826.73482075086,\n    36858.871025555636,\n    36882.30429789504,\n    36908.90749470941,\n    36986.83654077463,\n    37044.38471237064,\n    37077.20713014297,\n    37089.389657428546,\n    37110.38777728096,\n    37136.00245028123,\n    37176.4179520566,\n    37223.897668077916,\n    37296.826571795486,\n    37313.35880939303,\n    37334.76641970557,\n    37356.87661837845,\n    37452.284660152574,\n    37486.085586845904,\n    37512.77838173387,\n    37534.16157290979,\n    37560.12273285529,\n    37651.06973498154,\n    37680.76525299681,\n    37719.03355963533,\n    37768.391881197545,\n    37797.90409642332,\n    37838.3551329093,\n    37861.3081986232,\n    37918.695679307035,\n    37981.49224436038,\n    38178.40479340839,\n    38226.41343321314,\n    38282.34367359149,\n    38332.82630348548,\n    38419.45738286712,\n    38489.27029863336,\n    38642.18881446564,\n    38679.71717342259,\n    38741.39664111305,\n    38804.966293361525,\n    38875.716974260635,\n    38912.562368331644,\n    38932.17960266323,\n    38942.793341778626,\n    38963.51447983839,\n    39028.901815863326,\n    39092.56884539267,\n    39110.23494446746,\n    39136.277722593586,\n    39169.10345616041,\n    39179.41836591961,\n    39188.218124514206,\n    39209.01713114548,\n    39236.39053206246,\n    39241.904146566456,\n    39246.56662003692,\n    39259.76484526586,\n    39275.3047310993,\n    39335.20516283685,\n    39348.40883402645,\n    39361.83861636511,\n    39381.843931750525,\n    39400.57244227716,\n    39414.709005999146,\n    39461.85390468772,\n    39533.47839599175,\n    39590.935599518445,\n    39638.957068647636,\n    39686.97852604783,\n    39695.93296607777,\n    39703.70010970732,\n    39712.13998230922,\n    39740.55609684558,\n    39777.17411533248,\n    39791.935074263216,\n    39799.62281164512,\n    39838.15144735403,\n    39865.623447072474,\n    39893.90870843079,\n    39928.68149292581,\n    39941.86478259245,\n    39975.40461546738,\n    39982.46307120989,\n    40027.79675848043,\n    40097.69517964808,\n    40104.18834244501,\n    40155.07577352947,\n    40192.542411403694,\n    40241.52525445963,\n    40283.46377962331,\n    40340.87266975764,\n    40356.10301542366,\n    40366.07760069547,\n    40371.24104353661,\n    40398.62145679688,\n    40424.66247717537,\n    40451.057513759726,\n    40475.01133258998,\n    40482.80201324692,\n    40537.01819459515,\n    40576.110625436486,\n    40651.21031373966,\n    40716.71974784936,\n    40724.59413490644,\n    40754.05839839146,\n    40838.269819396184,\n    40920.68864588461,\n    40956.53484493792,\n    40990.21897983411,\n    41058.52460001495,\n    41066.32259989867,\n    41073.92292453713,\n    41107.60569112806,\n    41192.75280815179,\n    41261.949370535236,\n    41267.499317767775,\n    41275.590799835234,\n    41295.60952437136,\n    41356.682461208766,\n    41428.78338183492,\n    41538.47754729089,\n    41658.856217655906,\n    41704.60619314758,\n    41711.13590947743,\n    41719.01872404998,\n    41738.575792148025,\n    41816.83100947949,\n    41828.08094500173,\n    41835.96705208823,\n    41847.91104627944,\n    41917.293857153076,\n    41968.26198800075,\n    41981.47248280644,\n    41991.23545572939,\n    42002.11949669875,\n    42027.781288933256,\n    42073.29025842242,\n    42080.1775091095,\n    42107.04784036054,\n    42216.40352957716,\n    42230.672102316734,\n    42246.933312753834,\n    42328.08090182341,\n    42346.80944717085,\n    42401.80204739815,\n    42504.55825359099,\n    42522.586985636946,\n    42533.53164821769,\n    42589.996621593426,\n    42636.31361653544,\n    42654.953167593994,\n    42667.341892023716,\n    42683.94580963183,\n    42705.96874268548,\n    42713.651680154675,\n    42725.63773384333,\n    42733.532326636036,\n    42741.98233942749,\n    42824.27504990289,\n    42829.854085233776,\n    42834.52852520428,\n    42839.030112042026,\n    42905.43172657799,\n    42926.77403796301,\n    42950.6563546845,\n    42958.57812787935,\n    42962.11099149786,\n    42993.91964259781,\n    43045.081489898206,\n    43065.21750792089,\n    43071.67078787357,\n    43073.26838816968,\n    43085.99506129198,\n    43098.15493488202,\n    43115.022473004334,\n    43128.81512087492,\n    43197.12519058927,\n    43216.61928629345,\n    43257.23698431501,\n    43335.21004710413,\n    43377.93307341455,\n    43388.87919640231,\n    43396.662270138295,\n    43413.07672872989,\n    43435.00726735107,\n    43470.82102434008,\n    43527.96703210653,\n    43545.99499125994,\n    43561.1545725224,\n    43594.66972999325,\n    43615.01752396819,\n    43675.31537943571,\n    43713.61267107792,\n    43734.766748629634,\n    43765.01597563257,\n    43813.990714273,\n    43872.96609749694,\n    43903.15297292825,\n    43925.85294201964,\n    43952.893584620804,\n    43989.606794549414,\n    44128.66968370087,\n    44151.14714668336,\n    44163.80605856954,\n    44186.56979065493,\n    44231.8574815565,\n    44258.076926282665,\n    44321.920867579334,\n    44361.08013918789,\n    44404.215088956655,\n    44506.31484313117,\n    44584.55823414949,\n    44594.37787435179,\n    44599.7982536965,\n    44604.276255861696,\n    44612.23451765906,\n    44657.87862632221,\n    44719.39866998886,\n    44727.30628351148,\n    44741.336750585455,\n    44764.50758492526,\n    44805.063350779856,\n    44836.031008349106,\n    44882.10473160979,\n    44926.07960508365,\n    44947.11467861348,\n    44957.98870956024,\n    44981.96255461641,\n    45004.071422581634,\n    45045.22878079632,\n    45071.24569860102,\n    45144.98245206843,\n    45177.70474318753,\n    45200.87749402555,\n    45234.39481252814,\n    45259.992919488395,\n    45309.34925578772,\n    45386.08143022706,\n    45427.04020675548,\n    45487.72747976962,\n    45558.551503932234,\n    45605.07028709637,\n    45639.457918046974,\n    45662.75910550474,\n    45738.05429495811,\n    45768.37627945602,\n    45786.769657464894,\n    45808.19842656734,\n    45857.23982934551,\n    45884.26707368654,\n    45916.4891799404,\n    45985.95632962629,\n    46060.03425874262,\n    46071.520345302015,\n    46106.45476556684,\n    46177.05594961866,\n    46244.65246341017,\n    46323.5721235303,\n    46362.622804716615,\n    46393.90173307119,\n    46482.37959508085,\n    46490.821116923995,\n    46665.9514493906,\n    46704.88302315914,\n    46749.53138088761,\n    46792.58362615591,\n    46849.763828250514,\n    46875.43246552055,\n    46898.326759151125,\n    46929.29876254802,\n    46960.45905362135,\n    47033.259067755396,\n    47082.492275620425,\n    47129.81506174867,\n    47153.70344750067,\n    47182.50756809741,\n    47213.492346326515,\n    47239.11386315176,\n    47301.73106521707,\n    47315.4922401296,\n    47340.73910813755,\n    47372.72595961349,\n    47395.1868689199,\n    47439.6851655069,\n    47482.16488189417,\n    47503.54579734444,\n    47506.06067558939,\n    47514.0259500521,\n    47528.26757380108,\n    47549.30159872896,\n    47557.07047616361,\n    47559.55487904639,\n    47584.295302924125,\n    47601.7353243173,\n    47616.489307145624,\n    47629.693324952386,\n    47654.81188963427,\n    47724.39159138285,\n    47746.77206001424,\n    47763.18289758575,\n    47785.865343976846,\n    47855.16149553061,\n    47895.16790044753,\n    47904.98663569894,\n    47932.479919007346,\n    47940.24415422282,\n    47941.79717958149,\n    48110.64454566946,\n    48118.40967146588,\n    48158.48060865674,\n    48185.854798990105,\n    48224.41682931356,\n    48229.08109194734,\n    48239.089815787855,\n    48258.68821521906,\n    48262.635595986285,\n    48270.92796754797,\n    48274.9153810561,\n    48281.935905373764,\n    48307.777780955956,\n    48318.50362472187,\n    48340.43354556489,\n    48366.83996282257,\n    48380.222074367346,\n    48382.318950689965,\n    48388.71615506657,\n    48542.339329433664,\n    48602.629487348204,\n    48607.12508555813,\n    48615.216116627045,\n    48665.86569832208,\n    48693.533869196384,\n    48722.829040524375,\n    48774.105480727274,\n    48809.32991386079,\n    48818.74351044903,\n    48826.419534439054,\n    48833.2988800717,\n    48850.41306543106,\n    48903.345309436976,\n    48910.357715691745,\n    48912.79657194993,\n    48916.04938877426,\n    48923.83317879585,\n    48927.1693787335,\n    48950.33977979085,\n    48965.94475873329,\n    48989.9164197295,\n    49175.79442214514,\n    49255.836887611185,\n    49345.74821657992,\n    49385.83743262551,\n    49413.63688216041,\n    49513.757611496265,\n    49590.48076822021,\n    49608.7927366212,\n    49618.109842431026,\n    49640.2151686818,\n    49652.15051186835,\n    49677.81775604863,\n    49751.33544964896,\n    49833.684239270726,\n    49836.78999706755,\n    49839.226389358,\n    49920.25651596892,\n    49974.00514010844,\n    49977.19628551055,\n    50122.49057535298,\n    50126.44552694257,\n    50194.24499710522,\n    50234.98417155862,\n    50275.57132530985,\n    50311.70565209993,\n    50337.848673976645,\n    50357.83985384706,\n    50417.91644243176,\n    50532.60726133338\n];\n\nmodule.exports = {\n    distances : distances,\n    coordinates : coordinates,\n    aid_stations: [76, 170, 294, 319, 503, 595, 663, 748, 816, 890, 938, 1045, 1112, 1161],\n\n    getLatLongFromDistance : (d) => {\n        for(let i=0;i<distances.length;i++) {\n            if(d<distances[i]) return coordinates[i];\n        }\n    }\n}\n","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport View from 'ol/View';\nimport Feature from 'ol/Feature';\nimport { fromLonLat } from 'ol/proj';\nimport Point from 'ol/geom/Point';\nimport Polyline from 'ol/format/Polyline';\nimport { transform } from 'ol/proj';\nimport { Icon, Stroke, Style, Text, RegularShape } from 'ol/style';\nimport LineString from 'ol/geom/LineString';\nimport Fill from 'ol/style/Fill';\nimport Text from 'ol/style/Text';\nimport Overlay from 'ol/Overlay';\n\nimport { distances, coordinates, aid_stations, getLatLongFromDistance } from './route-info.js'\n\n\nvar vectorSource = new VectorSource(),\n  vectorLayer = new VectorLayer({\n    source: vectorSource\n  }),\n  styles = {\n    route: new Style({\n      stroke: new Stroke({\n        width: 6, color: [14, 64, 18, 0.8]\n      }),\n    }),\n    rectangle: (text) => {\n      return new Style({\n        image: new RegularShape({\n          fill: new Fill({\n            color: \"#c2f2e0\"\n          }),\n          stroke: new Stroke({\n            color: [5, 51, 34, 1],\n            width: 1\n          }),\n          radius: 200 / Math.SQRT2,\n          radius2: 200,\n          points: 4,\n          angle: 0,\n          scale: [0.9, 0.5],\n        }),\n        text: new Text({\n          text: text,\n          font: '8px monospace',\n          textAlign: \"center\",\n          scale: 2.2,\n          fill: new Fill({\n            color: \"#053322\"\n          })\n        })\n      })\n    },\n    icon: new Style({\n      image: new Icon({\n        anchor: [0.5, 1],\n        src: 'data/marker3.png'\n      }),\n    }),\n\n    icon2: new Style({\n      image: new Icon({\n        anchor: [0.5, 1],\n        src: 'data/start-marker.png'\n      }),\n    })\n  };\n\nvar map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    vectorLayer\n  ],\n  view: new View({\n    center: [8657171.159654377, 1449369.2919883956],\n    zoom: 13\n  })\n});\n\nvar utils = {\n  gettiming: function () {\n    return new Promise(function (resolve, reject) {\n      //make sure the coord is on street\n      fetch('data/runners.csv').then(function (response) {\n        // Convert to JSON\n        resolve(response.text());\n      }).catch(function (e) { reject(e); });\n    });\n  },\n\n  createFeature: function (coord, style, name) {\n    var feature = new Feature({\n      name: name,\n      type: 'place',\n      geometry: new Point(fromLonLat(coord))\n    });\n    feature.setStyle(style);\n    vectorSource.addFeature(feature);\n    return feature;\n  },\n  createRoute: function (polyline) {\n    // route is ol.geom.LineString\n    var route = new Polyline({\n      factor: 1e5\n    }).readGeometry(polyline, {\n      dataProjection: 'EPSG:4326',\n      featureProjection: 'EPSG:3857'\n    });\n    var feature = new Feature({\n      type: 'route',\n      geometry: route\n    });\n    feature.setStyle(styles.route);\n    vectorSource.addFeature(feature);\n  },\n  to4326: function (coord) {\n    return transform([\n      parseFloat(coord[0]), parseFloat(coord[1])\n    ], 'EPSG:3857', 'EPSG:4326');\n  }\n};\n\nconst element = document.getElementById('popup');\n\nconst popup = new Overlay({\n  element: element,\n  positioning: 'bottom-center',\n  stopEvent: false,\n});\nmap.addOverlay(popup);\n\n// create the route\nlet lines = new Feature({\n  geometry: new LineString(coordinates.map(c => fromLonLat(c))),\n  name: 'Line',\n});\n\nlines.setStyle(styles.route);\nvectorSource.addFeature(lines);\n\n\nfunction csvJSON(csv) {\n  var lines = csv.split(\"\\n\");\n  var result = [];\n  var headers = lines[0].split(\",\");\n\n  for (var i = 1; i < lines.length; i++) {\n\n    var obj = {};\n    var currentline = lines[i].split(\",\");\n\n    for (var j = 0; j < headers.length; j++) {\n      obj[headers[j]] = currentline[j];\n    }\n\n    result.push(obj);\n\n  }\n  return result;\n}\n\nlet getPrediction = (runner) => {\n  if(runner.TIME && runner.MARK) {\n    let sT = Date.parse(`Wed Oct 23 2021 4:30:00 GMT+0530 (India Standard Time)`); // start time\n    let eT = Date.parse(`Wed Oct 23 2021 ${runner.TIME}:00 GMT+0530 (India Standard Time)`); // elapsed time\n    let d_p = ( distances[aid_stations[runner.MARK]] / (eT-sT) ) * (Date.now()  - sT); // distance_predicted\n    if(d_p > distances[aid_stations[Number(runner.MARK) + 1]]) { // if crossing next mark, keep it to 85-97% of it\n      d_p = (distances[aid_stations[Number(runner.MARK) + 1]] * Math.floor(Math.random() * (97 - 85 + 1) + 85)) / 100;\n    }\n    return getLatLongFromDistance (d_p); // get lat long for it\n  } else if(runner.MARK) { // time not captured.\n    coordinates[aid_stations[runner.MARK]]; // whichever is the last aid station marked\n  } else {\n    coordinates[0] // no MARK means, not started\n  }\n}\n\n\nvar markerFeature = [];\ndocument.getElementById(\"select\").addEventListener(\"change\", (e) => {\n  var val = document.getElementById(\"select\").value;\n  let splits = val.split(' | ');\n  let runner = runners.filter(r => r.NAME === splits[0]);\n\n  runner = (val === '- ALL -') ? runners : runner;\n  if(runner.length === 0) return;\n\n  markerFeature.forEach(m=> {\n    vectorSource.removeFeature(m);\n  })\n  markerFeature = [];\n  $(element).popover('dispose');\n  runner.forEach (r => {\n    //console.log(r);\n    if (r.MARK) markerFeature.push(utils.createFeature(getPrediction(r), styles.icon, r.BIB));\n  })\n});\n\nvar getExpTime = (km, t) => {\n  let sT = Date.parse(`Wed Oct 31 2021 4:30:00 GMT+0530 (India Standard Time)`);\n  let cT = Date.parse(`Wed Oct 31 2021 ${t}:00 GMT+0530 (India Standard Time)`);\n  let expT = ((cT - sT) / km) * 50000;\n  return (new Date(sT + expT)).toLocaleString().split(', ')[1];\n}\n\nvar runners = [];\nutils.gettiming().then(function (d) {\n  runners = csvJSON(d);\n  var datalist = document.getElementById(\"runners\");\n  datalist.innerHTML += `<option value=\"- ALL -\"></option>`;\n  runners.forEach(d => {\n    // create the remaining\n    datalist.innerHTML += `<option value=\"${d.NAME} | ${d.BIB}\"></option>`;\n  });\n});\n\nutils.createFeature([77.7048069, 12.9065275], styles.icon2, 'Startpoint');\n\nmap.on('click', function (evt) {\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n    return feature;\n  });\n  if (feature && feature.get('name') && feature.get('name').startsWith('B42SE')) {\n    popup.setPosition(evt.coordinate);\n    let runner = feature.get('name') ? runners.filter(r => r.BIB === feature.get('name')) : null;\n    if (runner && runner.length > 0) runner = runner[0];\n\n    let name = runner.NAME,\n      distance = distances[aid_stations[runner.MARK]] / 1000,\n      exptime = getExpTime(distances[aid_stations[runner.MARK]], runner.TIME);\n\n    $(element).popover({\n      placement: 'top',\n      html: true,\n      content: `<div>${name}</div><div> Distance: ${Math.round(distance * 100) / 100} km</div><div>ETA: ${exptime} HRS</div>`\n    });\n    $(element).popover('show');\n  } else {\n    $(element).popover('dispose');\n  }\n});"],"names":["$664ea55fc19a08b3$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$31189420a57baeba$export$8eda8fbd1364c8a1","a","b","$31189420a57baeba$export$45934da9231b7323","arr","target","direction","n","length","i","$31189420a57baeba$export$1f4f991ce94838ce","begin","end","tmp","$31189420a57baeba$export$46e35401bc090c62","data","extension","Array","isArray","$31189420a57baeba$export$bcc761834e33d339","arr1","arr2","len1","$351d82b0a78a5705$export$ad8dd69aa6772cd0","$351d82b0a78a5705$export$5c50afa32081505e","$351d82b0a78a5705$export$3850addf0fb4e6a7","$e14829ca1f519173$export$18e1b4ff5b3c2297","Error","$e14829ca1f519173$var$uidCounter_","$e14829ca1f519173$export$604e9536b9e0488a","obj","ol_uid","String","$e14829ca1f519173$export$f2eb173e8f6e4130","$527d7f7180afe02d$var$ua","navigator","userAgent","toLowerCase","$527d7f7180afe02d$export$543c908bf17a24fb","indexOf","$527d7f7180afe02d$export$bccc8605349feea7","$527d7f7180afe02d$export$f16ffc71033a7aaa","$527d7f7180afe02d$export$1940d5d2b4cf824d","devicePixelRatio","$527d7f7180afe02d$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$527d7f7180afe02d$export$9544418e5c6fedfe","Image","decode","$527d7f7180afe02d$export$700ce540937d8c69","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$2e8d627307dae003$export$9099ad97b570f7c","_super","AssertionError","code","_this","message","split","call","name","$2e8d627307dae003$var$__extends","$9531785aa63836ff$export$b8795f4f643ce74f","assertion","errorCode","$2e8d627307dae003$exports","default","$d26dae22fe1d838f$var$transformStringDiv","$d26dae22fe1d838f$export$77f8d2fc923b14e3","transform","c","d","e","f","$d26dae22fe1d838f$export$6af9bbf310c9e4bf","coordinate","x","y","$d26dae22fe1d838f$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$d26dae22fe1d838f$export$6e6aac0f60e83c70","source","mat","det","$d26dae22fe1d838f$export$47bee913e0e80eb4","transformString","join","node","document","createElement","style","$5e2b7eeacdecf354$export$9099ad97b570f7c","$9b4dc89090328257$export$9099ad97b570f7c","$6979b253edf31824$export$a7ecbd362d65c1fe","coordinates","extent","$6979b253edf31824$export$dbb3d72606cdc11","ii","$6979b253edf31824$export$2852acc8f8b94686","$6979b253edf31824$export$14e1765886db335a","value","opt_extent","$6979b253edf31824$export$d6a0542127b96c83","slice","$6979b253edf31824$export$c7d6a927f416dd39","dx","dy","$6979b253edf31824$export$c422a9fcb5f1ee5c","$6979b253edf31824$export$cc70e7e516e4370f","$6979b253edf31824$export$4f55e2d709659e7b","extent1","extent2","$6979b253edf31824$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$6979b253edf31824$export$ea8082d0226d35a5","$6979b253edf31824$export$80741250c74fd4fa","$6979b253edf31824$export$bcc761834e33d339","$6979b253edf31824$export$4b116deb3079b147","flatCoordinates","offset","stride","$6979b253edf31824$export$8696fee511ea7c7a","min","max","$6979b253edf31824$export$c26f7b9c5adc34b4","callback","val","$6979b253edf31824$export$3932426cd8118930","$6979b253edf31824$export$4e2fc25ce97f3583","$6979b253edf31824$export$35aedeaeee8be6cd","$6979b253edf31824$export$5100f0815ea32995","$6979b253edf31824$export$ab4e37d31d15614d","area","$6979b253edf31824$export$988399e568471db1","$6979b253edf31824$export$3dc3550566517965","$6979b253edf31824$export$e178c8044d3d0a05","$6979b253edf31824$export$339e303bf205caae","$6979b253edf31824$export$38622892ed79bdc7","corner","$6979b253edf31824$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$6979b253edf31824$export$c491031eb9adcc3a","intersection","$6979b253edf31824$export$c3bd2c3b798b0350","$6979b253edf31824$export$76e02248c0889c3e","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$6979b253edf31824$var$_boundingExtentXYs","$41189646474e5084$export$4b8705656de00c72","$41189646474e5084$export$4a376e0f60d976ee","cosh","exp","$41189646474e5084$export$e08236045caaa3e1","log2","log","LOG2E","$41189646474e5084$export$fd0b1e5ac4df516c","t","$41189646474e5084$export$8b6706701cd75ea9","$41189646474e5084$export$11468133b1231643","angleInRadians","PI","$41189646474e5084$export$4fc80c88d72f096","angleInDegrees","$41189646474e5084$export$3334706ffb3dccb1","r","$41189646474e5084$export$45ca8e7f50ccf2e0","$05f8d3eb3a3b3632$var$HEX_COLOR_RE_","$05f8d3eb3a3b3632$var$NAMED_COLOR_RE_","$05f8d3eb3a3b3632$export$9fe004474d6f7f65","color","$05f8d3eb3a3b3632$export$47bee913e0e80eb4","$05f8d3eb3a3b3632$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$05f8d3eb3a3b3632$export$21528ce64591bf2","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","$05f8d3eb3a3b3632$export$2e33abec8aecd572","map","Number","$05f8d3eb3a3b3632$var$fromStringInternal_","$05f8d3eb3a3b3632$export$7266a24c0caa2a8","undefined","$0828fcafb706d3fc$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$0828fcafb706d3fc$var$getKey","set","setSize","maxCacheSize","$0828fcafb706d3fc$export$601b9e2be44c7cb2","$69c59045833c3003$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$78afe97655c173a4$export$9099ad97b570f7c","$43f7a9f222abbea0$export$f3c88f5a058bec38","assign","var_sources","TypeError","output","arguments","$43f7a9f222abbea0$export$97fff7491bd246bd","object","property","$43f7a9f222abbea0$export$207c30846165e93a","values","$43f7a9f222abbea0$export$988399e568471db1","$ad3de02656425e16$export$9099ad97b570f7c","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$ad3de02656425e16$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","index","splice","$1f1034d6043b657b$export$9099ad97b570f7c","$56a06269a268820b$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$56a06269a268820b$export$d2df825b2d8bc2ba","$56a06269a268820b$export$6dee5fd4fdf600ff","$63adf90947e79212$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$63adf90947e79212$var$__extends","changed","getRevision","len","ol_key","$63adf90947e79212$export$21f63b82add5980c","$ad3de02656425e16$exports","$63adf90947e79212$export$9099ad97b570f7c","$9403ba232d3d3401$export$b902cfd711fa7f06","ObjectEvent","oldValue","$9403ba232d3d3401$var$__extends","$9403ba232d3d3401$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$63adf90947e79212$exports","$af9ac451f9e710c1$export$9099ad97b570f7c","$5bc06fc72e60a1e5$export$9099ad97b570f7c","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$5bc06fc72e60a1e5$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$9403ba232d3d3401$exports","$89b1d20a080b27f0$export$9099ad97b570f7c","$12755424859afe42$export$9099ad97b570f7c","$c42f11a8ed244eef$export$16970faadcd3f29b","layerState","viewState","zoom","$c42f11a8ed244eef$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$c42f11a8ed244eef$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$5bc06fc72e60a1e5$exports","$3b0bd531a043cbd1$export$bcc761834e33d339","coordinate1","coordinate2","equals","$3b0bd531a043cbd1$export$d40e2456b1281660","cosAngle","sinAngle","$3b0bd531a043cbd1$export$5a0d9577a24f3c5b","projection","canWrapX","worldWidth","worldsAway","$3b0bd531a043cbd1$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$acb05479f915e9be$var$expireIconCache","$acb05479f915e9be$export$9099ad97b570f7c","MapRenderer","map_","$acb05479f915e9be$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","$c42f11a8ed244eef$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$911ab4cf0143b734$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$911ab4cf0143b734$var$__extends","$8dfbec8593aa270d$export$4b206f1dd0085e9f","$8dfbec8593aa270d$export$6cfb92f3ca39d412","$8dfbec8593aa270d$export$a6463a3b3793c500","$8dfbec8593aa270d$var$fontRegEx","RegExp","$8dfbec8593aa270d$var$fontRegExMatchIndex","$8dfbec8593aa270d$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$1999371b8a7a6e92$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$1999371b8a7a6e92$export$954ce77093b0d494","element","offsetWidth","marginLeft","marginRight","$1999371b8a7a6e92$export$a3ec1d24165186f9","offsetHeight","marginTop","marginBottom","$1999371b8a7a6e92$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$1999371b8a7a6e92$export$47503d53c08beb29","$1999371b8a7a6e92$export$f0994cfd84ab1152","lastChild","$0511c8c10849dc1a$export$18c07a12203603b5","$0511c8c10849dc1a$export$55c06ab37ead2f5d","$0511c8c10849dc1a$export$ffc0c15ee0fd31b3","$0511c8c10849dc1a$export$6ad0413f8fea3c71","$0511c8c10849dc1a$export$4f3c27e569bdb39e","$0511c8c10849dc1a$export$b679e5c5d4b15cf5","$0511c8c10849dc1a$export$d721e051424a5865","$0511c8c10849dc1a$export$6f57224ec3df03c9","$0511c8c10849dc1a$export$70c5a077e5d6beb9","$0511c8c10849dc1a$export$907cf5cff4a8acb1","console","warn","$0511c8c10849dc1a$var$measureFont","measureElement","$0511c8c10849dc1a$var$measureContext","$0511c8c10849dc1a$export$384c0f09c94ed6cc","$0511c8c10849dc1a$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$0511c8c10849dc1a$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$0511c8c10849dc1a$export$a2bf16790cd8f004","metrics","$0511c8c10849dc1a$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","measureText","$0511c8c10849dc1a$export$4b2ca35321179b27","$0511c8c10849dc1a$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","translate","label","$0511c8c10849dc1a$var$executeLabelInstructions","drawImage","restore","$a7bc897a99e1468c$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$8dfbec8593aa270d$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$a7bc897a99e1468c$var$__extends","event_1","$911ab4cf0143b734$exports","declutterLayers","previousElement","layerIndex","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$1999371b8a7a6e92$export$439ebc2b0f0ec9f4","getDataAtPixel","$acb05479f915e9be$exports","$404829bff740bb1b$export$9099ad97b570f7c","$6f518feb4a5d11c4$var$Property","$6f518feb4a5d11c4$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$6f518feb4a5d11c4$var$__extends","$6f518feb4a5d11c4$export$9099ad97b570f7c","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$9b534bf563223e28$var$Property","$9b534bf563223e28$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$6f518feb4a5d11c4$exports","setLayers","$9b534bf563223e28$var$__extends","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$fb4925193e6007b2$export$9099ad97b570f7c","MapEvent","$fb4925193e6007b2$var$__extends","$87748d91c1ff80d0$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$87748d91c1ff80d0$var$__extends","getEventPixel","getCoordinateFromPixel","$fb4925193e6007b2$exports","$d1dde526982cc5ac$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$a59fb3ca034fecde$export$9099ad97b570f7c","$08be60d5c9a54b41$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$08be60d5c9a54b41$var$__extends","emulateClick_","pointerEvent","newEvent","$87748d91c1ff80d0$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$97a07643bed490b2$export$9099ad97b570f7c","$de0c0f8112f90228$export$9099ad97b570f7c","$c6360ad74bd7a546$export$55b8074a560bbdf4","$c6360ad74bd7a546$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$64b89b0b3d0b4cba$export$9099ad97b570f7c","$40a9fb900c9e0ad4$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$40a9fb900c9e0ad4$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$40a9fb900c9e0ad4$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$a33c8584730caef5$export$9099ad97b570f7c","$c9c507281fcc3891$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$c9c507281fcc3891$export$af68584dedf5e52c","$c9c507281fcc3891$export$9099ad97b570f7c","$69221d06b0113aff$export$9099ad97b570f7c","$8d321ccd3e128174$export$9099ad97b570f7c","$c524398f6723d704$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$7f3701aa8bdb506a$export$8c5f77743cd0e8b7","$7f3701aa8bdb506a$export$bb1f4f75177e5528","$7f3701aa8bdb506a$export$6fd015d56b8406c9","$7f3701aa8bdb506a$export$64afaa717a0c4932","$7f3701aa8bdb506a$export$2126dea64bc40b7b","tan","$7f3701aa8bdb506a$var$EPSG3857Projection","EPSG3857Projection","point","$7f3701aa8bdb506a$var$__extends","$7f3701aa8bdb506a$export$850c9b527a5298aa","$7f3701aa8bdb506a$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$7f3701aa8bdb506a$export$f361696640082386","atan","$9fa231a87381e908$export$6fd015d56b8406c9","$9fa231a87381e908$export$af68584dedf5e52c","$9fa231a87381e908$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$9fa231a87381e908$var$__extends","$9fa231a87381e908$export$850c9b527a5298aa","$b355c55a4bde1b89$var$cache","$57e7e4423e192b2f$var$transforms","$57e7e4423e192b2f$export$568ed88074851180","destination","sourceCode","destinationCode","$1a993eb37fc0a4e5$export$761de677acb0d085","$1a993eb37fc0a4e5$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$1a993eb37fc0a4e5$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$e9b048d51236bbbc$export$3fbbaef54e2e9d28","$e9b048d51236bbbc$export$678028d364072132","$e9b048d51236bbbc$export$6308908a0016f099","$b355c55a4bde1b89$export$568ed88074851180","$e9b048d51236bbbc$export$7eb84799c931fe91","projectionLike","replace","$e9b048d51236bbbc$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$e9b048d51236bbbc$export$747af4f49bde2f53","vertices","$e9b048d51236bbbc$export$a42db349809b0c24","projections","$e9b048d51236bbbc$export$fd4cd3535c7ea97f","$e9b048d51236bbbc$export$f704437a72056fb8","defaultCode","$e9b048d51236bbbc$export$13550698a4b6771e","opt_projection","$e9b048d51236bbbc$export$4b169b49e1a4823b","$e9b048d51236bbbc$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$57e7e4423e192b2f$export$7eb84799c931fe91","$e9b048d51236bbbc$export$9336879ef6599bf5","$e9b048d51236bbbc$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$e9b048d51236bbbc$var$userProjection","$e9b048d51236bbbc$export$352fd07bdd93dc1e","$e9b048d51236bbbc$export$4a182a4d53d7595c","$e9b048d51236bbbc$export$b5d00774755783fc","destProjection","$e9b048d51236bbbc$export$a7d473ff80a6a3b","$e9b048d51236bbbc$export$f87215506b474b9e","$5b15465d65b208f9$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$5b15465d65b208f9$export$eaafe0fae18e32b1","$c5d62abeb18093bc$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$c5d62abeb18093bc$var$getSmoothClampedResolution","$c5d62abeb18093bc$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$dd50dbab14b9e355$export$e97ec87d2336bd4e","$dd50dbab14b9e355$export$eaafe0fae18e32b1","$d316f2294d12f14b$export$9fbc3b1d6b2da9ec","pow","$d316f2294d12f14b$export$673b9849e2bc032c","$d316f2294d12f14b$export$1b5c1277e30d397d","$d316f2294d12f14b$export$5523e35ab8ae283a","$7f3701aa8bdb506a$exports","PROJECTIONS","$9fa231a87381e908$exports","fromEPSG4326","toEPSG4326","$0ad743cdd11ec12f$export$9099ad97b570f7c","$fb5c77af8a17a25c$export$92106241c01aa541","opt_dest","dest","$fb5c77af8a17a25c$export$d40e2456b1281660","anchor","anchorX","anchorY","k","$b682244a7d047928$var$tmpTransform","$b682244a7d047928$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$b682244a7d047928$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$6979b253edf31824$export$d1e01ccfd06bf8ee","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$5caa66f67d70c90b$export$2a65008b73824080","layout","$5caa66f67d70c90b$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$5caa66f67d70c90b$export$9099ad97b570f7c","SimpleGeometry","$5caa66f67d70c90b$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$5caa66f67d70c90b$var$getLayoutForStride","$fb5c77af8a17a25c$export$8f869025bba9609b","$fb5c77af8a17a25c$export$41b0d7466cde8385","$b682244a7d047928$exports","$c8d16959777aa5d2$var$assignClosest","offset1","offset2","$c8d16959777aa5d2$export$acf7548d1f0e8581","squaredDelta","$c8d16959777aa5d2$export$ba38095f6bb45df2","ends","$c8d16959777aa5d2$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$c8d16959777aa5d2$export$3dd3914e22f9012e","$fa72d035ed15d370$export$e175f505890ac90f","$fa72d035ed15d370$export$ab1a51db55485752","coordinatess","opt_ends","jj","$f117f014c02c321b$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$f117f014c02c321b$export$383ea8a1f2974dfb","$f117f014c02c321b$export$e29de4fdb2175738","$f117f014c02c321b$export$1df19a1eb5514c2f","simplifiedEnds","$8156c430059b0be1$export$92f32d891164b0ac","opt_coordinates","$8156c430059b0be1$export$d82a8a3167f968d","opt_coordinatess","$8156c430059b0be1$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$1720796d74226cac$export$9bf2059fd656d5e9","twiceArea","$1720796d74226cac$export$99cb92d00fd73c87","$14f82d27708e2673$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$14f82d27708e2673$var$__extends","getArea","$5caa66f67d70c90b$exports","$b7b44b2e7369d419$export$9099ad97b570f7c","Point","$b7b44b2e7369d419$var$__extends","$fa72d035ed15d370$export$a53e62528b652807","$d0ff7551bd225db7$export$f7b55b637f92fd7","$d0ff7551bd225db7$export$e2ed757909b25f63","wn","$d0ff7551bd225db7$export$51e46a3625992b91","$fba4e8b2345a6181$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$453f0f3786b8ff29$export$40f3d9558cf6e846","ret","point1","point2","$3f240441e8158030$export$26f047a5bfac4b1a","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$6979b253edf31824$export$525a75abb91115e3","$3f240441e8158030$export$717c2c7c46a5bf3d","$3f240441e8158030$export$f14bd9270666b480","$081640ea8b715cda$export$c77fe031a1447f2e","$e73c8a2e0bc9e480$export$add61ad31d0a68b4","edge","$e73c8a2e0bc9e480$export$586adaf930d9fdb6","opt_right","right","isClockwise","$e73c8a2e0bc9e480$export$325e57738fd8b321","$70159e2f3144e634$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$70159e2f3144e634$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$b7b44b2e7369d419$exports","getLinearRingCount","getLinearRing","$14f82d27708e2673$exports","getLinearRings","linearRings","$70159e2f3144e634$export$9099ad97b570f7c","$70159e2f3144e634$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$70159e2f3144e634$export$b50d271c6e9656cd","$70159e2f3144e634$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$70159e2f3144e634$export$5d1798f0e1df079","getRadius","startAngle","$4d9e33768334286e$var$animationCallback","returnValue","$4d9e33768334286e$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$4d9e33768334286e$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$c5d62abeb18093bc$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$c5d62abeb18093bc$export$7690ad4e930f454b","constraint","$4d9e33768334286e$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$4d9e33768334286e$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$4d9e33768334286e$var$calculateCenterOn","rotX","rotY","$4d9e33768334286e$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$4d9e33768334286e$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","$70159e2f3144e634$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$25e118ccc56a5e21$export$c563c2b7121f8771","$25e118ccc56a5e21$export$48d31d2725e4d98b","$3141486bef412326$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$9b534bf563223e28$exports","view","$4d9e33768334286e$exports","$3141486bef412326$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$40a9fb900c9e0ad4$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","toString","$3141486bef412326$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$08be60d5c9a54b41$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","parseFloat","$88abedb827e5ec1b$export$9099ad97b570f7c","Control","target_","listenerKeys","$88abedb827e5ec1b$var$__extends","mapEvent","$72fd36fb1a212cd3$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$72fd36fb1a212cd3$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$88abedb827e5ec1b$exports","$f0a10ea98a6cb519$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$f0a10ea98a6cb519$var$__extends","resetNorth_","$d3f921aa5a285174$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$d3f921aa5a285174$var$__extends","zoomByDelta_","currentZoom","newZoom","$0d5605eedb6da3c8$export$9099ad97b570f7c","$33139a7ba78491c7$export$63568b31cb17dd4d","$33139a7ba78491c7$export$d2c07614bfd6a817","$33139a7ba78491c7$export$9099ad97b570f7c","Interaction","setActive","$33139a7ba78491c7$var$__extends","active","$787de85327c916bb$export$9099ad97b570f7c","DoubleClickZoom","delta_","$787de85327c916bb$var$__extends","stopEvent","shiftKey","$33139a7ba78491c7$exports","zoomByDelta","$82cbbbeb425d67d7$export$e61edea4dfe4ed9b","$82cbbbeb425d67d7$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$82cbbbeb425d67d7$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$82cbbbeb425d67d7$var$isPointerDraggingEvent","$83e85025105111b6$export$8dbdea330bbd6b3c","conditions","pass","$83e85025105111b6$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$83e85025105111b6$export$584a07df7b145c47","hasAttribute","activeElement","$83e85025105111b6$export$363947888fb85da6","$83e85025105111b6$export$a8612972eacfc116","$83e85025105111b6$export$9f5e19851eeaf2c1","$83e85025105111b6$export$1734dfcac3c09b2f","$83e85025105111b6$export$59c8376875f673f8","$83e85025105111b6$export$5bbcce8021828272","tagName","$83e85025105111b6$export$d31d3f3aa38542a8","pointerType","$83e85025105111b6$export$45cd27c0322d6513","isPrimary","$a42fdc6c339cab83$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$a42fdc6c339cab83$var$__extends","centroid","$82cbbbeb425d67d7$exports","update","getDistance","getAngle","centerpx","$9057ffe9f6806c34$export$9099ad97b570f7c","DragRotate","lastAngle_","$9057ffe9f6806c34$var$__extends","$6a5b5969cfd0314b$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$6a5b5969cfd0314b$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$66cbaf7779269f15$var$DragBoxEventType","$66cbaf7779269f15$export$4d9b552836937ca2","DragBoxEvent","$66cbaf7779269f15$var$__extends","$66cbaf7779269f15$export$9099ad97b570f7c","DragBox","box_","$6a5b5969cfd0314b$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$0da21c36fc8689b0$export$9099ad97b570f7c","DragZoom","out_","out","$0da21c36fc8689b0$var$__extends","factor","$66cbaf7779269f15$exports","$42a6230b71cef258$export$9099ad97b570f7c","$f6b95667a4c90ca6$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$f6b95667a4c90ca6$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$9eebcf690d0cc684$export$9099ad97b570f7c","KeyboardZoom","$9eebcf690d0cc684$var$__extends","charCode","charCodeAt","$f3f3e2bdc0486d9f$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$e4045b56fe7b53f8$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$e4045b56fe7b53f8$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$e4045b56fe7b53f8$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$7569a186ce0b430a$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$7569a186ce0b430a$var$__extends","rotationDelta","touch0","touch1","$916765f6a8929418$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$916765f6a8929418$var$__extends","scaleDelta","$fb244fe1c9d9d25f$export$9099ad97b570f7c","Map1","$d3f921aa5a285174$exports","zoomOptions","$f0a10ea98a6cb519$exports","rotateOptions","attribution","$72fd36fb1a212cd3$exports","attributionOptions","$b0b013c00d4892b9$export$b403fbac94228e09","altShiftDragRotate","$9057ffe9f6806c34$exports","doubleClickZoom","$787de85327c916bb$exports","zoomDelta","zoomDuration","dragPan","$a42fdc6c339cab83$exports","pinchRotate","$7569a186ce0b430a$exports","pinchZoom","$916765f6a8929418$exports","keyboard","$f6b95667a4c90ca6$exports","$9eebcf690d0cc684$exports","mouseWheelZoom","$e4045b56fe7b53f8$exports","shiftDragZoom","$0da21c36fc8689b0$exports","$6e4cba11d32981b8$export$b403fbac94228e09","$fb244fe1c9d9d25f$var$__extends","$a7bc897a99e1468c$exports","$3141486bef412326$exports","$a3d1b86eb82917d6$exports","t1","t2","r1","e1","a1","h1","o","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","all","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$935f8b7a5b85bfe8$export$9099ad97b570f7c","$34654e6651b251b3$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$53bbd9338c177aee$export$55029509b82b2e2b","$2feab5dba9ad5f59$export$9099ad97b570f7c","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","renderOptions_","$2feab5dba9ad5f59$var$__extends","getFill","getPoints","getRadius2","getStroke","createHitDetectionCanvas_","image","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$b29035dd30b69246$export$9099ad97b570f7c","CircleStyle","$b29035dd30b69246$var$__extends","setRadius","$2feab5dba9ad5f59$exports","$98cbc37b0b44b767$export$9099ad97b570f7c","Fill","color_","setColor","$073d49fd723c1fec$export$9099ad97b570f7c","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$ef273152c7d412a1$var$Style","Style","geometryFunction_","$ef273152c7d412a1$var$defaultGeometryFunction","setGeometry","image_","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$ef273152c7d412a1$var$defaultStyles","$ef273152c7d412a1$export$33d0043adf82cc14","$b29035dd30b69246$exports","$ef273152c7d412a1$export$9099ad97b570f7c","$c2d701923a28fd18$var$Property","$c2d701923a28fd18$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","$c2d701923a28fd18$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","opt_style","styleFunction","styles_1","$ef273152c7d412a1$export$4aaa4bacaec09e94","$ea10f0be0ccf1300$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$ea10f0be0ccf1300$export$c649c04369bd3370","$ea10f0be0ccf1300$export$2513c58bc344fc5c","$ea10f0be0ccf1300$export$84e3c67fd41b07f5","$ea10f0be0ccf1300$export$6cd4b1e0c0e7240c","$ea10f0be0ccf1300$export$9099ad97b570f7c","$3abff25fdef3af43$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$4647f8432e21f43f$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$4647f8432e21f43f$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$2c014a0532f2a817$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$2c014a0532f2a817$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$4647f8432e21f43f$exports","$b777a0d6747ca59c$export$9099ad97b570f7c","CanvasLineStringBuilder","$b777a0d6747ca59c$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$f658eb6fb6f30dca$export$9099ad97b570f7c","CanvasPolygonBuilder","$f658eb6fb6f30dca$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$71443802e4194e60$export$9099ad97b570f7c","$c96c7cc1550392c0$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$bf79381f09c26a2f$export$3964e67694391753","$bf79381f09c26a2f$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$bf79381f09c26a2f$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$659014459a345ad6$var$BATCH_CONSTRUCTORS","$f658eb6fb6f30dca$exports","$2c014a0532f2a817$exports","$b777a0d6747ca59c$exports","$bf79381f09c26a2f$exports","$659014459a345ad6$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$d210c08aef54bfde$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$d210c08aef54bfde$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","imageState","$a8df043d7f945436$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$a8df043d7f945436$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$d210c08aef54bfde$exports","$e1df7f11bb52dc6f$export$9099ad97b570f7c","$3da63b322060c6a2$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$b24c8303d261dd7e$export$7326ac1b36a49776","$0291ffecc2419d1e$var$tmpExtent","$0291ffecc2419d1e$var$p1","$0291ffecc2419d1e$var$p2","$0291ffecc2419d1e$var$p3","$0291ffecc2419d1e$var$p4","$0291ffecc2419d1e$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$0291ffecc2419d1e$var$rtlRegEx","fromCharCode","$0291ffecc2419d1e$var$horizontalTextAlign","align","test","TEXT_ALIGN","$0291ffecc2419d1e$export$9099ad97b570f7c","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$0511c8c10849dc1a$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$f0224bb0d7b72ca9$var$ORDER","$f0224bb0d7b72ca9$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$f0224bb0d7b72ca9$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$f0224bb0d7b72ca9$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$f0224bb0d7b72ca9$export$9099ad97b570f7c","$10da3d821084ba35$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$10da3d821084ba35$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$fb101ccb7a959b6f$export$9099ad97b570f7c","$9fc422d0124f3c10$export$9099ad97b570f7c","$5fc8a3bf6573bb7d$export$9099ad97b570f7c","ImageBase","$5fc8a3bf6573bb7d$var$__extends","$2fea8d7b0a052aea$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$2fea8d7b0a052aea$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$5fc8a3bf6573bb7d$exports","$3a26b29c6487c166$var$taintedTestContext","$3a26b29c6487c166$var$IconImage","IconImage","imageState_","tainted_","$3a26b29c6487c166$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$2fea8d7b0a052aea$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$3a26b29c6487c166$export$7eb84799c931fe91","$6378478f6911b3e1$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$3a26b29c6487c166$exports","offset_","offsetOrigin_","offsetOrigin","$6378478f6911b3e1$var$__extends","setAnchor","iconImageSize","$d537647cd7e34764$export$5d244421488756f8","$19ef498e0fdaa7a3$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$19ef498e0fdaa7a3$export$65a5cfeed6fd0c33","feature1","feature2","$19ef498e0fdaa7a3$export$f0ea347488340e3d","$19ef498e0fdaa7a3$export$522dfd100dd96ba1","$19ef498e0fdaa7a3$var$renderGeometry","$19ef498e0fdaa7a3$var$renderFeatureInternal","getGeometries","$fc50e91d05c5929c$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$fc50e91d05c5929c$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$d26dae22fe1d838f$export$e7468c0ae08395df","clipped","transforms","imageSmoothingEnabled","$10da3d821084ba35$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$6378478f6911b3e1$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$d537647cd7e34764$export$9fd146a6491490e3","resultFeatures","$d537647cd7e34764$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","$6979b253edf31824$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","loadFeatures","$19ef498e0fdaa7a3$export$f3b3f9822f340683","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$a8df043d7f945436$exports","$16c61758513a2147$export$9099ad97b570f7c","VectorLayer","$16c61758513a2147$var$__extends","$fc50e91d05c5929c$exports","$c2d701923a28fd18$exports","$f7d5b8d41e7ac34b$export$9099ad97b570f7c","opt_maxEntries","rbush_","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","concat","rbush","$bae52fc8280398fa$var$adaptAttributions","attributionLike","$bae52fc8280398fa$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$bae52fc8280398fa$var$__extends","getContextOptions","refresh","setAttributions","setState","$5c1403f2939ff4fe$export$9099ad97b570f7c","$87d0cb4974320275$export$8dbdea330bbd6b3c","$53527a7dd53c26d3$export$9099ad97b570f7c","$4813b003eded0fb8$var$withCredentials","$4813b003eded0fb8$export$52988233cf090939","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$4813b003eded0fb8$export$4355fa6d12274ca5","dataProjection","addFeatures","$b8c6edd12511f3b2$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$b8c6edd12511f3b2$var$__extends","$b8c6edd12511f3b2$export$9099ad97b570f7c","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$bae52fc8280398fa$exports","$6138c5b4bdbde302$export$9099ad97b570f7c","$2670773e9616adac$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$2670773e9616adac$var$__extends","getPreload","getUseInterimTilesOnError","$3d04e27be03144b8$var$TileRange","TileRange","containsTileRange","getHeight","$3d04e27be03144b8$export$ea8082d0226d35a5","$3d04e27be03144b8$export$9099ad97b570f7c","$911c86a56b705ee0$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$911c86a56b705ee0$var$__extends","isDrawableTile","tileState","getTile","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","endTransition","postRenderFunction","tileSource1","frameState1","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$911c86a56b705ee0$export$9099ad97b570f7c","$326310a679f3ff3e$export$9099ad97b570f7c","TileLayer","$326310a679f3ff3e$var$__extends","$911c86a56b705ee0$exports","$2670773e9616adac$exports","$c0f00e1ca40f5de0$export$9099ad97b570f7c","Tile","interimTile","transition_","transitionStarts_","$c0f00e1ca40f5de0$var$__extends","release","refreshInterimChain","getTileCoord","$9f0932f8a34c2627$export$9099ad97b570f7c","ImageTile","tileLoadFunction","tileLoadFunction_","$9f0932f8a34c2627$var$__extends","naturalWidth","naturalHeight","$c0f00e1ca40f5de0$exports","$c79baf82c906261e$var$brokenDiagonalRendering_","$c2aa963399ff5087$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$9a405cae94b418c1$export$5f986e3acaff8610","msImageSmoothingEnabled","$c79baf82c906261e$var$drawTestTriangle","v1","v2","$c79baf82c906261e$var$verifyBrokenDiagonalRendering","$c79baf82c906261e$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$c79baf82c906261e$export$792a797b69be0d58","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$41189646474e5084$export$27dc5719ceda6735","$c79baf82c906261e$var$isBrokenDiagonalRendering","ud","vd","steps","$8cf1db551f7c8651$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$c79baf82c906261e$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$8cf1db551f7c8651$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$cf2f6e20b6b138a4$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$c15fc44d1077d497$export$ea8082d0226d35a5","opt_tileCoord","$c15fc44d1077d497$export$1039fb0288fd71e3","$c15fc44d1077d497$export$a0f0ccbe5bbc0789","$e0d8d793f2458be2$export$9099ad97b570f7c","TileCache","$e0d8d793f2458be2$var$__extends","pruneExceptNewestZ","$c15fc44d1077d497$export$5208a752d34424e5","$9c50562c86c5e818$export$9099ad97b570f7c","$1d0405a55c5b390d$var$tmpTileCoord","$1d0405a55c5b390d$export$9099ad97b570f7c","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$d4d4204e000d87e1$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$d4d4204e000d87e1$var$resolutionsFromExtent","$d4d4204e000d87e1$export$57c49ef1657592d4","$d4d4204e000d87e1$export$9666e825b22d806d","$d4d4204e000d87e1$export$6dfef52f91d4f582","opt_maxResolution","half","$5cca03204735719f$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$e0d8d793f2458be2$exports","tmpSize","tileOptions","$5cca03204735719f$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","$d4d4204e000d87e1$export$5a0d9577a24f3c5b","$c15fc44d1077d497$export$b46b80619528d4e5","$5cca03204735719f$export$8434c8db61edbf9d","TileSourceEvent","$5cca03204735719f$export$9099ad97b570f7c","$598ebbe522bf4b2d$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$598ebbe522bf4b2d$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$c15fc44d1077d497$export$4639c7f2947f4458","$598ebbe522bf4b2d$export$c6a04e0c49b28953","$3e9b4960f3db4741$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","$3e9b4960f3db4741$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$5cca03204735719f$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","$598ebbe522bf4b2d$export$47abe479fba0e55d","$599f0e87b598536d$var$defaultTileLoadFunction","imageTile","$599f0e87b598536d$export$9099ad97b570f7c","TileImage","tileClass","$9f0932f8a34c2627$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$599f0e87b598536d$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$8cf1db551f7c8651$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$3e9b4960f3db4741$exports","$ff7bc28f591d2243$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$d4d4204e000d87e1$export$5731532c605ee56","$ff7bc28f591d2243$var$__extends","$599f0e87b598536d$exports","$8a7bf7ffc046ec6d$export$bd9c1867755cf54e","$8a7bf7ffc046ec6d$export$9099ad97b570f7c","OSM","$8a7bf7ffc046ec6d$var$__extends","$ff7bc28f591d2243$exports","$400ea8eade5f039d$export$7cf753b6a6534915","$400ea8eade5f039d$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","$400ea8eade5f039d$var$__extends","setGeometryName","getGeometryName","handleGeometryChange_","setId","$6a2355e3675a53b0$export$55be7a9e3fef4787","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$31189420a57baeba$export$26b1c556c0e0f127","$6a2355e3675a53b0$export$1a804b04fa5a0253","extrapolate","lo","hi","m0","$c972bb38146ae2f3$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","$c972bb38146ae2f3$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","$fc8464394f271137$export$9099ad97b570f7c","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","$fc8464394f271137$export$534b7b915a5ec453","write","transformed","decimals","power_1","$4c85e641c10b8337$var$getText","$4c85e641c10b8337$export$9099ad97b570f7c","TextFeature","$4c85e641c10b8337$var$__extends","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","$3a138289c0ba9707$export$48b2dcc2b30085f8","opt_destOffset","destOffset","$7b34c46603e8dae2$export$9f51b94628890a3b","numbers","opt_factor","lastNumbers","num","$7b34c46603e8dae2$export$c17d1112ce3a4cba","$7b34c46603e8dae2$export$cf4a33ed98160e52","encoded","$7b34c46603e8dae2$export$79fdd0c358803332","$7b34c46603e8dae2$export$b738def81c75daed","$7b34c46603e8dae2$export$79de2350df130af5","$7b34c46603e8dae2$export$198333b29da49b92","$7b34c46603e8dae2$export$eb6f5335926374a1","$7b34c46603e8dae2$export$136a77958125a9fe","current","$7b34c46603e8dae2$export$9099ad97b570f7c","Polyline","factor_","geometryLayout_","geometryLayout","$7b34c46603e8dae2$var$__extends","$400ea8eade5f039d$exports","getStrideForLayout","$c972bb38146ae2f3$exports","$4c85e641c10b8337$exports","$0f188cdd90b9a59a$export$9099ad97b570f7c","Text1","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$e1e982f9ca567f95$export$9099ad97b570f7c","$1d07770e306558e0$var$Property","$1d07770e306558e0$export$9099ad97b570f7c","Overlay","insertFirst","autoPan","autoPanAnimation","margin","autoPanMargin","rendered","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","$1d07770e306558e0$var$__extends","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","msTransform","getOptions","$aa0da8d672d970c6$var$coordinates","$aa0da8d672d970c6$var$distances","$aa0da8d672d970c6$exports","aid_stations","getLatLongFromDistance","$beb310745d0018c3$var$vectorSource","$b8c6edd12511f3b2$exports","$beb310745d0018c3$var$vectorLayer","$16c61758513a2147$exports","$beb310745d0018c3$var$styles","route","rectangle","SQRT2","icon","icon2","$beb310745d0018c3$var$map","$fb244fe1c9d9d25f$exports","$326310a679f3ff3e$exports","$8a7bf7ffc046ec6d$exports","$beb310745d0018c3$var$utils","reject","fetch","$beb310745d0018c3$var$element","$beb310745d0018c3$var$popup","$1d07770e306558e0$exports","$beb310745d0018c3$var$lines","$beb310745d0018c3$var$markerFeature","splits","runner","$beb310745d0018c3$var$runners","NAME","$","popover","MARK","TIME","sT","parse","eT","d_p","random","$beb310745d0018c3$var$getPrediction","BIB","csv","headers","currentline","$beb310745d0018c3$var$csvJSON","datalist","startsWith","exptime","km","cT","toLocaleString","$beb310745d0018c3$var$getExpTime","html","content"],"version":3,"file":"index.02e7fea2.js.map"}