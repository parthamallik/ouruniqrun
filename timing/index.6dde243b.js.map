{"mappings":"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U,UACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,UACV,SAAU,WACV,OAAQ,WACR,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,gBAChB,SAAU,WACV,SAAU,WACV,SAAU,QACV,QAAS,WACT,cAAe,iBACf,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,SACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,cAAe,iBACf,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,cAAe,eACf,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,UACV,QAAS,WACT,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,gBAChB,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,UACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,cAAe,iBACf,eAAgB,iBAChB,cAAe,iBACf,SAAU,WACV,SAAU,WACV,SAAU,WACV,OAAQ,WACR,QAAS,WACT,QAAS,UACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,UACT,eAAgB,gBAChB,cAAe,iBACf,cAAe,iBACf,QAAS,WACT,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,OAAQ,WACR,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,SACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,OAAQ,WACR,SAAU,WACV,SAAU,WACV,QAAS,WACT,QAAS,UACT,eAAgB,iBAChB,cAAe,gBACf,eAAgB,gBAChB,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,cAAe,iBACf,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,SACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,QAAS,WACT,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,UACT,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,gBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,eAAgB,gBAChB,eAAgB,iBAChB,eAAgB,gBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,eAAgB,gBAChB,eAAgB,iBAChB,eAAgB,gBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,UACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,gBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,WAChB,eAAgB,WAChB,eAAgB,WAChB,SAAU,WACV,QAAS,WACT,SAAU,UACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,cAAe,iBACf,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,SACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,SACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,eAAgB,gBAChB,cAAe,iBACf,eAAgB,iBAChB,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,cAAe,iBACf,eAAgB,iBAChB,eAAgB,iBAChB,QAAS,WACT,QAAS,WACT,SAAU,WACV,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,cAAe,iBACf,eAAgB,iBAChB,eAAgB,iBAChB,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,SACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,UACV,QAAS,WACT,QAAS,UACT,SAAU,WACV,QAAS,WACT,SAAU,UACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,SACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,UACV,SAAU,UACV,SAAU,WACV,eAAgB,gBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,gBAChB,SAAU,WACV,SAAU,UACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,QAAS,WACT,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,cAAe,iBACf,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,cAAe,iBACf,eAAgB,iBAChB,eAAgB,iBAChB,QAAS,WACT,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,UACV,eAAgB,iBAChB,cAAe,iBACf,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,gBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,cAAe,iBACf,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,QAAS,WACT,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,QAAS,UACT,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,gBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,UACV,QAAS,WACT,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,OAAQ,WACR,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,gBAChB,QAAS,UACT,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,QAAS,UACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,QACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,cAAe,iBACf,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,cAAe,iBACf,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,UACV,eAAgB,iBAChB,cAAe,iBACf,SAAU,WACV,SAAU,UACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,SACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,UACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,eAAgB,iBAChB,eAAgB,gBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,UACT,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,gBAChB,eAAgB,iBAChB,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,MAAO,WACP,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,eAAgB,iBAChB,cAAe,eACf,eAAgB,iBAChB,SAAU,WACV,QAAS,UACT,SAAU,UACV,QAAS,WACT,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,cAAe,iBACf,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,cAAe,iBACf,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,eAAgB,gBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,eAAgB,iBAChB,eAAgB,gBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,cAAe,iBACf,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,QAAS,UACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,SACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,gBAChB,cAAe,iBACf,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,QAAS,WACT,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,gBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,QAAS,WACT,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,UACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,SAAU,WACV,SAAU,UACV,SAAU,UACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,eAAgB,WAChB,cAAe,WACf,aAAc,WACd,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,cAAe,iBACf,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,SACV,QAAS,WACT,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,UACV,SAAU,WACV,MAAO,WACP,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,OAAQ,WACR,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,OAAQ,WACR,eAAgB,iBAChB,eAAgB,gBAChB,eAAgB,iBAChB,QAAS,WACT,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,cAAe,iBACf,SAAU,WACV,QAAS,WACT,SAAU,SACV,QAAS,WACT,SAAU,WACV,SAAU,UACV,SAAU,WACV,eAAgB,iBAChB,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,eAAgB,gBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,UACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,UACV,eAAgB,iBAChB,eAAgB,iBAChB,cAAe,iBACf,SAAU,WACV,SAAU,WACV,QAAS,WACT,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,gBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,gBAChB,SAAU,WACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,UACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,SAAU,WACV,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAEjBC,GAAS,CACL,EACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,gBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,eACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,iBACA,iBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,eACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,mBACA,iBACA,iBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,gBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,gBACA,iBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,gBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,gBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,gBACA,mBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,iBACA,mBACA,kBACA,mBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,iBACA,iBACA,kBACA,mBACA,mBACA,kBACA,gBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,k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","sources":["node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/TextFeature.js","node_modules/ol/src/geom/flat/flip.js","node_modules/ol/src/format/Polyline.js","node_modules/ol/src/style/Text.js","node_modules/ol/src/OverlayPositioning.js","node_modules/ol/src/Overlay.js","route-info.js","main.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in desccending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type|Type[], listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return} CombinedOnSignature\n */\n\n/***\n * @typedef {import(\"./events\").EventsKey|Array<import(\"./events\").EventsKey>} OnReturn\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.on = this.onInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.once = this.onceInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, void>}\n     */\n    this.un = this.unInternal;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (!hasArea(size)) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../Observable\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_ === VOID ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.TEXT;\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\nexport default TextFeature;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_dest,\n  opt_destOffset\n) {\n  let dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {assert} from '../asserts.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [opt_options] Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/GeometryLayout\").default}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : GeometryLayout.XY;\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    const geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    const feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(\n          geometry,\n          true,\n          this.adaptOptions(opt_options)\n        )\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [opt_factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [opt_factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./Observable\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./Observable\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (\n            options.positioning\n          )\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (\n      this.get(Property.MAP)\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (\n      this.get(Property.POSITIONING)\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","var coordinates = [\n    [12.90715, 77.70536],\n    [12.90737, 77.70542],\n    [12.90771, 77.70549],\n    [12.90828, 77.7056],\n    [12.90866, 77.70563],\n    [12.90884, 77.70575],\n    [12.90892, 77.70579],\n    [12.90902, 77.70581],\n    [12.90937, 77.70585],\n    [12.9097, 77.70594],\n    [12.91019, 77.70612],\n    [12.9109, 77.7065],\n    [12.91147, 77.70688],\n    [12.91175, 77.70709],\n    [12.9119, 77.70723],\n    [12.912, 77.70736],\n    [12.91212, 77.70761],\n    [12.91219, 77.7079],\n    [12.91231, 77.70832],\n    [12.91239, 77.7087],\n    [12.9126, 77.71024],\n    [12.9128, 77.71165],\n    [12.91297, 77.7128],\n    [12.91298, 77.71294],\n    [12.91296, 77.71307],\n    [12.91288, 77.71328],\n    [12.91272, 77.71359],\n    [12.91229, 77.71444],\n    [12.91228, 77.71456],\n    [12.91288, 77.7149],\n    [12.91329, 77.71512],\n    [12.91382, 77.71543],\n    [12.91393, 77.71551],\n    [12.91404, 77.71563],\n    [12.91435, 77.71604],\n    [12.91468, 77.71646],\n    [12.91492, 77.71678],\n    [12.91511, 77.71712],\n    [12.91554, 77.71782],\n    [12.91555, 77.7179],\n    [12.91572, 77.71812],\n    [12.91586, 77.71841],\n    [12.91585, 77.71847],\n    [12.91576, 77.71917],\n    [12.91564, 77.71956],\n    [12.91553, 77.72005],\n    [12.91545, 77.72043],\n    [12.91544, 77.72073],\n    [12.91546, 77.72089],\n    [12.91565, 77.72148],\n    [12.91553, 77.72228],\n    [12.9155, 77.72249],\n    [12.91547, 77.72287],\n    [12.91549, 77.72325],\n    [12.91554, 77.72349],\n    [12.91568, 77.72452],\n    [12.91579, 77.72469],\n    [12.91587, 77.72476],\n    [12.91614, 77.72491],\n    [12.91664, 77.72513],\n    [12.91705, 77.72536],\n    [12.91726, 77.72551],\n    [12.91748, 77.72576],\n    [12.91756, 77.72589],\n    [12.91765, 77.72606],\n    [12.91774, 77.72634],\n    [12.91782, 77.72672],\n    [12.918, 77.72831],\n    [12.91813, 77.73011],\n    [12.91827, 77.73114],\n    [12.9187, 77.73425],\n    [12.91872, 77.7345],\n    [12.91878, 77.73469],\n    [12.91885, 77.73485],\n    [12.919, 77.73504],\n    [12.91911, 77.73522],\n    [12.9192, 77.73547],\n    [12.91919, 77.73583],\n    [12.919157484, 77.73631773999],\n    [12.91915, 77.73643],\n    [12.919194487, 77.73643],\n    [12.91919475672, 77.73643],\n    [12.91919502644, 77.73643],\n    [12.91922, 77.73643],\n    [12.91985116853, 77.73640289467],\n    [12.91985400763, 77.73640277274],\n    [12.91985427712, 77.73640276117],\n    [12.92011953842, 77.73639136957],\n    [12.92085, 77.73636],\n    [12.92085, 77.73646],\n    [12.92092, 77.73646],\n    [12.92091, 77.73692],\n    [12.92091, 77.73695],\n    [12.92089641934, 77.73703487959],\n    [12.92089596468, 77.7370377212],\n    [12.92089592099, 77.73703799427],\n    [12.92083, 77.73745],\n    [12.92079270856, 77.73761486846],\n    [12.92079208356, 77.73761763162],\n    [12.92079202259, 77.73761790118],\n    [12.92064, 77.73829],\n    [12.9206, 77.7385],\n    [12.9206, 77.73879],\n    [12.92072, 77.73929],\n    [12.92076, 77.73963],\n    [12.92075, 77.73983],\n    [12.92071, 77.74002],\n    [12.92062, 77.74018],\n    [12.92044, 77.74047],\n    [12.9204, 77.74058],\n    [12.92041, 77.74058],\n    [12.92036, 77.74098],\n    [12.92034239849, 77.74123229246],\n    [12.9203422102, 77.74123499141],\n    [12.92034219094, 77.74123526743],\n    [12.9203, 77.74184],\n    [12.92021, 77.74238],\n    [12.92021, 77.7425],\n    [12.92021, 77.74281],\n    [12.92017, 77.74324],\n    [12.92008, 77.74379],\n    [12.92006349506, 77.74393078047],\n    [12.92006316655, 77.74393358252],\n    [12.92006313434, 77.74393385727],\n    [12.91991, 77.74524],\n    [12.91978, 77.74627],\n    [12.91961500632, 77.74728168819],\n    [12.91961466882, 77.7472837576],\n    [12.91961462431, 77.74728403052],\n    [12.9194, 77.7486],\n    [12.91929, 77.74917],\n    [12.91919783275, 77.74960102232],\n    [12.91919728177, 77.74960359901],\n    [12.91919722397, 77.7496038693],\n    [12.91895, 77.75076],\n    [12.91892, 77.75089],\n    [12.91865318013, 77.75207402364],\n    [12.91865271403, 77.75207609197],\n    [12.91865265327, 77.75207636157],\n    [12.91844, 77.75302],\n    [12.91835, 77.75339],\n    [12.91831, 77.75365],\n    [12.91828799084, 77.75427360045],\n    [12.91828790857, 77.75427593124],\n    [12.91828789881, 77.75427620777],\n    [12.91828, 77.7545],\n    [12.91828, 77.75461],\n    [12.91827, 77.75505],\n    [12.91820836566, 77.75602246601],\n    [12.91820823911, 77.75602446265],\n    [12.91820822161, 77.75602473878],\n    [12.91818, 77.75647],\n    [12.91816, 77.7568],\n    [12.91811, 77.75713],\n    [12.918, 77.75771],\n    [12.91797374852, 77.75785515655],\n    [12.91797324402, 77.75785794614],\n    [12.91797319482, 77.7578582182],\n    [12.91783, 77.75865],\n    [12.91776, 77.75963],\n    [12.91769, 77.76],\n    [12.9172, 77.76186],\n    [12.9168819476, 77.76321172281],\n    [12.91688148045, 77.76321370819],\n    [12.91688141716, 77.76321397717],\n    [12.91688, 77.76322],\n    [12.91663, 77.76411],\n    [12.91643, 77.76471],\n    [12.91617, 77.765],\n    [12.91603, 77.76522],\n    [12.91595, 77.76539],\n    [12.91583, 77.7655],\n    [12.91567, 77.76555],\n    [12.91553, 77.76563],\n    [12.91534, 77.76582],\n    [12.91521, 77.76589],\n    [12.91505, 77.76594],\n    [12.91494, 77.76603],\n    [12.91488, 77.76613],\n    [12.9148, 77.76645],\n    [12.91468, 77.76732],\n    [12.91464, 77.76773],\n    [12.91458, 77.76802],\n    [12.91429512711, 77.76882120554],\n    [12.91429421419, 77.76882377312],\n    [12.91429412176, 77.76882403307],\n    [12.91426, 77.76892],\n    [12.91402, 77.76954],\n    [12.91378, 77.77008],\n    [12.91345, 77.77073],\n    [12.91323, 77.77112],\n    [12.91319, 77.77121],\n    [12.91312, 77.77118],\n    [12.91309, 77.77125],\n    [12.91316, 77.77128],\n    [12.91308, 77.77149],\n    [12.91291, 77.77193],\n    [12.91288, 77.77198],\n    [12.91276, 77.77214],\n    [12.9123, 77.77258],\n    [12.91194, 77.77295],\n    [12.91190185935, 77.77300721102],\n    [12.91190019466, 77.77300970806],\n    [12.9119000424, 77.77300993645],\n    [12.9118, 77.77316],\n    [12.91173, 77.77337],\n    [12.91151, 77.77439],\n    [12.91148, 77.77477],\n    [12.91139, 77.77509],\n    [12.9113, 77.77543],\n    [12.91129, 77.77556],\n    [12.91132, 77.77578],\n    [12.91141, 77.77618],\n    [12.9115, 77.77645],\n    [12.91164, 77.77671],\n    [12.91169, 77.77681],\n    [12.91178, 77.77686],\n    [12.9119475554, 77.776909281],\n    [12.91195, 77.77691],\n    [12.91202, 77.77701],\n    [12.91205, 77.77716],\n    [12.91208, 77.7777],\n    [12.91207, 77.77787],\n    [12.91196091735, 77.77862448912],\n    [12.91196048399, 77.77862748645],\n    [12.91196044442, 77.77862776016],\n    [12.91195, 77.7787],\n    [12.9119, 77.77892],\n    [12.91177, 77.77918],\n    [12.91154307102, 77.77947176609],\n    [12.91154049313, 77.77947508052],\n    [12.91154032491, 77.7794752968],\n    [12.91142, 77.77963],\n    [12.91119, 77.77996],\n    [12.91096138495, 77.78034864585],\n    [12.91095936725, 77.78035207595],\n    [12.91095922789, 77.78035231285],\n    [12.91089, 77.78047],\n    [12.91076, 77.7808],\n    [12.91061, 77.78135],\n    [12.91051401905, 77.78175449183],\n    [12.91051323005, 77.78175781691],\n    [12.91051316625, 77.78175808576],\n    [12.91047, 77.78194],\n    [12.91038, 77.78248],\n    [12.91009, 77.78377],\n    [12.91001, 77.78423],\n    [12.90981, 77.78568],\n    [12.90964, 77.78663],\n    [12.90943, 77.78757],\n    [12.90912, 77.78846],\n    [12.90906, 77.78867],\n    [12.90905, 77.78883],\n    [12.90908, 77.78924],\n    [12.90923, 77.78966],\n    [12.90923, 77.78998],\n    [12.90919, 77.79031],\n    [12.90903, 77.79164],\n    [12.90899, 77.79172],\n    [12.90889, 77.79184],\n    [12.9086, 77.79213],\n    [12.90825, 77.79258],\n    [12.90812, 77.79275],\n    [12.90797, 77.7931],\n    [12.90791, 77.79333],\n    [12.90781, 77.79383],\n    [12.9078, 77.79407],\n    [12.90792, 77.79487],\n    [12.9079725504, 77.79526412766],\n    [12.90797299155, 77.79526743631],\n    [12.9079730281, 77.79526771045],\n    [12.90798, 77.79532],\n    [12.90801, 77.79563],\n    [12.90801, 77.79576],\n    [12.908, 77.79596],\n    [12.9079, 77.79619],\n    [12.9078, 77.7963],\n    [12.90764, 77.79639],\n    [12.90737, 77.79646],\n    [12.90732, 77.79651],\n    [12.90721, 77.79686],\n    [12.90718, 77.79693],\n    [12.90704, 77.79712],\n    [12.9069, 77.79727],\n    [12.90677, 77.79741],\n    [12.90667, 77.79758],\n    [12.90665, 77.79764],\n    [12.90656, 77.79806],\n    [12.90653, 77.79813],\n    [12.90644, 77.79822],\n    [12.90628, 77.79832],\n    [12.90594274728, 77.79839708634],\n    [12.90593752683, 77.79839827959],\n    [12.90593726358, 77.79839833976],\n    [12.90593, 77.7984],\n    [12.90579, 77.79847],\n    [12.90547, 77.79869],\n    [12.90509, 77.79904],\n    [12.90459, 77.79961],\n    [12.90431, 77.80002],\n    [12.90395, 77.80042],\n    [12.90305, 77.80135],\n    [12.90276, 77.80165],\n    [12.90269, 77.80175],\n    [12.90251, 77.80203],\n    [12.90235, 77.80229],\n    [12.90226, 77.80249],\n    [12.90219, 77.80265],\n    [12.90172, 77.80371],\n    [12.9013, 77.8047],\n    [12.90129561064, 77.8047118513],\n    [12.9012943331, 77.80471530069],\n    [12.9012942373, 77.80471555934],\n    [12.9011, 77.80524],\n    [12.90051, 77.80679],\n    [12.90024, 77.80748],\n    [12.90006848026, 77.80783206691],\n    [12.90006682565, 77.80783546321],\n    [12.90006670507, 77.80783571071],\n    [12.90005, 77.80787],\n    [12.89987, 77.80821],\n    [12.89973, 77.80845],\n    [12.89942, 77.80879],\n    [12.89907, 77.80911],\n    [12.89855, 77.80956],\n    [12.89815, 77.80989],\n    [12.89783, 77.8102],\n    [12.89733, 77.81059],\n    [12.89693390517, 77.81084324122],\n    [12.89692943287, 77.81084610055],\n    [12.89692920398, 77.81084624689],\n    [12.89672, 77.81098],\n    [12.89644, 77.81114],\n    [12.896, 77.81146],\n    [12.89584, 77.81164],\n    [12.89572, 77.81198],\n    [12.89568, 77.81249],\n    [12.89561, 77.81298],\n    [12.89553, 77.81341],\n    [12.89525, 77.81444],\n    [12.89513, 77.81483],\n    [12.89507433369, 77.81494829094],\n    [12.89507275787, 77.81495163956],\n    [12.89507264062, 77.81495188872],\n    [12.89505, 77.815],\n    [12.89486, 77.81532],\n    [12.89463, 77.81562],\n    [12.89448, 77.81589],\n    [12.89431, 77.81625],\n    [12.89418, 77.81656],\n    [12.89411, 77.81681],\n    [12.89413, 77.81708],\n    [12.89416, 77.81724],\n    [12.89426, 77.81751],\n    [12.89435, 77.8177],\n    [12.89441, 77.81779],\n    [12.89451, 77.81788],\n    [12.89464, 77.81798],\n    [12.89486, 77.81819],\n    [12.89498, 77.81844],\n    [12.89502, 77.8186],\n    [12.89504, 77.81884],\n    [12.89504, 77.81929],\n    [12.895, 77.81948],\n    [12.89499, 77.81958],\n    [12.89498, 77.81977],\n    [12.8949, 77.82031],\n    [12.8949, 77.8205],\n    [12.89489750934, 77.82061208303],\n    [12.8948974298, 77.8206156625],\n    [12.89489742365, 77.8206159391],\n    [12.89489, 77.82095],\n    [12.89487, 77.82135],\n    [12.8948, 77.82209],\n    [12.89483, 77.82243],\n    [12.89481, 77.82272],\n    [12.89473, 77.82312],\n    [12.89465, 77.82337],\n    [12.89448, 77.82373],\n    [12.8944353216, 77.82382270774],\n    [12.89408, 77.82456],\n    [12.89402, 77.82473],\n    [12.89401, 77.82484],\n    [12.89404, 77.825],\n    [12.89413, 77.82514],\n    [12.89442, 77.82548],\n    [12.89524, 77.82634],\n    [12.89538, 77.82652],\n    [12.89548, 77.82674],\n    [12.89560935617, 77.82726049935],\n    [12.89561016568, 77.82726375663],\n    [12.89561023231, 77.82726402474],\n    [12.8959, 77.82843],\n    [12.89596, 77.82866],\n    [12.89597, 77.82874],\n    [12.89605830223, 77.82869752557],\n    [12.89676, 77.82836],\n    [12.89779, 77.82783],\n    [12.89806, 77.82768],\n    [12.89867, 77.82731],\n    [12.89884692325, 77.82722743602],\n    [12.89885087277, 77.82722559291],\n    [12.89885120014, 77.82722544014],\n    [12.89942, 77.82696],\n    [12.89973, 77.82682],\n    [12.90028, 77.82666],\n    [12.90044, 77.82662],\n    [12.90042, 77.82655],\n    [12.90056, 77.82652],\n    [12.90087, 77.82649],\n    [12.90127, 77.82648],\n    [12.90169, 77.82652],\n    [12.90196, 77.82651],\n    [12.9023, 77.8265],\n    [12.90285, 77.82655],\n    [12.9033, 77.82656],\n    [12.90353, 77.82656],\n    [12.90407, 77.82653],\n    [12.90445260422, 77.82653364384],\n    [12.90445816523, 77.8265336968],\n    [12.90445852487, 77.82653370023],\n    [12.90512, 77.82654],\n    [12.90557, 77.82654],\n    [12.90575516685, 77.8265333869],\n    [12.90575966552, 77.82653322624],\n    [12.90576002496, 77.8265332134],\n    [12.90585, 77.82653],\n    [12.90672, 77.82628],\n    [12.90716, 77.82612],\n    [12.90736, 77.82607],\n    [12.90772, 77.82602],\n    [12.90854, 77.82589],\n    [12.90874468203, 77.82585130418],\n    [12.90874918786, 77.82585045234],\n    [12.90874954156, 77.82585038547],\n    [12.91055, 77.82551],\n    [12.91119, 77.82541],\n    [12.91138937703, 77.8253422119],\n    [12.91139365123, 77.82534075867],\n    [12.91139399262, 77.8253406426],\n    [12.91169, 77.82524],\n    [12.91302, 77.82467],\n    [12.91312, 77.82462],\n    [12.91357, 77.82433],\n    [12.91393, 77.82414],\n    [12.91422, 77.82405],\n    [12.91457, 77.82398],\n    [12.91482, 77.82399],\n    [12.91526, 77.82408],\n    [12.9153, 77.8241],\n    [12.91535, 77.82405],\n    [12.91557, 77.82376],\n    [12.91575, 77.82355],\n    [12.91594, 77.82342],\n    [12.91627, 77.82323],\n    [12.91638394381, 77.8232000148],\n    [12.91638790889, 77.82319897136],\n    [12.91638825727, 77.82319887968],\n    [12.91646, 77.82318],\n    [12.91669, 77.82318],\n    [12.91707, 77.82322],\n    [12.91753, 77.82339],\n    [12.91802, 77.82346],\n    [12.91843, 77.82347],\n    [12.91906, 77.82344],\n    [12.92008183284, 77.82344],\n    [12.92009082208, 77.82344],\n    [12.92009118173, 77.82344],\n    [12.92019, 77.82344],\n    [12.9204, 77.82346],\n    [12.92055, 77.8235],\n    [12.92102, 77.82367],\n    [12.9219, 77.82397],\n    [12.92233, 77.82413],\n    [12.92252, 77.82423],\n    [12.92274, 77.82434],\n    [12.92297, 77.82441],\n    [12.92311, 77.82443],\n    [12.92349, 77.82444],\n    [12.92377, 77.82443],\n    [12.92411, 77.8244],\n    [12.92419646174, 77.82434361192],\n    [12.92434, 77.82425],\n    [12.92451, 77.82413],\n    [12.92467, 77.82407],\n    [12.92492, 77.82405],\n    [12.92516, 77.82406],\n    [12.9264, 77.82437],\n    [12.92729, 77.8246],\n    [12.92738, 77.82459],\n    [12.92745, 77.82454],\n    [12.92801, 77.82372],\n    [12.92856, 77.82267],\n    [12.92877, 77.82216],\n    [12.92886, 77.82184],\n    [12.92893356094, 77.82164528018],\n    [12.92893481615, 77.82164195757],\n    [12.92893494614, 77.82164161348],\n    [12.92903, 77.82139],\n    [12.92924, 77.82098],\n    [12.92935, 77.82075],\n    [12.92939, 77.82058],\n    [12.9294, 77.82047],\n    [12.92939, 77.8203],\n    [12.92935, 77.82001],\n    [12.92922, 77.81956],\n    [12.92918, 77.81935],\n    [12.92917, 77.81916],\n    [12.92919, 77.81907],\n    [12.92927, 77.81901],\n    [12.92938, 77.81899],\n    [12.9299, 77.81888],\n    [12.93134, 77.81855],\n    [12.93151, 77.81848],\n    [12.93167, 77.81827],\n    [12.93185, 77.81811],\n    [12.9329, 77.81735],\n    [12.93313, 77.8172],\n    [12.93367, 77.81694],\n    [12.93427, 77.81669],\n    [12.93467, 77.81649],\n    [12.93512, 77.81627],\n    [12.93614, 77.81585],\n    [12.9371004552, 77.81543837701],\n    [12.93710793217, 77.81543517259],\n    [12.93710826405, 77.81543503035],\n    [12.93747, 77.81528],\n    [12.93781, 77.81516],\n    [12.93797, 77.81514],\n    [12.93837, 77.81519],\n    [12.93858, 77.81523],\n    [12.93895, 77.81528],\n    [12.9393, 77.81528],\n    [12.93959, 77.81527],\n    [12.93981, 77.81519],\n    [12.94045, 77.81499],\n    [12.94085, 77.81495],\n    [12.94144, 77.81495],\n    [12.94234, 77.81504],\n    [12.94315121086, 77.81526686371],\n    [12.94315858716, 77.81526892657],\n    [12.94315893417, 77.81526902362],\n    [12.94352, 77.81537],\n    [12.9441, 77.81553],\n    [12.94436, 77.81558],\n    [12.94455, 77.81559],\n    [12.94476, 77.81558],\n    [12.94513, 77.81547],\n    [12.94549, 77.81539],\n    [12.94579, 77.81536],\n    [12.94602, 77.81533],\n    [12.94631, 77.81524],\n    [12.94669, 77.81519],\n    [12.94689, 77.81514],\n    [12.94707, 77.81505],\n    [12.94714, 77.815],\n    [12.94728, 77.81488],\n    [12.94738, 77.81474],\n    [12.94745, 77.81463],\n    [12.94764, 77.8142],\n    [12.94771, 77.81397],\n    [12.94773, 77.81384],\n    [12.94765, 77.81362],\n    [12.94746, 77.81327],\n    [12.94741, 77.81302],\n    [12.94746, 77.81257],\n    [12.94757, 77.81223],\n    [12.94771, 77.812],\n    [12.94817, 77.81156],\n    [12.94836, 77.81129],\n    [12.9485, 77.81105],\n    [12.94865, 77.81082],\n    [12.94867633934, 77.8107883928],\n    [12.9486786637, 77.81078560357],\n    [12.94867889745, 77.81078532307],\n    [12.9487, 77.81076],\n    [12.94879, 77.81073],\n    [12.94891, 77.81075],\n    [12.94923, 77.81083],\n    [12.94922, 77.81091],\n    [12.94927, 77.81091],\n    [12.94944, 77.81092],\n    [12.94965, 77.81092],\n    [12.94975, 77.81087],\n    [12.9498, 77.81083],\n    [12.94989, 77.81055],\n    [12.94996, 77.8103],\n    [12.95007, 77.80988],\n    [12.95013, 77.80981],\n    [12.95017, 77.80979],\n    [12.95021, 77.80981],\n    [12.95027, 77.80984],\n    [12.95106, 77.81007],\n    [12.95133, 77.81009],\n    [12.95145, 77.81007],\n    [12.95173, 77.80993],\n    [12.95258, 77.80941],\n    [12.95262367957, 77.80938186747],\n    [12.95262680661, 77.80937985345],\n    [12.95262711124, 77.80937965725],\n    [12.95317, 77.80903],\n    [12.95333, 77.80891],\n    [12.95349, 77.80879],\n    [12.95345, 77.80873],\n    [12.95348, 77.8087],\n    [12.9536972143, 77.80851987165],\n    [12.95370056012, 77.80851709707],\n    [12.95370083987, 77.80851686509],\n    [12.9543, 77.80802],\n    [12.9548, 77.80748],\n    [12.95489, 77.80737],\n    [12.95491387175, 77.80733248725],\n    [12.95496, 77.80726],\n    [12.95492, 77.80715],\n    [12.95478, 77.80673],\n    [12.95468, 77.80639],\n    [12.95464, 77.80599],\n    [12.95462, 77.8054],\n    [12.95462, 77.80497],\n    [12.95464, 77.80487],\n    [12.95472, 77.80473],\n    [12.95478246556, 77.80467143857],\n    [12.95478520918, 77.80466886642],\n    [12.95478547473, 77.80466861747],\n    [12.95488, 77.80458],\n    [12.95522, 77.80433],\n    [12.95542, 77.80415],\n    [12.95556, 77.80397],\n    [12.9561082965, 77.80313042164],\n    [12.95611077773, 77.80312662224],\n    [12.95611097797, 77.80312631563],\n    [12.9562, 77.80299],\n    [12.95626, 77.80274],\n    [12.95626, 77.80254],\n    [12.95603, 77.80187],\n    [12.95587, 77.80158],\n    [12.95563, 77.80131],\n    [12.95523, 77.80092],\n    [12.95472, 77.80048],\n    [12.95453, 77.80031],\n    [12.95446, 77.80018],\n    [12.95439, 77.79974],\n    [12.95435, 77.7994],\n    [12.95431, 77.799],\n    [12.95421, 77.79865],\n    [12.95405528391, 77.79824045731],\n    [12.95405404334, 77.79823717344],\n    [12.95405391333, 77.79823682931],\n    [12.95404, 77.7982],\n    [12.9539, 77.79789],\n    [12.9538, 77.7977],\n    [12.95374, 77.79759],\n    [12.9537, 77.79743],\n    [12.95365, 77.7972],\n    [12.95351, 77.7971],\n    [12.95328, 77.79703],\n    [12.95271, 77.79697],\n    [12.95241, 77.797],\n    [12.95171, 77.79715],\n    [12.95134, 77.79724],\n    [12.9512, 77.79726],\n    [12.95067, 77.7973],\n    [12.94997, 77.7973],\n    [12.94958, 77.79729],\n    [12.94947001085, 77.7972984607],\n    [12.94946592694, 77.79729877485],\n    [12.94946556826, 77.79729880244],\n    [12.94945, 77.7973],\n    [12.94917, 77.79742],\n    [12.94886, 77.79756],\n    [12.94848, 77.79769],\n    [12.94806, 77.7978],\n    [12.9474, 77.79794],\n    [12.94681, 77.79806],\n    [12.94666, 77.79808],\n    [12.94626, 77.79812],\n    [12.9454, 77.79819],\n    [12.94476, 77.79822],\n    [12.94410750133, 77.79826762778],\n    [12.94410052484, 77.79826813701],\n    [12.94410016606, 77.7982681632],\n    [12.94339, 77.79832],\n    [12.94251, 77.7984],\n    [12.94226, 77.7984],\n    [12.94206, 77.79835],\n    [12.94176, 77.79823],\n    [12.94127, 77.79802],\n    [12.94075463731, 77.79785117425],\n    [12.94074883678, 77.79784927408],\n    [12.94074849413, 77.79784916183],\n    [12.94069, 77.79783],\n    [12.93998, 77.79764],\n    [12.93966, 77.79759],\n    [12.93951, 77.79758],\n    [12.93877, 77.79752],\n    [12.9381, 77.79746],\n    [12.93734, 77.79739],\n    [12.93679, 77.79733],\n    [12.93671, 77.79732],\n    [12.93672, 77.79725],\n    [12.93675, 77.79709],\n    [12.93707, 77.79625],\n    [12.93726, 77.79554],\n    [12.93741, 77.79488],\n    [12.93749, 77.79454],\n    [12.9375, 77.79454],\n    [12.93762, 77.79399],\n    [12.93779, 77.79303],\n    [12.93781, 77.79238],\n    [12.93787777245, 77.79171074865],\n    [12.93787807145, 77.79170779599],\n    [12.93787810862, 77.79170742891],\n    [12.93789, 77.79159],\n    [12.93798, 77.79041],\n    [12.9382, 77.78862],\n    [12.93822353195, 77.78843174479],\n    [12.93822395697, 77.78842834463],\n    [12.93822400273, 77.78842797857],\n    [12.93824, 77.7883],\n    [12.93826, 77.78778],\n    [12.93824, 77.78771],\n    [12.93814, 77.78759],\n    [12.93791, 77.78737],\n    [12.93785, 77.78728],\n    [12.93783, 77.78711],\n    [12.93787, 77.78664],\n    [12.93786, 77.78657],\n    [12.93786000002, 77.78641357697],\n    [12.93786000002, 77.78641013493],\n    [12.93786000002, 77.78640976587],\n    [12.93786, 77.78633],\n    [12.93779, 77.78632],\n    [12.93779, 77.78628],\n    [12.93784, 77.78612],\n    [12.9381430462, 77.78543814608],\n    [12.93816, 77.7854],\n    [12.93813, 77.78541],\n    [12.93803, 77.78542],\n    [12.93791, 77.78542],\n    [12.93775, 77.78538],\n    [12.93758, 77.78531],\n    [12.9373776286, 77.78525217958],\n    [12.93737334379, 77.78525095535],\n    [12.93737291063, 77.78525083159],\n    [12.9373, 77.78523],\n    [12.93697, 77.78519],\n    [12.93677, 77.78517],\n    [12.9366, 77.78511],\n    [12.93663, 77.78504],\n    [12.93661, 77.78503],\n    [12.9364, 77.78496],\n    [12.93603, 77.7848],\n    [12.93577433206, 77.78476882096],\n    [12.9357695898, 77.78476824264],\n    [12.93576914331, 77.78476818819],\n    [12.93562, 77.78475],\n    [12.93507, 77.78476],\n    [12.93495, 77.78481],\n    [12.93483, 77.78489],\n    [12.93469, 77.78497],\n    [12.93429, 77.78496],\n    [12.93379, 77.78502],\n    [12.93365, 77.78507],\n    [12.93358039252, 77.78507580062],\n    [12.93357661541, 77.78507611538],\n    [12.93357616724, 77.78507615273],\n    [12.93353, 77.78508],\n    [12.93298, 77.78498],\n    [12.93248, 77.78496],\n    [12.93247, 77.78503],\n    [12.93241, 77.78504],\n    [12.93224681255, 77.78508799631],\n    [12.93224273096, 77.78508919677],\n    [12.93224229873, 77.7850893239],\n    [12.93224, 77.78509],\n    [12.93214, 77.78509],\n    [12.93105, 77.78496],\n    [12.93095, 77.78488],\n    [12.93089, 77.7848],\n    [12.93082, 77.78426],\n    [12.9308, 77.78414],\n    [12.93073, 77.78407],\n    [12.93033, 77.78383],\n    [12.92999, 77.78361],\n    [12.92943, 77.78321],\n    [12.92909, 77.78296],\n    [12.92869, 77.78274],\n    [12.92798, 77.78243],\n    [12.92761, 77.78224],\n    [12.92744, 77.78214],\n    [12.92668, 77.78177],\n    [12.92663, 77.78177],\n    [12.92659, 77.78181],\n    [12.92654, 77.78175],\n    [12.92632, 77.78166],\n    [12.92554, 77.78131],\n    [12.92509, 77.78119],\n    [12.92426, 77.78087],\n    [12.92381, 77.78062],\n    [12.92335, 77.78038],\n    [12.92302, 77.78017],\n    [12.92261, 77.77992],\n    [12.92211, 77.77961],\n    [12.9218008674, 77.77945199879],\n    [12.92179654256, 77.77944978832],\n    [12.92179614009, 77.77944958261],\n    [12.92166, 77.77938],\n    [12.92147, 77.77934],\n    [12.92121, 77.77928],\n    [12.9209, 77.77913],\n    [12.92044, 77.7789],\n    [12.92011, 77.77877],\n    [12.91922, 77.77833],\n    [12.91841, 77.77801],\n    [12.91802, 77.77789],\n    [12.91792, 77.77788],\n    [12.9176, 77.77775],\n    [12.91754, 77.77773],\n    [12.9175, 77.77775],\n    [12.91742, 77.77785],\n    [12.91674425836, 77.77781663002],\n    [12.91673722993, 77.77781628294],\n    [12.91673678081, 77.77781626076],\n    [12.91661, 77.77781],\n    [12.91538, 77.77756],\n    [12.91513, 77.77754],\n    [12.91502, 77.77756],\n    [12.91465, 77.7777],\n    [12.91456, 77.77771],\n    [12.91438, 77.77769],\n    [12.91385, 77.7776],\n    [12.91321, 77.77747],\n    [12.91268, 77.77736],\n    [12.9125, 77.77731],\n    [12.91223, 77.77714],\n    [12.9121, 77.7771],\n    [12.91204, 77.7771],\n    [12.91197, 77.77712],\n    [12.91195, 77.77708],\n    [12.91192, 77.77699],\n    [12.91191, 77.77697],\n    [12.91179, 77.77694],\n    [12.91169, 77.7769],\n    [12.91166, 77.77688],\n    [12.91164, 77.77689],\n    [12.91154, 77.77693],\n    [12.91151040442, 77.7769398652],\n    [12.91124, 77.77703],\n    [12.91087, 77.77718],\n    [12.91069, 77.77724],\n    [12.91011, 77.77729],\n    [12.90996, 77.77724],\n    [12.90982, 77.77714],\n    [12.90974, 77.77708],\n    [12.90965, 77.77699],\n    [12.90958, 77.77696],\n    [12.90959, 77.77689],\n    [12.90953, 77.7768],\n    [12.90935, 77.77668],\n    [12.90909, 77.77657],\n    [12.90894, 77.77658],\n    [12.90861, 77.77654],\n    [12.90857, 77.77653],\n    [12.90859, 77.77646],\n    [12.90829, 77.77637],\n    [12.90821, 77.77631],\n    [12.90824, 77.77627],\n    [12.90827, 77.77621],\n    [12.90830923137, 77.77610799847],\n    [12.90831180009, 77.77610131978],\n    [12.90831196513, 77.77610089068],\n    [12.90832, 77.77608],\n    [12.90834, 77.77573],\n    [12.9084, 77.77557],\n    [12.90846, 77.77532],\n    [12.9085, 77.77513],\n    [12.90859, 77.77498],\n    [12.90853, 77.77494],\n    [12.90854, 77.7749],\n    [12.9086, 77.77464],\n    [12.9086, 77.77448],\n    [12.90861, 77.77434],\n    [12.90869, 77.77412],\n    [12.90874, 77.77398],\n    [12.90876, 77.77379],\n    [12.90879, 77.77362],\n    [12.90886, 77.77364],\n    [12.90893, 77.77361],\n    [12.909, 77.77359],\n    [12.90885, 77.77316],\n    [12.90868, 77.77285],\n    [12.90835, 77.77258],\n    [12.90823994513, 77.77246444232],\n    [12.90823481193, 77.77245905246],\n    [12.90823449769, 77.77245872251],\n    [12.90815, 77.77237],\n    [12.90797, 77.77225],\n    [12.90796, 77.77206],\n    [12.90793, 77.77183],\n    [12.90783, 77.77169],\n    [12.90772, 77.77142],\n    [12.90758, 77.77124],\n    [12.90743, 77.77114],\n    [12.9074, 77.77092],\n    [12.90727, 77.77071],\n    [12.90726392978, 77.77070613713],\n    [12.90725794725, 77.77070233006],\n    [12.90725756515, 77.77070208691],\n    [12.90716, 77.77064],\n    [12.90628, 77.77048],\n    [12.90611, 77.77041],\n    [12.90599, 77.7703],\n    [12.90595, 77.77014],\n    [12.90604, 77.76978],\n    [12.90619, 77.76962],\n    [12.90633, 77.76952],\n    [12.90642, 77.7694],\n    [12.90659, 77.76898],\n    [12.90661452375, 77.76887645554],\n    [12.90661616396, 77.76886953023],\n    [12.90661627012, 77.76886908199],\n    [12.90668, 77.7686],\n    [12.90665, 77.76841],\n    [12.90656, 77.76791],\n    [12.90622, 77.76509],\n    [12.90624, 77.76476],\n    [12.90617015533, 77.7647271319],\n    [12.9059, 77.7646],\n    [12.90559216941, 77.76446074324],\n    [12.90558450235, 77.76445727481],\n    [12.90558400869, 77.76445705149],\n    [12.90548, 77.76441],\n    [12.90489, 77.76424],\n    [12.90449, 77.76411],\n    [12.90441, 77.76406],\n    [12.90416, 77.76388],\n    [12.90272, 77.76351],\n    [12.90248, 77.76345],\n    [12.90245, 77.76345],\n    [12.90247, 77.76338],\n    [12.90225, 77.76332],\n    [12.90148, 77.76312],\n    [12.90069, 77.76293],\n    [12.90025, 77.7628],\n    [12.89984026163, 77.76270894701],\n    [12.89983141333, 77.76270698073],\n    [12.89983088603, 77.76270686355],\n    [12.8998, 77.7627],\n    [12.89979, 77.76269],\n    [12.89976, 77.76264],\n    [12.89957, 77.76223],\n    [12.89912, 77.76117],\n    [12.89885, 77.76057],\n    [12.89878, 77.7606],\n    [12.89876, 77.76055],\n    [12.89865, 77.76024],\n    [12.89861, 77.76008],\n    [12.89859, 77.76002],\n    [12.89856, 77.76],\n    [12.89853, 77.75999],\n    [12.89801, 77.75994],\n    [12.89797, 77.75994],\n    [12.89798, 77.75987],\n    [12.89773, 77.75983],\n    [12.89734, 77.75979],\n    [12.8969, 77.75974],\n    [12.89637, 77.75972],\n    [12.89549, 77.75966],\n    [12.89523, 77.75966],\n    [12.89488, 77.75969],\n    [12.89486943214, 77.75969125382],\n    [12.89486249776, 77.75969207654],\n    [12.8948619618, 77.75969214013],\n    [12.89429, 77.75976],\n    [12.89394, 77.75975],\n    [12.89334, 77.75964],\n    [12.89265, 77.75951],\n    [12.89243, 77.7595],\n    [12.89224, 77.75953],\n    [12.89188022074, 77.75951972056],\n    [12.89187137042, 77.75951946769],\n    [12.8918708311, 77.75951945228],\n    [12.89119, 77.7595],\n    [12.89084, 77.75956],\n    [12.89084, 77.75957],\n    [12.89039, 77.75964],\n    [12.88943, 77.75951],\n    [12.88907, 77.75947],\n    [12.8889, 77.75945],\n    [12.88863, 77.75943],\n    [12.88829, 77.75934],\n    [12.8878, 77.75917],\n    [12.88742, 77.75903],\n    [12.88739, 77.75901],\n    [12.88736, 77.75908],\n    [12.8872, 77.75901],\n    [12.88674, 77.75881],\n    [12.88641, 77.75863],\n    [12.88625, 77.75853],\n    [12.88588, 77.75829],\n    [12.8858, 77.75825],\n    [12.88572, 77.75825],\n    [12.88555, 77.75832],\n    [12.88552, 77.75826],\n    [12.88543, 77.75828],\n    [12.88528, 77.75826],\n    [12.88517, 77.75823],\n    [12.88501, 77.75815],\n    [12.8847, 77.75805],\n    [12.88440858701, 77.75792416249],\n    [12.88440092148, 77.75792085238],\n    [12.88440042421, 77.75792063765],\n    [12.88426, 77.75786],\n    [12.88332, 77.75741],\n    [12.8833, 77.75748],\n    [12.88242, 77.75705],\n    [12.88207, 77.7569],\n    [12.88201541216, 77.75688284381],\n    [12.8817683642, 77.75680520017],\n    [12.88172, 77.75679],\n    [12.88073, 77.7565],\n    [12.8806, 77.75645],\n    [12.88043, 77.75634],\n    [12.88036, 77.75627],\n    [12.88019, 77.7561],\n    [12.88006, 77.756],\n    [12.87966, 77.75576],\n    [12.87969, 77.7557],\n    [12.87966, 77.75568],\n    [12.87927, 77.75551],\n    [12.87915, 77.75544],\n    [12.87911, 77.7555],\n    [12.87903, 77.75546],\n    [12.87888, 77.75531],\n    [12.87885, 77.75527],\n    [12.87882, 77.75521],\n    [12.8786, 77.7552],\n    [12.87787, 77.75513],\n    [12.87781, 77.75509],\n    [12.87775, 77.75494],\n    [12.87774, 77.75491],\n    [12.87735, 77.75483],\n    [12.87716, 77.75476],\n    [12.8765, 77.75445],\n    [12.87641, 77.75437],\n    [12.87636, 77.75426],\n    [12.8763, 77.75416],\n    [12.87621, 77.75409],\n    [12.87611889574, 77.75403432515],\n    [12.87611176077, 77.7540299649],\n    [12.87611129726, 77.75402968164],\n    [12.87603, 77.75398],\n    [12.87604, 77.75361],\n    [12.8761, 77.75332],\n    [12.87616, 77.7531],\n    [12.87621, 77.75285],\n    [12.87611, 77.75216],\n    [12.87607, 77.75165],\n    [12.87604, 77.75133],\n    [12.87599, 77.75123],\n    [12.87585, 77.7511],\n    [12.87569, 77.75093],\n    [12.87545, 77.75065],\n    [12.87540570798, 77.75060986029],\n    [12.87539966368, 77.75060438264],\n    [12.87539925934, 77.75060401621],\n    [12.87513, 77.75036],\n    [12.87461, 77.74995],\n    [12.87449, 77.74986],\n    [12.87431, 77.74979],\n    [12.87412, 77.74973],\n    [12.87327, 77.74961],\n    [12.87297, 77.74956],\n    [12.87273, 77.74956],\n    [12.87254, 77.74953],\n    [12.87232, 77.74945],\n    [12.87229956231, 77.74944166355],\n    [12.87229211703, 77.74943862666],\n    [12.87229161569, 77.74943842216],\n    [12.87156, 77.74914],\n    [12.87132, 77.74902],\n    [12.87103, 77.74883],\n    [12.87069, 77.74856],\n    [12.87068, 77.74855],\n    [12.87049, 77.74836],\n    [12.87022, 77.74811],\n    [12.87005, 77.74799],\n    [12.86959, 77.74775],\n    [12.86906, 77.74755],\n    [12.86743, 77.74684],\n    [12.86704, 77.74665],\n    [12.8666, 77.7464],\n    [12.86619, 77.7462],\n    [12.86604, 77.74612],\n    [12.86551, 77.74581],\n    [12.86494, 77.74554],\n    [12.86445553448, 77.74530167342],\n    [12.86444637757, 77.7452971688],\n    [12.86444589109, 77.74529692949],\n    [12.8637, 77.74493],\n    [12.86338, 77.74482],\n    [12.86284, 77.74469],\n    [12.86229, 77.74453],\n    [12.86172, 77.74424],\n    [12.86141, 77.74412],\n    [12.86127906312, 77.74407971172],\n    [12.86115, 77.74404],\n    [12.86113, 77.74385],\n    [12.86119, 77.74325],\n    [12.86128, 77.74267],\n    [12.86131, 77.74251],\n    [12.86130094681, 77.74229272312],\n    [12.86130061787, 77.74228482863],\n    [12.86130059483, 77.74228427574],\n    [12.8613, 77.74227],\n    [12.86126, 77.74197],\n    [12.86123, 77.74188],\n    [12.86119, 77.74181],\n    [12.86102, 77.74173],\n    [12.86079, 77.74164],\n    [12.86075, 77.74161],\n    [12.86072, 77.74158],\n    [12.8607, 77.74146],\n    [12.86067, 77.74132],\n    [12.8602, 77.74105],\n    [12.86012, 77.74096],\n    [12.86009, 77.74084],\n    [12.86002, 77.74067],\n    [12.85999, 77.7405],\n    [12.86, 77.74037],\n    [12.86018, 77.73966],\n    [12.86027, 77.73931],\n    [12.86037, 77.73879],\n    [12.86047, 77.73791],\n    [12.86045, 77.73783],\n    [12.8604, 77.73778],\n    [12.86030602972, 77.73774362437],\n    [12.8602981961, 77.737740592],\n    [12.86029769134, 77.73774039661],\n    [12.86009, 77.73766],\n    [12.8598, 77.7375],\n    [12.85971, 77.7374],\n    [12.8597, 77.73733],\n    [12.85976, 77.73698],\n    [12.8598, 77.73673],\n    [12.85984, 77.73615],\n    [12.85986, 77.73609],\n    [12.85989, 77.73604],\n    [12.85998, 77.73595],\n    [12.86012, 77.73584],\n    [12.86016, 77.73579],\n    [12.86033, 77.73541],\n    [12.86056, 77.73481],\n    [12.86061, 77.73478],\n    [12.86074, 77.73433],\n    [12.8608, 77.73399],\n    [12.8608955104, 77.73361919583],\n    [12.86089747565, 77.73361156606],\n    [12.86089761346, 77.73361103102],\n    [12.86097, 77.73333],\n    [12.8610694481, 77.73301839597],\n    [12.86112, 77.73286],\n    [12.86121, 77.73253],\n    [12.86121, 77.73191],\n    [12.86116, 77.7315],\n    [12.86115, 77.73145],\n    [12.86108, 77.73145],\n    [12.86107, 77.73089],\n    [12.86104, 77.73056],\n    [12.86092, 77.7293],\n    [12.86089, 77.72903],\n    [12.86087595462, 77.7289240201],\n    [12.86087490113, 77.72891607098],\n    [12.86087482845, 77.72891552256],\n    [12.86078, 77.7282],\n    [12.86077, 77.72749],\n    [12.86074, 77.72716],\n    [12.86077, 77.72684],\n    [12.86078, 77.72622],\n    [12.86076, 77.72592],\n    [12.86068, 77.7252],\n    [12.86066493421, 77.72507043357],\n    [12.86066401076, 77.7250624919],\n    [12.86066394686, 77.72506194234],\n    [12.86063, 77.72477],\n    [12.86057, 77.72443],\n    [12.86056, 77.72438],\n    [12.86063, 77.72436],\n    [12.86059, 77.72418],\n    [12.86053, 77.72362],\n    [12.86045, 77.72296],\n    [12.86039, 77.72195],\n    [12.86036599409, 77.72121381103],\n    [12.86036575346, 77.72120643183],\n    [12.86036573542, 77.72120587869],\n    [12.86036, 77.72103],\n    [12.86038, 77.72062],\n    [12.8604, 77.72036],\n    [12.86033, 77.72035],\n    [12.86033, 77.72032],\n    [12.86031, 77.71995],\n    [12.86028, 77.71942],\n    [12.8603, 77.71938],\n    [12.86039, 77.71935],\n    [12.86039, 77.71831],\n    [12.86037, 77.71807],\n    [12.86034, 77.71796],\n    [12.86023, 77.71784],\n    [12.86017, 77.71779],\n    [12.86012, 77.71784],\n    [12.86003, 77.71775],\n    [12.85977, 77.71739],\n    [12.85975, 77.71729],\n    [12.85979577504, 77.71716284721],\n    [12.8597985053, 77.71715526313],\n    [12.85979869221, 77.71715474395],\n    [12.85984, 77.71704],\n    [12.86011, 77.71608],\n    [12.86013, 77.71596],\n    [12.86013, 77.71582],\n    [12.86002, 77.71509],\n    [12.85999, 77.71493],\n    [12.85984, 77.71445],\n    [12.85954, 77.71356],\n    [12.85953389766, 77.71353965885],\n    [12.85953157296, 77.71353190984],\n    [12.85953141427, 77.71353138087],\n    [12.85951, 77.71346],\n    [12.85943, 77.71336],\n    [12.85901, 77.71311],\n    [12.85861, 77.71296],\n    [12.85847, 77.7128],\n    [12.85843, 77.71267],\n    [12.85844, 77.71251],\n    [12.85853, 77.71231],\n    [12.85854, 77.71225],\n    [12.85853, 77.71216],\n    [12.85848, 77.71212],\n    [12.85774, 77.71214],\n    [12.85765, 77.71212],\n    [12.85759, 77.71207],\n    [12.85758, 77.71201],\n    [12.85758162177, 77.71200175606],\n    [12.85758318584, 77.71199380546],\n    [12.85758329256, 77.71199326295],\n    [12.8577, 77.7114],\n    [12.85775, 77.71121],\n    [12.85775, 77.71102],\n    [12.85773, 77.71095],\n    [12.8575, 77.711],\n    [12.85704, 77.71101],\n    [12.85686, 77.71099],\n    [12.85681, 77.71096],\n    [12.85682, 77.71095],\n    [12.85684, 77.71093],\n    [12.85679, 77.71088],\n    [12.85692, 77.71074],\n    [12.85707, 77.7105],\n    [12.85731, 77.71025],\n    [12.85751, 77.71005],\n    [12.85761, 77.70991],\n    [12.85779, 77.7096],\n    [12.85812, 77.70897],\n    [12.85835736723, 77.70860547189],\n    [12.85836199001, 77.7085983726],\n    [12.8583622897, 77.70859791236],\n    [12.8584, 77.70854],\n    [12.85849, 77.70842],\n    [12.85858, 77.70824],\n    [12.85875, 77.70758],\n    [12.85883, 77.70733],\n    [12.85893, 77.70714],\n    [12.85932, 77.70661],\n    [12.85964, 77.70609],\n    [12.85967725242, 77.70605470826],\n    [12.85968315635, 77.70604911507],\n    [12.85968355272, 77.70604873956],\n    [12.85983, 77.70591],\n    [12.85999, 77.70581],\n    [12.8602, 77.70576],\n    [12.86068824558, 77.70574809159],\n    [12.86069877595, 77.70574783475],\n    [12.86069931538, 77.70574782159],\n    [12.86102, 77.70574],\n    [12.86117, 77.70571],\n    [12.86136, 77.70566],\n    [12.86135, 77.70566],\n    [12.86145, 77.70556],\n    [12.86152, 77.70552],\n    [12.86176, 77.70548],\n    [12.86189994672, 77.70547575919],\n    [12.86190860728, 77.70547549675],\n    [12.86190914662, 77.70547548041],\n    [12.86209, 77.70547],\n    [12.86253, 77.70549],\n    [12.86334, 77.70551],\n    [12.86354, 77.70548],\n    [12.86365, 77.70545],\n    [12.86383, 77.70535],\n    [12.86378, 77.70539],\n    [12.86382, 77.70545],\n    [12.86404, 77.70529],\n    [12.86426, 77.70514],\n    [12.86463, 77.70502],\n    [12.8653, 77.70491],\n    [12.86558147011, 77.70485226257],\n    [12.86559067167, 77.70485037507],\n    [12.86559120076, 77.70485026654],\n    [12.86569, 77.70483],\n    [12.86598, 77.7047],\n    [12.86673, 77.70442],\n    [12.86718, 77.70421],\n    [12.86723, 77.70418],\n    [12.86724, 77.70418],\n    [12.86739380407, 77.70408047981],\n    [12.86740104322, 77.70407579565],\n    [12.86740149958, 77.70407550036],\n    [12.86758, 77.70396],\n    [12.86804, 77.70375],\n    [12.86835649469, 77.70364450178],\n    [12.86843, 77.70362],\n    [12.86842, 77.70355],\n    [12.86846, 77.70354],\n    [12.86881, 77.70348],\n    [12.86887130944, 77.70346467265],\n    [12.86887930504, 77.70346267375],\n    [12.86887982927, 77.70346254269],\n    [12.86901, 77.70343],\n    [12.86933, 77.70317],\n    [12.86959, 77.70279],\n    [12.8697, 77.70266],\n    [12.86983, 77.70259],\n    [12.87018, 77.70249],\n    [12.8705, 77.70234],\n    [12.87065, 77.70225],\n    [12.87071, 77.7022],\n    [12.87067, 77.70217],\n    [12.87071, 77.7022],\n    [12.87086, 77.70209],\n    [12.87095230006, 77.70202684742],\n    [12.87095919739, 77.7020221282],\n    [12.87095964627, 77.70202182107],\n    [12.87124, 77.70183],\n    [12.87152, 77.7017],\n    [12.87186, 77.70161],\n    [12.87215, 77.70161],\n    [12.87273, 77.70167],\n    [12.87331, 77.70168],\n    [12.87358, 77.70166],\n    [12.87379, 77.7016],\n    [12.87427, 77.70144],\n    [12.8746, 77.70129],\n    [12.87470704043, 77.70123880678],\n    [12.87471466509, 77.70123516021],\n    [12.87471515412, 77.70123492632],\n    [12.87483, 77.70118],\n    [12.87533, 77.7008],\n    [12.87553, 77.70061],\n    [12.87602, 77.70009],\n    [12.87618179836, 77.69993629159],\n    [12.87618799607, 77.69993040376],\n    [12.87618839196, 77.69993002767],\n    [12.87622, 77.6999],\n    [12.87637, 77.6998],\n    [12.87657, 77.69972],\n    [12.87701, 77.69962],\n    [12.87715, 77.69957],\n    [12.87729, 77.6995],\n    [12.87749, 77.69938],\n    [12.87809, 77.69895],\n    [12.87813019463, 77.69892320359],\n    [12.87813696946, 77.69891868704],\n    [12.87813742189, 77.69891838542],\n    [12.87815, 77.69891],\n    [12.87854, 77.69866],\n    [12.87855122357, 77.69865438822],\n    [12.87868, 77.69859],\n    [12.87894, 77.6985],\n    [12.87936, 77.6984],\n    [12.88083237367, 77.69814478859],\n    [12.88084772794, 77.69814212717],\n    [12.88084834863, 77.69814201958],\n    [12.88086, 77.69814],\n    [12.8812, 77.69805],\n    [12.88143, 77.69795],\n    [12.88171, 77.69784],\n    [12.88259, 77.69748],\n    [12.88295307525, 77.69734012726],\n    [12.88296206103, 77.69733666554],\n    [12.88296265033, 77.69733643851],\n    [12.88381, 77.69701],\n    [12.88403, 77.69693],\n    [12.88435, 77.69679],\n    [12.88462, 77.69663],\n    [12.88514, 77.69644],\n    [12.8854, 77.69638],\n    [12.88562, 77.69639],\n    [12.88594, 77.69649],\n    [12.88622716817, 77.69649],\n    [12.8862365325, 77.69649],\n    [12.886237162, 77.69649],\n    [12.88632, 77.69649],\n    [12.88723, 77.69637],\n    [12.88751, 77.69633],\n    [12.88754623455, 77.69632253996],\n    [12.8875540905, 77.69632092256],\n    [12.88755470768, 77.69632079549],\n    [12.88785, 77.69626],\n    [12.88804, 77.69616],\n    [12.88817, 77.69607],\n    [12.88846, 77.696],\n    [12.8887, 77.69599],\n    [12.88908, 77.69603],\n    [12.8893, 77.69603],\n    [12.88939, 77.69601],\n    [12.88958, 77.69588],\n    [12.88981581648, 77.69571021214],\n    [12.88982298862, 77.69570504819],\n    [12.88982350387, 77.69570467721],\n    [12.88983, 77.6957],\n    [12.88988, 77.69568],\n    [12.89, 77.69566],\n    [12.89017, 77.69565],\n    [12.89043, 77.69569],\n    [12.89069, 77.69569],\n    [12.89083, 77.69569],\n    [12.8909, 77.69569],\n    [12.891, 77.69563],\n    [12.89102, 77.69561],\n    [12.89112, 77.69578],\n    [12.89126, 77.69593],\n    [12.89146, 77.69603],\n    [12.89159, 77.69612],\n    [12.89168, 77.69622],\n    [12.89176, 77.69631],\n    [12.89194, 77.69645],\n    [12.89197799195, 77.69650098907],\n    [12.89198279389, 77.69650743376],\n    [12.89198317617, 77.69650794682],\n    [12.89232, 77.69696],\n    [12.89237, 77.69716],\n    [12.89235, 77.69731],\n    [12.89229, 77.69751],\n    [12.89205, 77.6981],\n    [12.89191, 77.69844],\n    [12.89192, 77.69853],\n    [12.892, 77.69877],\n    [12.89284553778, 77.69926431335],\n    [12.89285554835, 77.6992701657],\n    [12.89285609528, 77.69927048544],\n    [12.8933, 77.69953],\n    [12.89336, 77.69958],\n    [12.89354, 77.6997],\n    [12.89384, 77.69985],\n    [12.89396, 77.69989],\n    [12.89414, 77.69993],\n    [12.8943, 77.69996],\n    [12.89433, 77.69999],\n    [12.89435, 77.70008],\n    [12.89431, 77.70018],\n    [12.89428, 77.70026],\n    [12.89431, 77.70028],\n    [12.89428, 77.70035],\n    [12.89437, 77.70039],\n    [12.89448, 77.7006],\n    [12.89452, 77.70069],\n    [12.89461, 77.70087],\n    [12.89471593697, 77.70098917905],\n    [12.89472140754, 77.70099533344],\n    [12.8947218317, 77.70099581062],\n    [12.89477, 77.70105],\n    [12.8948, 77.70106],\n    [12.89483, 77.701],\n    [12.8949, 77.70103],\n    [12.89491, 77.70103],\n    [12.89488, 77.7011],\n    [12.89495, 77.70113],\n    [12.89492106399, 77.70121680805],\n    [12.89483, 77.70149],\n    [12.89469951083, 77.70189125658],\n    [12.89469708319, 77.70189872161],\n    [12.89469688398, 77.70189933418],\n    [12.89443, 77.70272],\n    [12.89436, 77.70304],\n    [12.89429, 77.70302],\n    [12.89428, 77.70306],\n    [12.89419, 77.70362],\n    [12.89406, 77.70399],\n    [12.89383, 77.70441],\n    [12.89359, 77.70475],\n    [12.89358, 77.70482],\n    [12.89361, 77.70487],\n    [12.8937, 77.70498],\n    [12.89392131124, 77.7051321514],\n    [12.89392855974, 77.70513713475],\n    [12.89392908264, 77.70513749424],\n    [12.89402, 77.7052],\n    [12.89413, 77.7053],\n    [12.89414, 77.70536],\n    [12.89421, 77.70536],\n    [12.89425, 77.70536],\n    [12.89448, 77.70542],\n    [12.89452, 77.70541],\n    [12.8947, 77.70543],\n    [12.89546, 77.70569],\n    [12.89561527572, 77.70574612359],\n    [12.89562337802, 77.70574905213],\n    [12.89562397172, 77.70574926672],\n    [12.89629, 77.70599],\n    [12.89691789698, 77.70623931198],\n    [12.89692803915, 77.70624333902],\n    [12.89692862618, 77.70624357211],\n    [12.89697, 77.70626],\n    [12.89766, 77.70656],\n    [12.89779, 77.7066],\n    [12.89782702888, 77.70660411432],\n    [12.89783500259, 77.70660500029],\n    [12.8978356284, 77.70660506982],\n    [12.89797, 77.70662],\n    [12.89819, 77.70662],\n    [12.8984, 77.70662],\n    [12.89866, 77.70658],\n    [12.89945, 77.70645],\n    [12.89987, 77.70637],\n    [12.90005, 77.70634],\n    [12.90013, 77.70632],\n    [12.90019, 77.70626],\n    [12.90038, 77.7062],\n    [12.90046, 77.70621],\n    [12.90106, 77.70626],\n    [12.90162, 77.70626],\n    [12.90167022983, 77.70625799081],\n    [12.90167831616, 77.70625766736],\n    [12.90167894515, 77.7062576422],\n    [12.90212, 77.70624],\n    [12.90215, 77.70622],\n    [12.90223, 77.70609],\n    [12.90233990731, 77.70588239746],\n    [12.90234368983, 77.70587525269],\n    [12.90234399026, 77.70587468521],\n    [12.90241, 77.70575],\n    [12.90234, 77.70572],\n    [12.90245, 77.70555],\n    [12.90252, 77.70543],\n    [12.90294828267, 77.7052795887],\n    [12.90295, 77.70528],\n    [12.90322, 77.70483],\n    [12.90323, 77.7047],\n    [12.90321, 77.70467],\n    [12.90331, 77.7045],\n    [12.90337, 77.70438],\n    [12.90354, 77.70405],\n    [12.90358, 77.70408],\n    [12.90437, 77.70443],\n    [12.90449, 77.70448],\n    [12.90476, 77.70462],\n    [12.90497, 77.70469],\n    [12.90525, 77.70475],\n    [12.90562, 77.70491],\n    [12.90588, 77.70501],\n    [12.90647, 77.70521],\n    [12.90694771788, 77.70536923929],\n    [12.90689380589, 77.70535126861],\n    [12.90694934041, 77.70536978013],\n    [12.90694998915, 77.70536999638],\n    [12.90694999995, 77.70536999998]\n],\n    distances = [\n        0,\n        25.312545177271964,\n        63.87263788612921,\n        128.3662332904793,\n        170.74703358967403,\n        194.61860528164615,\n        204.5171567990287,\n        215.84763881668556,\n        255.0065952874924,\n        292.97534408566196,\n        350.84891917118773,\n        439.8953540141516,\n        515.483290312427,\n        554.0505714603956,\n        576.5991342777804,\n        594.5495881289462,\n        624.7555449187458,\n        657.1400308568564,\n        704.5804059741256,\n        746.7255790044783,\n        915.2645060767039,\n        1069.6991411170898,\n        1195.7717869882497,\n        1211.0362929749583,\n        1225.3457119431043,\n        1249.8044132899927,\n        1287.8378883389742,\n        1391.641129365334,\n        1404.7451116198647,\n        1480.9699787165187,\n        1532.4306694173822,\n        1600.2758386945768,\n        1615.300888203522,\n        1633.1836362788624,\n        1689.4351066940262,\n        1747.9161552311966,\n        1791.6879753703624,\n        1834.177991368112,\n        1923.863174730142,\n        1932.6555593351986,\n        1963.0958046888427,\n        1998.176529431029,\n        2004.7917356156424,\n        2081.3165011907986,\n        2125.641501708447,\n        2180.138914147186,\n        2222.274531757643,\n        2254.810356361503,\n        2272.301619784502,\n        2339.651215514183,\n        2427.3822007175086,\n        2450.4033234915764,\n        2491.7332968914,\n        2532.9837854316434,\n        2559.5880948064623,\n        2672.3021130466905,\n        2694.4189746548063,\n        2706.1114068450165,\n        2740.253191202942,\n        2800.7479005653136,\n        2852.7086202000037,\n        2881.161664090291,\n        2917.666527575644,\n        2934.3295325138,\n        2955.2967716556736,\n        2987.250970678318,\n        3029.385628745252,\n        3202.869717606912,\n        3398.4902480118303,\n        3511.2025906249382,\n        3851.640375470323,\n        3878.8276921151883,\n        3900.474439196755,\n        3919.4826056626002,\n        3945.9826504555353,\n        3969.008560394947,\n        3997.8926892827644,\n        4036.925395396062,\n        4089.910352807175,\n        4102.106656228547,\n        4107.054298073792,\n        4107.192767559032,\n        4107.361990179008,\n        4110.145773726336,\n        4180.390340907564,\n        4180.822453873062,\n        4181.174393623672,\n        4210.698939208525,\n        4292.000716173223,\n        4302.854852313463,\n        4310.665627939966,\n        4360.538706701312,\n        4363.868533695225,\n        4373.220554712682,\n        4374.003150979601,\n        4374.703442199028,\n        4419.9605359661355,\n        4438.315734025077,\n        4438.957376919581,\n        4439.443497865747,\n        4514.222585002374,\n        4537.414692113252,\n        4568.845540409825,\n        4624.6539387924,\n        4661.770465826946,\n        4683.475306530917,\n        4704.543483847794,\n        4724.568305684847,\n        4761.833036822263,\n        4774.568034009629,\n        4775.815547967958,\n        4819.527637978128,\n        4846.950027205275,\n        4847.700005743131,\n        4848.406005310607,\n        4914.119865633471,\n        4973.499688084064,\n        4986.5256157618305,\n        5020.131183011214,\n        5066.949920658331,\n        5127.395608327772,\n        5142.774574643082,\n        5143.467130723061,\n        5144.1099589602745,\n        5286.691894100222,\n        5399.2568850760745,\n        5510.432554130373,\n        5511.237445962809,\n        5512.029307939363,\n        5656.639723327673,\n        5719.619906481814,\n        5767.454311488084,\n        5768.328004584482,\n        5769.144649458342,\n        5897.428530141113,\n        5911.93006106851,\n        6043.643662744582,\n        6044.354396069715,\n        6044.943274018865,\n        6149.9145677855795,\n        6191.246934111196,\n        6219.77618321262,\n        6287.406679710418,\n        6287.661212456189,\n        6287.834372167407,\n        6312.107867523774,\n        6324.0382446349,\n        6371.741705620891,\n        6477.363455489014,\n        6478.208298485683,\n        6479.124731995417,\n        6527.495624348025,\n        6563.348178083408,\n        6599.564075460688,\n        6663.615428444523,\n        6679.654045774571,\n        6680.755793844988,\n        6681.754132595969,\n        6769.036717758727,\n        6875.53892245752,\n        6916.394728781422,\n        7125.217955963091,\n        7275.928328365056,\n        7276.2774326320105,\n        7276.378959800467,\n        7277.054942740092,\n        7377.440625290307,\n        7446.168519154874,\n        7488.877216405436,\n        7517.361972167662,\n        7537.8349853818745,\n        7555.746494008686,\n        7574.363649768198,\n        7592.2042138365705,\n        7621.721397436009,\n        7638.071937849309,\n        7656.692246844913,\n        7672.36153742828,\n        7685.11284672456,\n        7720.925027919663,\n        7816.161344892003,\n        7860.825767688272,\n        7892.961693460196,\n        7985.397248616131,\n        7985.9655681971235,\n        7986.376681811854,\n        7997.453602411448,\n        8069.756436101866,\n        8134.080522081796,\n        8213.512915669056,\n        8262.350638643687,\n        8273.07220234866,\n        8281.510313943512,\n        8289.804217043375,\n        8298.246993546138,\n        8322.688984014394,\n        8373.990418447922,\n        8380.37546131298,\n        8402.262262668128,\n        8472.196646063334,\n        8528.862953936148,\n        8536.39873228019,\n        8537.062486769533,\n        8537.624901524943,\n        8557.337115512157,\n        8581.39734605807,\n        8694.624323540254,\n        8735.948268136373,\n        8772.047914261446,\n        8810.23465178465,\n        8824.373534517774,\n        8848.453174171997,\n        8892.948168525469,\n        8923.877181585107,\n        8956.072178114382,\n        8968.25630239735,\n        8979.64024188476,\n        8999.02418971936,\n        8999.742222124516,\n        9013.090763828903,\n        9029.692496198355,\n        9088.317619590365,\n        9106.782632141658,\n        9189.452985292535,\n        9190.03168777574,\n        9190.509416245635,\n        9198.439640620316,\n        9222.9283107723,\n        9254.602135533896,\n        9295.060942779155,\n        9295.719438698849,\n        9296.189870372815,\n        9317.647051042533,\n        9361.620148528324,\n        9410.821904616989,\n        9411.386518492329,\n        9411.68809370049,\n        9426.588278941355,\n        9465.166130310257,\n        9527.066727200552,\n        9572.187640168335,\n        9572.560775996342,\n        9572.66283868007,\n        9592.956072366775,\n        9652.333656729323,\n        9795.81966857986,\n        9846.46436109428,\n        10005.187318800216,\n        10109.873318064674,\n        10214.396364557377,\n        10316.83275239496,\n        10340.551893184833,\n        10357.929919121636,\n        10402.49298888966,\n        10450.974342090038,\n        10485.65798638455,\n        10521.700797336247,\n        10666.946063291893,\n        10676.692378984668,\n        10693.80507250954,\n        10738.836362000304,\n        10801.234054525834,\n        10824.653561655201,\n        10866.093309831691,\n        10891.899746322399,\n        10947.221389216393,\n        10973.257867600294,\n        11060.986747199999,\n        11104.103365836905,\n        11104.530274109895,\n        11104.763592311947,\n        11110.489396256762,\n        11144.255461849392,\n        11158.346777725252,\n        11180.052545588978,\n        11207.348683302922,\n        11223.651680555271,\n        11243.941592098055,\n        11274.908050334107,\n        11282.673343984243,\n        11322.532167687348,\n        11330.825932788128,\n        11356.643846072966,\n        11379.157892728683,\n        11400.122746191892,\n        11421.652706626814,\n        11428.551710926355,\n        11475.164664042863,\n        11483.471077503887,\n        11497.456898676128,\n        11518.29662119656,\n        11556.719832274202,\n        11557.420533034827,\n        11557.713674766064,\n        11558.566200541623,\n        11575.884181945718,\n        11618.717475393003,\n        11675.50214205303,\n        11758.61587346778,\n        11812.876626569203,\n        11871.888030609793,\n        12013.930356860315,\n        12059.72652798039,\n        12073.075012431087,\n        12109.430129515422,\n        12142.757820372808,\n        12166.634627128033,\n        12185.643322091013,\n        12311.862205228737,\n        12428.888922062926,\n        12430.299651398002,\n        12430.897586413019,\n        12431.462851413591,\n        12492.275798633447,\n        12672.634828596378,\n        12753.228607535293,\n        12795.90087222723,\n        12796.921631130012,\n        12797.876683535727,\n        12802.14412324605,\n        12844.093898177842,\n        12874.423580564655,\n        12924.89335006264,\n        12977.032645545185,\n        13052.684813542774,\n        13109.767188957967,\n        13158.71351260806,\n        13228.560466991032,\n        13280.4640522332,\n        13281.320922604087,\n        13281.871277233131,\n        13309.286083042252,\n        13344.9273743701,\n        13404.90145957119,\n        13431.30640183965,\n        13470.500628115697,\n        13525.958395785665,\n        13579.637061324835,\n        13627.08626500545,\n        13742.988580704463,\n        13787.316854046161,\n        13801.55499869105,\n        13801.989587779131,\n        13802.176503760818,\n        13807.970573452,\n        13848.584740419661,\n        13889.955214774067,\n        13923.640168375872,\n        13966.998516214813,\n        14003.577755713806,\n        14031.771453773166,\n        14061.121417749515,\n        14078.781895343016,\n        14110.088720502497,\n        14132.985911637099,\n        14144.80505154017,\n        14159.598174754967,\n        14177.667342133549,\n        14211.083343252256,\n        14241.289795011991,\n        14259.194660827632,\n        14285.304017554823,\n        14334.079834225706,\n        14355.148889587317,\n        14366.044852971405,\n        14386.669090131298,\n        14445.872348823968,\n        14466.466597114078,\n        14478.618538820072,\n        14479.006620937742,\n        14479.04339271263,\n        14515.26190013047,\n        14558.675222990063,\n        14639.261213767537,\n        14676.266160016392,\n        14707.780737514518,\n        14752.042390403278,\n        14780.567841108674,\n        14823.930468008472,\n        14835.15859134237,\n        14924.311027988157,\n        14943.922377525634,\n        14955.921406917045,\n        14973.600326122765,\n        14991.795030043982,\n        15040.771686590588,\n        15171.168452743907,\n        15196.132797723565,\n        15222.446206850442,\n        15280.668519633638,\n        15281.044088112316,\n        15281.096296997206,\n        15411.519697391688,\n        15437.32824188642,\n        15446.079543060312,\n        15456.933341137157,\n        15543.120213436127,\n        15671.252404091012,\n        15705.401098071354,\n        15784.200810879094,\n        15805.820671303602,\n        15806.549866144673,\n        15807.058861072515,\n        15876.544195081673,\n        15914.209903552879,\n        15977.779887310697,\n        15996.093480741372,\n        16004.002378661115,\n        16019.906671719915,\n        16054.530373209096,\n        16099.021663494257,\n        16145.924351636952,\n        16175.966548125394,\n        16213.78851857308,\n        16275.186100870565,\n        16325.236135099578,\n        16350.812121146444,\n        16410.946518275407,\n        16453.493646054598,\n        16454.21798144458,\n        16454.60333434939,\n        16528.16006344838,\n        16578.19952154088,\n        16598.804615651938,\n        16599.36994858296,\n        16599.56574109781,\n        16609.57752646851,\n        16710.040337624505,\n        16761.948591252047,\n        16784.839328037342,\n        16825.23775151031,\n        16917.50109655078,\n        16940.649370126193,\n        16941.395727387728,\n        16941.990547174726,\n        17145.564656042403,\n        17217.552513497958,\n        17240.915806932193,\n        17241.747186863235,\n        17242.409162743013,\n        17277.0909068255,\n        17437.3663858802,\n        17449.750223545005,\n        17508.843347142196,\n        17553.86278345487,\n        17587.555139466207,\n        17627.207072309055,\n        17655.02723646915,\n        17704.91598728671,\n        17709.86430757488,\n        17717.63039592865,\n        17757.460223983202,\n        17787.772640971467,\n        17813.172852977634,\n        17855.25546960864,\n        17868.353788820164,\n        17869.187134370986,\n        17869.909579431478,\n        17878.17935412909,\n        17903.765421283853,\n        17946.24681915176,\n        18000.617409199138,\n        18055.632302660837,\n        18101.238674468917,\n        18171.367752767987,\n        18284.99050092103,\n        18285.997148292627,\n        18286.038065003053,\n        18297.02678452259,\n        18320.479199701407,\n        18337.716757930164,\n        18393.133502671993,\n        18496.247271714958,\n        18547.11526350339,\n        18570.872751771836,\n        18598.098373721037,\n        18624.78776115779,\n        18640.52424585887,\n        18682.79845413509,\n        18713.960004752465,\n        18751.911599914143,\n        18763.318415948423,\n        18782.256461101846,\n        18805.204348765576,\n        18824.15094961161,\n        18852.037392408038,\n        18878.74919802442,\n        19020.66536608748,\n        19122.7203842301,\n        19132.788394193216,\n        19142.27366186065,\n        19250.78679208674,\n        19379.974702547144,\n        19439.976687500937,\n        19476.072056228695,\n        19498.7048296331,\n        19499.110062166368,\n        19499.279249041287,\n        19528.52559431141,\n        19578.722571173275,\n        19606.48944604251,\n        19625.445428817406,\n        19637.424593267406,\n        19655.887114687233,\n        19687.63413409391,\n        19738.50510959165,\n        19761.70167610769,\n        19782.329953351877,\n        19792.34813416977,\n        19803.379436587267,\n        19815.810092408803,\n        19874.848419088696,\n        20038.915080994622,\n        20059.285609260598,\n        20088.174171412476,\n        20114.656498649794,\n        20257.539792227137,\n        20287.844158570148,\n        20354.172153367163,\n        20426.180616634487,\n        20475.65884278499,\n        20531.08749969719,\n        20653.299332975337,\n        20769.04054480986,\n        20770.04356327873,\n        20770.503229711372,\n        20814.097733418035,\n        20854.0805063944,\n        20872.007641028104,\n        20916.81584337223,\n        20940.567823989215,\n        20982.066130763564,\n        21020.984828392422,\n        21053.24980068923,\n        21079.2038206835,\n        21153.59604287554,\n        21198.28482723978,\n        21263.889873561737,\n        21364.439495227416,\n        21457.932452368572,\n        21458.820003127843,\n        21459.153364328857,\n        21500.769316553437,\n        21567.555320004787,\n        21596.97373004422,\n        21618.13581241667,\n        21641.518711195484,\n        21684.357159080002,\n        21725.321400031942,\n        21758.845125757824,\n        21784.63449745194,\n        21818.329315345447,\n        21860.933209584677,\n        21883.827767618877,\n        21906.095883597656,\n        21915.584064257506,\n        21935.869048727658,\n        21954.679275136947,\n        21968.915951403575,\n        22020.07983529877,\n        22046.192003512882,\n        22060.458911508893,\n        22085.9099696254,\n        22129.330383086624,\n        22156.993130836898,\n        22206.07749787683,\n        22244.90623056702,\n        22274.303341360916,\n        22344.2366145796,\n        22380.334673915513,\n        22410.654590582657,\n        22440.65329867265,\n        22445.202411648643,\n        22445.896258233086,\n        22446.40745803398,\n        22450.045489512715,\n        22460.574937133933,\n        22474.09743014343,\n        22510.722212973382,\n        22519.46581425048,\n        22525.028800822114,\n        22543.963703538866,\n        22567.315081577217,\n        22579.684824340216,\n        22586.734794352295,\n        22618.685270765043,\n        22646.872973386708,\n        22694.001913915417,\n        22704.10426086868,\n        22709.05291075393,\n        22714.002991338213,\n        22721.42723295498,\n        22812.739085599867,\n        22842.84133976716,\n        22856.36466136784,\n        22891.003151075965,\n        23001.042801549345,\n        23006.798589696624,\n        23007.477777307235,\n        23008.04179192101,\n        23079.318598844024,\n        23101.363543417483,\n        23123.406675453818,\n        23131.296832269756,\n        23135.970306554726,\n        23167.02613739789,\n        23167.54804561051,\n        23167.66394473987,\n        23253.32460260664,\n        23334.04213374,\n        23349.60810635252,\n        23354.476675505877,\n        23363.92062527803,\n        23376.66338322441,\n        23424.773284595456,\n        23463.27183119647,\n        23506.857654377098,\n        23570.838866083333,\n        23617.44787296762,\n        23628.55559044596,\n        23646.170359973014,\n        23655.62068023298,\n        23656.535796676206,\n        23657.27585096517,\n        23671.52755961253,\n        23718.04136677319,\n        23747.626865329068,\n        23772.58664885941,\n        23882.106445924168,\n        23882.615821361036,\n        23882.656039043188,\n        23900.438371913035,\n        23928.3399524709,\n        23950.01509825513,\n        24026.993093425328,\n        24063.108708583273,\n        24102.713783784184,\n        24164.07262320021,\n        24238.163902004937,\n        24266.197512413848,\n        24282.29807329644,\n        24330.612418239296,\n        24367.726438574486,\n        24411.301002014585,\n        24450.825937590456,\n        24498.42389986668,\n        24498.812906911302,\n        24498.853581241194,\n        24503.134393455493,\n        24540.159528399025,\n        24563.560462519563,\n        24577.22238488173,\n        24595.12378546176,\n        24620.66169508083,\n        24639.630941962547,\n        24666.30843586561,\n        24730.022306205334,\n        24763.53930695102,\n        24843.05568032935,\n        24885.33886423286,\n        24901.05929314668,\n        24960.15273181165,\n        25037.990678839717,\n        25081.37189297724,\n        25093.64398131245,\n        25094.29337943531,\n        25094.788800781716,\n        25096.601707340225,\n        25130.347016202464,\n        25168.01301701682,\n        25212.558678612342,\n        25260.7628627011,\n        25335.704826755547,\n        25402.588135994047,\n        25419.413381074144,\n        25464.10411463423,\n        25560.032457185098,\n        25631.271636088848,\n        25704.009919813514,\n        25704.787811109407,\n        25704.926676743213,\n        25784.093800833896,\n        25882.32966168423,\n        25910.132322209825,\n        25933.027835187102,\n        25968.83587557758,\n        26027.885697320653,\n        26088.04618747826,\n        26088.991442598886,\n        26089.662856379786,\n        26096.525353882815,\n        26178.117245390087,\n        26214.116929279557,\n        26230.84513378636,\n        26313.388331821432,\n        26388.17540059006,\n        26473.024995177893,\n        26534.53032487633,\n        26543.507114663804,\n        26551.188468171335,\n        26568.851543623376,\n        26666.5921892656,\n        26746.3853576701,\n        26819.830340685283,\n        26857.7363393738,\n        26858.857993994978,\n        26919.93817615921,\n        27025.67879745839,\n        27096.15576909569,\n        27169.074389801754,\n        27169.396245809876,\n        27169.437594489802,\n        27182.232146400514,\n        27310.502296454535,\n        27506.024540135422,\n        27526.593274978884,\n        27526.966036898553,\n        27527.02488322472,\n        27541.007864438685,\n        27597.405135119814,\n        27605.310997056844,\n        27622.421788098345,\n        27657.386383997007,\n        27669.20378323808,\n        27687.760898765056,\n        27738.88965896151,\n        27746.557177219613,\n        27763.509205289036,\n        27763.88398059368,\n        27763.92797991683,\n        27772.572372559956,\n        27780.431100949085,\n        27784.766107597814,\n        27802.975292441177,\n        27884.189893870953,\n        27888.73462214532,\n        27892.242426121713,\n        27903.414662016854,\n        27916.758063048303,\n        27935.069745045894,\n        27955.438286735676,\n        27978.797242475026,\n        27979.30295160944,\n        27979.454270131206,\n        27987.87201980671,\n        28024.82263377267,\n        28047.16883546244,\n        28067.1609189168,\n        28075.453282775085,\n        28077.947118129967,\n        28102.501911459192,\n        28147.15005372792,\n        28175.78167814833,\n        28176.434727619315,\n        28176.829191025463,\n        28193.535267898187,\n        28254.703784079204,\n        28269.11152550328,\n        28285.030086540624,\n        28302.85387414328,\n        28347.346945122907,\n        28403.32448750505,\n        28419.811856669774,\n        28427.584570555056,\n        28428.100039067696,\n        28428.38656443209,\n        28433.54511587,\n        28495.655773047314,\n        28551.296133170956,\n        28558.968751785513,\n        28565.735512109895,\n        28584.615191164365,\n        28585.229249642765,\n        28585.664817042238,\n        28586.206800446627,\n        28597.337851698998,\n        28719.35857273252,\n        28733.471425798132,\n        28744.42486340683,\n        28803.46537691436,\n        28816.668353942398,\n        28827.546459501467,\n        28879.07272294949,\n        28923.770548309156,\n        28999.643932370847,\n        29046.157382660243,\n        29096.623282681772,\n        29182.422949544256,\n        29228.43065055287,\n        29250.220437937234,\n        29343.759751930087,\n        29349.320584473146,\n        29355.53272843802,\n        29364.088973561793,\n        29390.425191660193,\n        29485.08941587065,\n        29536.7899915245,\n        29635.383173832284,\n        29692.28568956315,\n        29749.66952032561,\n        29792.85044937506,\n        29845.88524273409,\n        29910.845975695906,\n        29949.249666343494,\n        29949.849929312644,\n        29950.124766791985,\n        29967.03987971024,\n        29988.60918261559,\n        30018.243888891746,\n        30056.356044702305,\n        30113.25665246162,\n        30152.56333799256,\n        30262.417112499632,\n        30358.9316328276,\n        30404.205902255922,\n        30415.378425017585,\n        30453.649412144336,\n        30460.666781124302,\n        30465.61949667188,\n        30479.643125572085,\n        30554.86951752036,\n        30555.70313005108,\n        30556.007691787403,\n        30570.124246661177,\n        30709.55285315364,\n        30737.43735091233,\n        30749.862043140954,\n        30793.71359325812,\n        30803.781162385036,\n        30823.913363652704,\n        30883.648479763993,\n        30956.194649395675,\n        31016.321828521417,\n        31037.05759307087,\n        31072.283332453324,\n        31087.375171078733,\n        31094.047356121497,\n        31102.127428881486,\n        31107.000123695867,\n        31117.309260920672,\n        31119.745779751385,\n        31133.479921108967,\n        31145.415631968022,\n        31149.399556593846,\n        31151.888832459226,\n        31163.82900114879,\n        31167.31394295824,\n        31198.944486959335,\n        31243.186878908768,\n        31264.241131576706,\n        31328.96615836133,\n        31346.514394098333,\n        31365.491848416466,\n        31376.523821825343,\n        31390.507101128787,\n        31398.953481671026,\n        31406.629389900274,\n        31418.451023232017,\n        31442.322136835734,\n        31473.595380798855,\n        31490.310144368752,\n        31527.259692859934,\n        31531.837644324467,\n        31539.74380565147,\n        31574.499390225148,\n        31585.518929492115,\n        31590.990664069457,\n        31598.300868638595,\n        31610.1871165193,\n        31610.999899472194,\n        31611.276245531615,\n        31613.729034059288,\n        31651.730622420506,\n        31670.315267690374,\n        31698.224108118182,\n        31719.296395300553,\n        31738.391667567703,\n        31746.357824391525,\n        31750.849256855952,\n        31779.811094444747,\n        31797.155983278943,\n        31812.372969425545,\n        31837.82396989546,\n        31853.985753676836,\n        31874.69923088625,\n        31893.424399011627,\n        31901.50428787059,\n        31909.939854839096,\n        31918.020322578253,\n        31967.520894644265,\n        32006.073586250448,\n        32053.0085964687,\n        32070.51994876013,\n        32071.3549683011,\n        32071.524347423594,\n        32084.969171647004,\n        32108.839037620633,\n        32129.46247170047,\n        32154.613386037658,\n        32173.42548279205,\n        32205.142829963886,\n        32230.101925956475,\n        32249.993401045285,\n        32274.070394906787,\n        32301.033775834203,\n        32301.838694924554,\n        32302.642322130694,\n        32302.880477873914,\n        32315.650293380684,\n        32415.02768709681,\n        32435.400370337768,\n        32453.299367380343,\n        32471.207920261182,\n        32511.49249883051,\n        32535.557177465776,\n        32554.530654890343,\n        32570.946906809484,\n        32620.240836285884,\n        32631.80327425842,\n        32632.769285018243,\n        32633.384220524003,\n        32663.405870630686,\n        32684.27871532595,\n        32739.393113310154,\n        33047.37152855679,\n        33083.21275553881,\n        33091.777835285255,\n        33124.84437354048,\n        33162.25681683382,\n        33163.298470098314,\n        33163.748946355074,\n        33176.39675471637,\n        33244.54134297941,\n        33291.20008604634,\n        33301.6264456841,\n        33335.59148065268,\n        33500.65887969972,\n        33528.13061824655,\n        33531.498729784435,\n        33539.41828890405,\n        33564.734741710105,\n        33653.05744049295,\n        33743.28433486791,\n        33794.20060504311,\n        33840.81943657115,\n        33841.857380801965,\n        33842.05503318096,\n        33845.57088661919,\n        33847.12471488162,\n        33853.48852825671,\n        33902.69443482699,\n        34028.009994391825,\n        34099.63895187006,\n        34108.07636459487,\n        34113.936981201194,\n        34149.695186640965,\n        34167.60042607289,\n        34174.47631081122,\n        34178.45906561996,\n        34181.97117958739,\n        34240.04622869049,\n        34244.497370372104,\n        34252.16726577889,\n        34280.30257228273,\n        34323.885296339315,\n        34373.11070970961,\n        34432.08417993711,\n        34530.15210503215,\n        34559.063652117155,\n        34598.118177336386,\n        34599.35896148793,\n        34600.25045980929,\n        34600.758659260064,\n        34664.78620118526,\n        34703.724648795986,\n        34771.50219166425,\n        34849.513646586616,\n        34874.01031747425,\n        34895.397240890474,\n        34935.42447781854,\n        34936.60682762598,\n        34937.23621062312,\n        35012.97369172721,\n        35052.434689554044,\n        35053.630900528995,\n        35104.24243028903,\n        35211.91689474113,\n        35252.18342847352,\n        35271.21269705867,\n        35301.31402751426,\n        35340.358719231444,\n        35397.87587153482,\n        35442.77232749966,\n        35446.75080460761,\n        35455.039597032715,\n        35474.38141249469,\n        35529.93563443238,\n        35571.495146043366,\n        35592.3302575659,\n        35641.008402831016,\n        35650.90882678363,\n        35659.81024357878,\n        35680.18243247718,\n        35687.50245463772,\n        35697.75119568942,\n        35714.57771532529,\n        35727.24483289498,\n        35747.04538002726,\n        35783.185298832104,\n        35818.347533736094,\n        35819.46487319387,\n        35820.116343166796,\n        35837.07044878057,\n        35952.41750590875,\n        35960.35094705272,\n        36068.73886552855,\n        36110.924140109855,\n        36117.29591281613,\n        36146.039427999436,\n        36151.6755919824,\n        36266.15897501196,\n        36281.59719664697,\n        36303.94725168694,\n        36314.81930327398,\n        36341.219322108474,\n        36359.28974836549,\n        36410.8186121464,\n        36418.136248380484,\n        36422.13333569975,\n        36469.25419807794,\n        36484.60992953442,\n        36492.498169473656,\n        36502.4017500111,\n        36525.69827792982,\n        36531.179496262535,\n        36538.4959794148,\n        36562.9847261128,\n        36644.511430275765,\n        36652.47262663814,\n        36670.049711952444,\n        36673.495281762676,\n        36717.72050412179,\n        36740.170213746955,\n        36820.88673246081,\n        36834.130927575774,\n        36847.289115752224,\n        36860.01903796649,\n        36872.5791827559,\n        36884.37194077197,\n        36885.30300691632,\n        36885.41834214304,\n        36895.941209704506,\n        36936.064331881804,\n        36968.200213579534,\n        36992.963697157946,\n        37020.62784854438,\n        37096.245071526886,\n        37151.707144237495,\n        37186.55507511406,\n        37198.73920492157,\n        37219.73881007148,\n        37245.355146898946,\n        37285.77202672414,\n        37292.34894319442,\n        37293.274249582995,\n        37293.475080872326,\n        37333.42653227232,\n        37406.354996260925,\n        37422.88451150481,\n        37444.28971937628,\n        37466.395951296094,\n        37561.80295792978,\n        37595.600835730074,\n        37622.29066554315,\n        37643.67127872772,\n        37669.63110916842,\n        37672.14820469729,\n        37673.25926404848,\n        37673.98847275807,\n        37761.54033917249,\n        37791.240927833875,\n        37829.513921626974,\n        37877.333447482466,\n        37879.1093975239,\n        37908.628268072614,\n        37949.08373591661,\n        37972.043613305505,\n        38029.433184103385,\n        38092.231015806894,\n        38289.1437929903,\n        38337.15268527112,\n        38393.08295969141,\n        38443.56553244834,\n        38462.36663825384,\n        38530.20972458696,\n        38600.02333964003,\n        38659.76961491242,\n        38661.003858798664,\n        38661.55218546492,\n        38753.538034089,\n        38791.070474223336,\n        38852.75251263982,\n        38916.323999208405,\n        38987.076218801354,\n        39023.92386567547,\n        39039.133330611716,\n        39054.14399788708,\n        39074.86459512725,\n        39140.25083052737,\n        39203.917601837704,\n        39221.58140530556,\n        39245.15718114504,\n        39246.01790664695,\n        39246.088911364415,\n        39247.637889993064,\n        39280.46222330866,\n        39290.77337607958,\n        39299.56947694071,\n        39320.36721294138,\n        39347.73999978656,\n        39353.25041606812,\n        39357.909551578254,\n        39371.10702054175,\n        39386.646076608005,\n        39446.545966039026,\n        39459.74915875865,\n        39473.17888023002,\n        39493.18427984184,\n        39511.91315693182,\n        39526.05029421267,\n        39605.578710816,\n        39644.819082978116,\n        39702.276624631246,\n        39798.319740649626,\n        39807.27504591729,\n        39815.04175680073,\n        39826.21077334149,\n        39827.14327453661,\n        39827.2072297218,\n        39851.89146582658,\n        39888.50755520925,\n        39903.26428347339,\n        39910.944568183826,\n        39949.47211499498,\n        39976.94325710146,\n        40039.98225066212,\n        40046.90468447641,\n        40053.33105352028,\n        40067.34078150152,\n        40086.97565470959,\n        40094.05777268999,\n        40139.39511138978,\n        40209.29565438614,\n        40215.81575782002,\n        40266.70592872709,\n        40304.17568484883,\n        40345.76118881492,\n        40346.8961449506,\n        40347.53944291617,\n        40379.05388299433,\n        40414.60044874459,\n        40432.67350157984,\n        40469.82066950295,\n        40537.03200181852,\n        40581.82545303159,\n        40587.3757969685,\n        40595.18093180398,\n        40655.90276118788,\n        40691.84062105364,\n        40829.08503842777,\n        40858.5558755451,\n        40870.17750395764,\n        40871.31945621643,\n        40872.00304015533,\n        40950.28592145893,\n        41027.26304318898,\n        41063.19493857839,\n        41098.04752591729,\n        41165.26854638072,\n        41197.867036700874,\n        41276.424332846815,\n        41290.569690462,\n        41291.4369072384,\n        41291.500364817155,\n        41323.372840773714,\n        41360.82972209275,\n        41366.36326817347,\n        41374.443500330264,\n        41394.457032561026,\n        41455.52999499484,\n        41527.62862708357,\n        41637.32144515403,\n        41717.17355828944,\n        41718.00001679716,\n        41718.274238628284,\n        41737.35414478569,\n        41781.85786528233,\n        41810.13416157326,\n        41818.01178605604,\n        41821.32157513677,\n        41861.50122697446,\n        41919.05915548809,\n        41923.99370112705,\n        41934.546410067225,\n        42047.29178045957,\n        42073.41738967267,\n        42085.8250475258,\n        42103.69829427228,\n        42112.330594570696,\n        42120.12947437285,\n        42134.12496639542,\n        42182.69915908228,\n        42193.783106033894,\n        42208.487716284195,\n        42209.47082426564,\n        42209.835175805325,\n        42223.09867429899,\n        42331.41232979218,\n        42344.61013739508,\n        42359.78694261155,\n        42439.86283934735,\n        42457.52583289653,\n        42512.169226199985,\n        42614.25487846297,\n        42616.582147078894,\n        42617.53050061853,\n        42617.93544460014,\n        42626.04326401936,\n        42640.07414909102,\n        42694.07275309308,\n        42741.43407071701,\n        42764.7465034516,\n        42779.55275412632,\n        42796.93817566148,\n        42820.82040419023,\n        42827.42902743985,\n        42837.254852338,\n        42844.31316370161,\n        42926.62652175647,\n        42936.87023679461,\n        42945.47082286038,\n        42952.07572449072,\n        42953.03758689264,\n        42953.97423110319,\n        42954.31805647013,\n        43019.92983015951,\n        43041.2685703736,\n        43061.87056892633,\n        43069.78674630294,\n        43095.93121186879,\n        43147.092886536935,\n        43167.22765143971,\n        43173.6773587244,\n        43175.265007747636,\n        43178.3905160721,\n        43186.16416908237,\n        43207.127166696206,\n        43238.036160492295,\n        43276.075717845975,\n        43307.13685208095,\n        43325.95485363175,\n        43365.07106062575,\n        43442.601516249815,\n        43490.12582343577,\n        43491.15541606022,\n        43491.624551237175,\n        43499.18992351609,\n        43515.610232308616,\n        43537.54538567177,\n        43611.55129916471,\n        43640.07919286467,\n        43663.48970673606,\n        43735.47502509328,\n        43802.13807358041,\n        43807.78245322823,\n        43808.69556945225,\n        43808.819895197936,\n        43830.98704879379,\n        43851.82082143516,\n        43875.79288292214,\n        43930.09932918507,\n        43931.317992464385,\n        43931.742126831006,\n        43967.41518182247,\n        43984.41958161834,\n        44006.241100772946,\n        44007.54433738507,\n        44023.09067423681,\n        44032.032305090965,\n        44059.081331444584,\n        44074.66937797498,\n        44075.89165261836,\n        44076.61773667355,\n        44096.749275796756,\n        44145.728995665966,\n        44235.825157785315,\n        44258.30489034905,\n        44270.96554135101,\n        44293.72920028759,\n        44300.78078972965,\n        44308.66040362593,\n        44338.64834260896,\n        44368.02375649223,\n        44411.17481295393,\n        44486.62431738027,\n        44518.544271267994,\n        44519.65157178235,\n        44520.02963646465,\n        44531.24047525579,\n        44566.435111939936,\n        44655.18326549977,\n        44710.157040246966,\n        44716.604598673104,\n        44717.74845897349,\n        44737.97057711386,\n        44738.95108404823,\n        44739.177025930556,\n        44762.645467872,\n        44818.63284292833,\n        44855.63728689336,\n        44864.23220675737,\n        44871.9018914124,\n        44876.48011925736,\n        44915.938109129434,\n        44922.95497713941,\n        44923.870633484046,\n        44923.95188501861,\n        44938.85022589389,\n        44984.24274128589,\n        45034.568344370215,\n        45053.228741799685,\n        45069.5558677257,\n        45109.95651574196,\n        45149.07994940302,\n        45168.406413314,\n        45177.00800850618,\n        45182.527859185575,\n        45188.04770986497,\n        45208.57686726609,\n        45220.91928662168,\n        45221.919280671296,\n        45222.32190655266,\n        45259.79645048415,\n        45293.975480356705,\n        45333.02266102114,\n        45365.27119939133,\n        45430.09251647024,\n        45494.59579119646,\n        45524.698707765194,\n        45548.940062724185,\n        45605.061298353794,\n        45645.197042394095,\n        45658.32976019329,\n        45659.26521922396,\n        45659.36857347425,\n        45673.459698835875,\n        45742.65467714158,\n        45772.96755332057,\n        45851.364690884315,\n        45875.89106909595,\n        45876.973404089,\n        45877.577804504894,\n        45882.41427156599,\n        45902.3204189984,\n        45926.204931696586,\n        45976.325794974735,\n        45992.83131719431,\n        46010.16934133142,\n        46035.94600945765,\n        46117.3374675581,\n        46122.730072615086,\n        46123.9301223037,\n        46124.716074489676,\n        46126.55712154931,\n        46177.70050855655,\n        46179.28508159233,\n        46195.28492100485,\n        46225.80864795245,\n        46273.76067729369,\n        46439.80361300935,\n        46441.65186144453,\n        46442.24830559586,\n        46443.66431880385,\n        46482.71222522312,\n        46510.492902818216,\n        46543.83402397458,\n        46649.18000962697,\n        46692.30527054963,\n        46693.37614648437,\n        46693.45121557202,\n        46794.09742372768,\n        46820.05199979475,\n        46858.73569466993,\n        46893.4079874691,\n        46954.78842428799,\n        46984.422182645656,\n        47008.91023175821,\n        47046.108300888656,\n        47078.04193607218,\n        47079.16090584143,\n        47079.6363050071,\n        47088.86270128978,\n        47190.88509870211,\n        47222.32769426354,\n        47226.50230784508,\n        47227.693732629275,\n        47228.54382768239,\n        47262.046935522856,\n        47285.81214272641,\n        47303.279412163174,\n        47336.4240550148,\n        47363.15596560251,\n        47405.64428205469,\n        47430.12436341192,\n        47440.396617657694,\n        47465.802455116376,\n        47497.844608937754,\n        47498.97103176621,\n        47499.45191367519,\n        47500.415457894786,\n        47506.39080484645,\n        47519.91149182784,\n        47538.84651466826,\n        47568.080696600715,\n        47596.991398927996,\n        47612.559251766994,\n        47620.34503082454,\n        47633.22876879452,\n        47636.343971727656,\n        47657.86822490678,\n        47680.380131313694,\n        47705.12119772239,\n        47722.561171281435,\n        47737.31402492516,\n        47750.51619488291,\n        47775.63377111324,\n        47782.59177854002,\n        47783.495239455704,\n        47783.77763598297,\n        47845.45235129704,\n        47867.835557462764,\n        47884.25120168584,\n        47906.937953503664,\n        47976.2355152091,\n        48016.244292465824,\n        48026.07200827109,\n        48053.568565892856,\n        48161.7841396801,\n        48163.089514921565,\n        48163.26233705521,\n        48220.07491243553,\n        48228.67062351145,\n        48252.54138611242,\n        48289.65249406732,\n        48303.68761300932,\n        48324.171979768296,\n        48342.26435461572,\n        48346.94583783362,\n        48356.96262721398,\n        48368.687113472755,\n        48377.98799671796,\n        48381.98732168493,\n        48390.28430862623,\n        48401.19615710981,\n        48427.038318312414,\n        48437.763431746454,\n        48459.69227254962,\n        48477.17592663698,\n        48478.09203677742,\n        48478.22977573665,\n        48486.17936922756,\n        48489.687411023086,\n        48496.9965445106,\n        48505.43216011272,\n        48506.5442229847,\n        48514.8325580192,\n        48523.26817099423,\n        48533.212370845875,\n        48564.507656837566,\n        48610.35702463299,\n        48611.224047937,\n        48611.435427128825,\n        48705.20784290278,\n        48740.757099379894,\n        48748.846524598936,\n        48753.34700206508,\n        48814.868266696074,\n        48857.503658237736,\n        48909.723678611284,\n        48955.228815622504,\n        48962.9163213206,\n        48969.299135535985,\n        48984.87179151237,\n        49014.49768095603,\n        49015.509937489136,\n        49015.73411672085,\n        49027.90464366983,\n        49044.2477710835,\n        49050.8456141882,\n        49058.62981066248,\n        49063.080031334735,\n        49089.469827057736,\n        49094.05408817927,\n        49114.18837283098,\n        49203.271784270604,\n        49221.58035642318,\n        49222.58194124208,\n        49222.88662211612,\n        49301.40859562837,\n        49376.2752769459,\n        49377.49483246453,\n        49377.610922031345,\n        49382.54409795684,\n        49465.874820836696,\n        49480.967015224065,\n        49485.11224170071,\n        49486.03369874621,\n        49486.32969517118,\n        49501.36221519932,\n        49525.8281041086,\n        49549.18282846853,\n        49578.41973135784,\n        49667.38842511771,\n        49714.88981739613,\n        49735.16911698488,\n        49744.32803870668,\n        49753.64664794903,\n        49775.75203656245,\n        49784.71358812632,\n        49851.650549254475,\n        49913.92065532753,\n        49919.512226860206,\n        49920.42618494396,\n        49920.60868178405,\n        49969.68931569659,\n        49973.67105577252,\n        49990.33522524405,\n        50015.941990507876,\n        50016.84811102601,\n        50017.07680434716,\n        50032.45772934619,\n        50040.89553404691,\n        50063.0132339651,\n        50078.17229387059,\n        50128.508715934055,\n        50128.81207743204,\n        50186.087090040164,\n        50200.221360541844,\n        50204.16274670362,\n        50225.68484555126,\n        50240.304775830606,\n        50280.76203776504,\n        50286.27201885004,\n        50381.95732747953,\n        50396.359363897915,\n        50429.99881932644,\n        50454.55164399604,\n        50486.358338686216,\n        50531.006018857806,\n        50561.881644147325,\n        50630.975644685095,\n        50680.526280428865,\n        50686.83076534653,\n        50687.022519119026,\n        50687.10418434932,\n        50687.13585003082\n    ];\n\nmodule.exports = {\n    distances: distances,\n    coordinates: coordinates,\n    aid_stations: [0, 76, 218, 375, 406, 519, 634, 755, 832, 924, 1013, 1100, 1152, 1222, 1305, 1383, 1449, 1565],\n\n    getLatLongFromDistance: (d) => {\n        for (let i = 0; i < distances.length; i++) {\n            if (d < distances[i]) return coordinates[i];\n        }\n    }\n}\n","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport View from 'ol/View';\nimport Feature from 'ol/Feature';\nimport { fromLonLat } from 'ol/proj';\nimport Point from 'ol/geom/Point';\nimport Polyline from 'ol/format/Polyline';\nimport { transform } from 'ol/proj';\nimport { Icon, Stroke, Style, Text, RegularShape } from 'ol/style';\nimport LineString from 'ol/geom/LineString';\nimport Fill from 'ol/style/Fill';\nimport Text from 'ol/style/Text';\nimport Overlay from 'ol/Overlay';\n\nimport { distances, coordinates, aid_stations, getLatLongFromDistance } from './route-info.js'\n\n\nvar vectorSource = new VectorSource(),\n  vectorLayer = new VectorLayer({\n    source: vectorSource\n  }),\n  styles = {\n    route: new Style({\n      stroke: new Stroke({\n        width: 6, color: [14, 64, 18, 0.8]\n      }),\n    }),\n    rectangle: (text) => {\n      return new Style({\n        image: new RegularShape({\n          fill: new Fill({\n            color: \"#c2f2e0\"\n          }),\n          stroke: new Stroke({\n            color: [5, 51, 34, 1],\n            width: 1\n          }),\n          radius: 200 / Math.SQRT2,\n          radius2: 200,\n          points: 4,\n          angle: 0,\n          scale: [0.9, 0.5],\n        }),\n        text: new Text({\n          text: text,\n          font: '8px monospace',\n          textAlign: \"center\",\n          scale: 2.2,\n          fill: new Fill({\n            color: \"#053322\"\n          })\n        })\n      })\n    },\n    icon: new Style({\n      image: new Icon({\n        anchor: [0.5, 1],\n        src: 'data/marker3.png'\n      }),\n    }),\n\n    icon2: new Style({\n      image: new Icon({\n        anchor: [0.5, 1],\n        src: 'data/start-marker.png'\n      }),\n    })\n  };\n\nvar map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    vectorLayer\n  ],\n  view: new View({\n    center: [8657171.159654377, 1449369.2919883956],\n    zoom: 13\n  })\n});\n\nvar utils = {\n  gettiming: function (url) {\n    return new Promise(function (resolve, reject) {\n      //make sure the coord is on street\n      fetch(url? url:'data/runners.csv').then(function (response) {\n        // Convert to JSON\n        resolve(response.text());\n      }).catch(function (e) { reject(e); });\n    });\n  },\n\n  createFeature: function (coord, style, name) {\n    var feature = new Feature({\n      name: name,\n      type: 'place',\n      geometry: new Point(fromLonLat(coord))\n    });\n    feature.setStyle(style);\n    vectorSource.addFeature(feature);\n    return feature;\n  },\n  createRoute: function (polyline) {\n    // route is ol.geom.LineString\n    var route = new Polyline({\n      factor: 1e5\n    }).readGeometry(polyline, {\n      dataProjection: 'EPSG:4326',\n      featureProjection: 'EPSG:3857'\n    });\n    var feature = new Feature({\n      type: 'route',\n      geometry: route\n    });\n    feature.setStyle(styles.route);\n    vectorSource.addFeature(feature);\n  },\n  to4326: function (coord) {\n    return transform([\n      parseFloat(coord[0]), parseFloat(coord[1])\n    ], 'EPSG:3857', 'EPSG:4326');\n  }\n};\n\nconst element = document.getElementById('popup');\n\nconst popup = new Overlay({\n  element: element,\n  positioning: 'bottom-center',\n  stopEvent: false,\n});\nmap.addOverlay(popup);\n\n// create the route\nlet lines = new Feature({\n  geometry: new LineString(coordinates.map(c => fromLonLat([c[1], c[0]]))),\n  name: 'Line',\n});\n\nlines.setStyle(styles.route);\nvectorSource.addFeature(lines);\n\n\nfunction csvJSON(csv) {\n  var lines = csv.split(\"\\n\");\n  var result = [];\n  var headers = lines[0].split(\",\");\n\n  for (var i = 1; i < lines.length; i++) {\n\n    var obj = {};\n    var currentline = lines[i].split(\",\");\n\n    for (var j = 0; j < headers.length; j++) {\n      obj[headers[j]] = currentline[j] ? currentline[j].replace('\\r','') : undefined;\n    }\n\n    result.push(obj);\n\n  }\n  return result;\n}\n\nlet getPrediction = (runner) => {\n  if (runner.TIME && runner.MARK) {\n    let sT = Date.parse(`Wed Oct 23 2021 4:30:00 GMT+0530 (India Standard Time)`); // start time\n    let eT = Date.parse(`Wed Oct 23 2021 ${runner.TIME}:00 GMT+0530 (India Standard Time)`); // elapsed time\n    let d_p = (distances[aid_stations[runner.MARK]] / (eT - sT)) * (Date.now() - sT); // distance_predicted\n    if (d_p > distances[aid_stations[Number(runner.MARK) + 1]]) { // if crossing next mark, keep it to 85-97% of it\n      d_p = distances[aid_stations[Number(runner.MARK) + 1]] - Math.floor(Math.random() * (500 - 100 + 1) + 100) ;\n    }\n\n    return {\n      'distance' : d_p,\n      'latlong' : getLatLongFromDistance(d_p) // get lat long for it\n    }; \n  } else if (runner.MARK) { // time not captured.\n    return {\n      'distance': distances[aid_stations[runner.MARK]], // last aid station mark\n      'latlong': [ coordinates[aid_stations[runner.MARK]][1], coordinates[aid_stations[runner.MARK]][0] ]// lat long of the last aid station\n    }\n  } else {\n    return {\n      'distance' : 0,\n      'latlong' : [coordinates[1], coordinates[0]] // no MARK means, not started\n    };\n  }\n}\n\nvar markerFeature = [];\nvar markerPrediction = {};\n\ndocument.getElementById(\"select\").addEventListener(\"change\", (e) => {\n  var val = document.getElementById(\"select\").value;\n  let splits = val.split(' | ');\n  let runner = runners.filter(r => r.NAME === splits[0]);\n\n  runner = (val === '- ALL -') ? runners : runner;\n  if (runner.length === 0) return;\n\n  markerFeature.forEach(m => {\n    vectorSource.removeFeature(m);\n  })\n  markerFeature = [];\n  $(element).popover('dispose');\n  runner.forEach(r => {\n    //console.log(r);\n    if (r.MARK) {\n      let p = getPrediction(r);\n      let m = utils.createFeature(p.latlong, styles.icon, r.BIB);\n      markerFeature.push(m);\n      markerPrediction[r.BIB] = p.distance;\n    }\n  })\n});\n\nvar getExpTime = (km, t) => {\n  let sT = Date.parse(`Wed Oct 31 2021 4:30:00 GMT+0530 (India Standard Time)`);\n  let cT = Date.parse(`Wed Oct 31 2021 ${t}:00 GMT+0530 (India Standard Time)`);\n  let expT = ((cT - sT) / km) * 50000;\n  return (new Date(sT + expT)).toLocaleString().split(', ')[1];\n}\n\nvar runners = [];\nutils.gettiming().then(function (d) {\n  runners = csvJSON(d);\n  var datalist = document.getElementById(\"runners\");\n  datalist.innerHTML += `<option value=\"- ALL -\"></option>`;\n  runners.forEach(d => {\n    // create the remaining\n    datalist.innerHTML += `<option value=\"${d.NAME} | ${d.BIB}\"></option>`;\n  });\n});\n\nutils.createFeature([77.7048069, 12.9065275], styles.icon2, 'Startpoint');\n\nmap.on('click', function (evt) {\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n    return feature;\n  });\n  if (feature && feature.get('name') && feature.get('name').startsWith('B42SE')) {\n    popup.setPosition(evt.coordinate);\n    let runner = feature.get('name') ? runners.filter(r => r.BIB === feature.get('name')) : null;\n    if (runner && runner.length > 0) runner = runner[0];\n\n    let name = runner.NAME,\n      distance = markerPrediction[runner.BIB] / 1000,\n      exptime = getExpTime(distances[aid_stations[runner.MARK]], runner.TIME);\n\n    $(element).popover('dispose');\n    $(element).popover({\n      placement: 'top',\n      html: true,\n      content: `<div>${name}</div><div> Distance: ${Math.round(distance * 100) / 100} km</div><div>ETA: ${exptime ? exptime : 'N/A'} HRS</div>`\n    });\n    $(element).popover('show');\n  } else {\n    $(element).popover('dispose');\n  }\n});"],"names":["$aa9447dea9a12a8f$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$106eee51eb5027f3$export$8eda8fbd1364c8a1","a","b","$106eee51eb5027f3$export$45934da9231b7323","arr","target","direction","n","length","i","$106eee51eb5027f3$export$1f4f991ce94838ce","begin","end","tmp","$106eee51eb5027f3$export$46e35401bc090c62","data","extension","Array","isArray","$106eee51eb5027f3$export$bcc761834e33d339","arr1","arr2","len1","$e8fe802d0684ce0f$export$ad8dd69aa6772cd0","$e8fe802d0684ce0f$export$5c50afa32081505e","$e8fe802d0684ce0f$export$3850addf0fb4e6a7","$abf34980d1562f58$export$18e1b4ff5b3c2297","Error","$abf34980d1562f58$var$uidCounter_","$abf34980d1562f58$export$604e9536b9e0488a","obj","ol_uid","String","$2e5310563a29b6d9$var$ua","navigator","userAgent","toLowerCase","$2e5310563a29b6d9$export$543c908bf17a24fb","indexOf","$2e5310563a29b6d9$export$bccc8605349feea7","$2e5310563a29b6d9$export$f16ffc71033a7aaa","$2e5310563a29b6d9$export$1940d5d2b4cf824d","devicePixelRatio","$2e5310563a29b6d9$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$2e5310563a29b6d9$export$9544418e5c6fedfe","Image","decode","$2e5310563a29b6d9$export$700ce540937d8c69","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$4a6933b8a2a12a45$export$9099ad97b570f7c","_super","AssertionError","code","_this","message","split","call","name","$4a6933b8a2a12a45$var$__extends","$a93d7950106d9b94$export$b8795f4f643ce74f","assertion","errorCode","$4a6933b8a2a12a45$exports","default","$ea4701d35a7bcfcb$var$transformStringDiv","$ea4701d35a7bcfcb$export$77f8d2fc923b14e3","transform","c","d","e","f","$ea4701d35a7bcfcb$export$6af9bbf310c9e4bf","coordinate","x","y","$ea4701d35a7bcfcb$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$ea4701d35a7bcfcb$export$6e6aac0f60e83c70","source","mat","det","$ea4701d35a7bcfcb$export$47bee913e0e80eb4","transformString","join","node","document","createElement","style","$a6e2e0d6d016083d$export$9099ad97b570f7c","$a13b08ece8514024$export$9099ad97b570f7c","$4b239fe5fbbd9442$export$a7ecbd362d65c1fe","coordinates","extent","$4b239fe5fbbd9442$export$dbb3d72606cdc11","ii","$4b239fe5fbbd9442$export$2852acc8f8b94686","$4b239fe5fbbd9442$export$14e1765886db335a","value","opt_extent","$4b239fe5fbbd9442$export$d6a0542127b96c83","slice","$4b239fe5fbbd9442$export$c7d6a927f416dd39","dx","dy","$4b239fe5fbbd9442$export$c422a9fcb5f1ee5c","$4b239fe5fbbd9442$export$cc70e7e516e4370f","$4b239fe5fbbd9442$export$4f55e2d709659e7b","extent1","extent2","$4b239fe5fbbd9442$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$4b239fe5fbbd9442$export$ea8082d0226d35a5","$4b239fe5fbbd9442$export$80741250c74fd4fa","$4b239fe5fbbd9442$export$bcc761834e33d339","$4b239fe5fbbd9442$export$4b116deb3079b147","flatCoordinates","offset","stride","$4b239fe5fbbd9442$export$8696fee511ea7c7a","min","max","$4b239fe5fbbd9442$export$c26f7b9c5adc34b4","callback","val","$4b239fe5fbbd9442$export$3932426cd8118930","$4b239fe5fbbd9442$export$4e2fc25ce97f3583","$4b239fe5fbbd9442$export$35aedeaeee8be6cd","$4b239fe5fbbd9442$export$5100f0815ea32995","$4b239fe5fbbd9442$export$ab4e37d31d15614d","area","$4b239fe5fbbd9442$export$988399e568471db1","$4b239fe5fbbd9442$export$3dc3550566517965","$4b239fe5fbbd9442$export$e178c8044d3d0a05","$4b239fe5fbbd9442$export$339e303bf205caae","$4b239fe5fbbd9442$export$38622892ed79bdc7","corner","$4b239fe5fbbd9442$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$4b239fe5fbbd9442$export$c491031eb9adcc3a","intersection","$4b239fe5fbbd9442$export$c3bd2c3b798b0350","$4b239fe5fbbd9442$export$76e02248c0889c3e","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$4b239fe5fbbd9442$var$_boundingExtentXYs","$1cba8f77b2fc8147$export$4b8705656de00c72","$1cba8f77b2fc8147$export$4a376e0f60d976ee","cosh","exp","$1cba8f77b2fc8147$export$e08236045caaa3e1","log2","log","LOG2E","$1cba8f77b2fc8147$export$fd0b1e5ac4df516c","t","$1cba8f77b2fc8147$export$8b6706701cd75ea9","$1cba8f77b2fc8147$export$11468133b1231643","angleInRadians","PI","$1cba8f77b2fc8147$export$4fc80c88d72f096","angleInDegrees","$1cba8f77b2fc8147$export$3334706ffb3dccb1","r","$1cba8f77b2fc8147$export$45ca8e7f50ccf2e0","$4a3eb4cf07e68bcb$var$HEX_COLOR_RE_","$4a3eb4cf07e68bcb$var$NAMED_COLOR_RE_","$4a3eb4cf07e68bcb$export$9fe004474d6f7f65","color","$4a3eb4cf07e68bcb$export$47bee913e0e80eb4","$4a3eb4cf07e68bcb$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$4a3eb4cf07e68bcb$export$21528ce64591bf2","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","$4a3eb4cf07e68bcb$export$2e33abec8aecd572","map","Number","$4a3eb4cf07e68bcb$var$fromStringInternal_","$4a3eb4cf07e68bcb$export$7266a24c0caa2a8","undefined","$e2ca19531263975f$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$e2ca19531263975f$var$getKey","set","setSize","maxCacheSize","$e2ca19531263975f$export$601b9e2be44c7cb2","$175694b649fdbaa2$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$3dc3825e79de4e26$export$9099ad97b570f7c","$b1c01449f6fb04fd$export$f3c88f5a058bec38","assign","var_sources","TypeError","output","arguments","$b1c01449f6fb04fd$export$97fff7491bd246bd","object","property","$b1c01449f6fb04fd$export$207c30846165e93a","values","$b1c01449f6fb04fd$export$988399e568471db1","$5871a677c2d47110$export$9099ad97b570f7c","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$5871a677c2d47110$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","index","splice","$360d9a9621464d34$export$9099ad97b570f7c","$397f0f5ed9a3050c$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$397f0f5ed9a3050c$export$d2df825b2d8bc2ba","$397f0f5ed9a3050c$export$6dee5fd4fdf600ff","$c022d33ed6bb5ca2$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$c022d33ed6bb5ca2$var$__extends","changed","getRevision","len","ol_key","$c022d33ed6bb5ca2$export$21f63b82add5980c","$5871a677c2d47110$exports","$c022d33ed6bb5ca2$export$9099ad97b570f7c","$8f7fdb7cfb75e879$export$b902cfd711fa7f06","ObjectEvent","oldValue","$8f7fdb7cfb75e879$var$__extends","$8f7fdb7cfb75e879$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$c022d33ed6bb5ca2$exports","$b20feb8964318d3f$export$9099ad97b570f7c","$a91eb7d9c06d6003$export$9099ad97b570f7c","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$a91eb7d9c06d6003$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$8f7fdb7cfb75e879$exports","$782b75247205ab14$export$9099ad97b570f7c","$a979859450d27aab$export$9099ad97b570f7c","$c8891acc328b159c$export$16970faadcd3f29b","layerState","viewState","zoom","$c8891acc328b159c$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$c8891acc328b159c$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$a91eb7d9c06d6003$exports","$04466ada99459d91$export$bcc761834e33d339","coordinate1","coordinate2","equals","$04466ada99459d91$export$d40e2456b1281660","cosAngle","sinAngle","$04466ada99459d91$export$5a0d9577a24f3c5b","projection","canWrapX","worldWidth","worldsAway","$04466ada99459d91$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$23233cffd63dbe95$var$expireIconCache","$23233cffd63dbe95$export$9099ad97b570f7c","MapRenderer","map_","$23233cffd63dbe95$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","$c8891acc328b159c$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ffba12b1b1caac35$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$ffba12b1b1caac35$var$__extends","$eb83c055c71b92dc$var$fontRegEx","RegExp","$eb83c055c71b92dc$var$fontRegExMatchIndex","$eb83c055c71b92dc$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$e938c51870f186d7$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$e938c51870f186d7$export$954ce77093b0d494","element","offsetWidth","marginLeft","marginRight","$e938c51870f186d7$export$a3ec1d24165186f9","offsetHeight","marginTop","marginBottom","$e938c51870f186d7$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$e938c51870f186d7$export$47503d53c08beb29","$e938c51870f186d7$export$f0994cfd84ab1152","lastChild","$3f8842a01a05d29f$export$6ad0413f8fea3c71","$3f8842a01a05d29f$export$70c5a077e5d6beb9","$3f8842a01a05d29f$export$907cf5cff4a8acb1","console","warn","$3f8842a01a05d29f$var$measureFont","measureElement","$3f8842a01a05d29f$var$measureContext","$3f8842a01a05d29f$export$384c0f09c94ed6cc","$3f8842a01a05d29f$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$3f8842a01a05d29f$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$3f8842a01a05d29f$export$a2bf16790cd8f004","metrics","$3f8842a01a05d29f$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","measureText","$3f8842a01a05d29f$export$4b2ca35321179b27","$3f8842a01a05d29f$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","translate","label","$3f8842a01a05d29f$var$executeLabelInstructions","drawImage","restore","$de107509ffcc1e1e$export$9099ad97b570f7c","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$eb83c055c71b92dc$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$de107509ffcc1e1e$var$__extends","event_1","$ffba12b1b1caac35$exports","declutterLayers","previousElement","layerIndex","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$e938c51870f186d7$export$439ebc2b0f0ec9f4","getDataAtPixel","$23233cffd63dbe95$exports","$b22fe65cc2091c4a$export$9099ad97b570f7c","$c8bee1b3aeb9d79e$var$Property","$c8bee1b3aeb9d79e$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$c8bee1b3aeb9d79e$var$__extends","$c8bee1b3aeb9d79e$export$9099ad97b570f7c","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$3bf57b305f2befe1$var$Property","$3bf57b305f2befe1$export$9099ad97b570f7c","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$c8bee1b3aeb9d79e$exports","setLayers","$3bf57b305f2befe1$var$__extends","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$cd0dc31bb7f07bd8$export$9099ad97b570f7c","MapEvent","$cd0dc31bb7f07bd8$var$__extends","$d4f51dc221fadaed$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$d4f51dc221fadaed$var$__extends","getEventPixel","getCoordinateFromPixel","$cd0dc31bb7f07bd8$exports","$a406e3695e3399d9$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$a69469b84400a522$export$9099ad97b570f7c","$85c0a5b12bf0966d$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$85c0a5b12bf0966d$var$__extends","emulateClick_","pointerEvent","newEvent","$d4f51dc221fadaed$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$9dc1c4328cbd3b30$export$9099ad97b570f7c","$a2f92f24bac5651c$export$9099ad97b570f7c","$9ea30a2172af1cde$export$9099ad97b570f7c","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$1eec589ef9f03c3a$export$9099ad97b570f7c","$5e7cdcfae3171aaa$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$5e7cdcfae3171aaa$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$5e7cdcfae3171aaa$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$617763bc4bd20684$export$9099ad97b570f7c","$9e10b55cc3e5aff2$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$9e10b55cc3e5aff2$export$af68584dedf5e52c","$9e10b55cc3e5aff2$export$9099ad97b570f7c","$2856fbf609c8d5d1$export$9099ad97b570f7c","$8b00b5310669c7ed$export$9099ad97b570f7c","$02080a5168d333d1$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$4cdcea7942371c6e$export$bb1f4f75177e5528","$4cdcea7942371c6e$export$6fd015d56b8406c9","$4cdcea7942371c6e$export$64afaa717a0c4932","$4cdcea7942371c6e$export$2126dea64bc40b7b","tan","$4cdcea7942371c6e$var$EPSG3857Projection","EPSG3857Projection","point","$4cdcea7942371c6e$var$__extends","$4cdcea7942371c6e$export$850c9b527a5298aa","$4cdcea7942371c6e$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$4cdcea7942371c6e$export$f361696640082386","atan","$2bd0be18b84525d9$export$6fd015d56b8406c9","$2bd0be18b84525d9$export$af68584dedf5e52c","$2bd0be18b84525d9$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$2bd0be18b84525d9$var$__extends","$2bd0be18b84525d9$export$850c9b527a5298aa","$a9a5e0c6ca2e1695$var$cache","$53c818eff833bb4a$var$transforms","$53c818eff833bb4a$export$568ed88074851180","destination","sourceCode","destinationCode","$dcc53fed7252e62f$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$dcc53fed7252e62f$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$fa384abe43b1f395$export$3fbbaef54e2e9d28","$fa384abe43b1f395$export$678028d364072132","$fa384abe43b1f395$export$6308908a0016f099","$a9a5e0c6ca2e1695$export$568ed88074851180","$fa384abe43b1f395$export$7eb84799c931fe91","projectionLike","replace","$fa384abe43b1f395$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$fa384abe43b1f395$export$747af4f49bde2f53","vertices","$fa384abe43b1f395$export$a42db349809b0c24","projections","$fa384abe43b1f395$export$fd4cd3535c7ea97f","$fa384abe43b1f395$export$f704437a72056fb8","defaultCode","$fa384abe43b1f395$export$13550698a4b6771e","opt_projection","$fa384abe43b1f395$export$4b169b49e1a4823b","$fa384abe43b1f395$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$53c818eff833bb4a$export$7eb84799c931fe91","$fa384abe43b1f395$export$9336879ef6599bf5","$fa384abe43b1f395$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$fa384abe43b1f395$var$userProjection","$fa384abe43b1f395$export$352fd07bdd93dc1e","$fa384abe43b1f395$export$4a182a4d53d7595c","$fa384abe43b1f395$export$b5d00774755783fc","destProjection","$fa384abe43b1f395$export$a7d473ff80a6a3b","$fa384abe43b1f395$export$f87215506b474b9e","$00d39586d2dd894f$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$00d39586d2dd894f$export$eaafe0fae18e32b1","$e1ddb1e9ae31ae02$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$e1ddb1e9ae31ae02$var$getSmoothClampedResolution","$e1ddb1e9ae31ae02$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$a18de7eaf14a0b33$export$e97ec87d2336bd4e","$a18de7eaf14a0b33$export$eaafe0fae18e32b1","$453e0f55adf2aa98$export$9fbc3b1d6b2da9ec","pow","$453e0f55adf2aa98$export$673b9849e2bc032c","$453e0f55adf2aa98$export$1b5c1277e30d397d","$453e0f55adf2aa98$export$5523e35ab8ae283a","$4cdcea7942371c6e$exports","PROJECTIONS","$2bd0be18b84525d9$exports","fromEPSG4326","toEPSG4326","$adef5d18c3ab54fd$export$9099ad97b570f7c","$49a9dfb608ce5f95$export$92106241c01aa541","opt_dest","dest","$49a9dfb608ce5f95$export$d40e2456b1281660","anchor","anchorX","anchorY","k","$ba41d9b80f779606$var$tmpTransform","$ba41d9b80f779606$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$ba41d9b80f779606$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$4b239fe5fbbd9442$export$d1e01ccfd06bf8ee","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$7e268a797fd34dbd$export$2a65008b73824080","layout","$7e268a797fd34dbd$export$36912b83e488cd77","simpleGeometry","getFlatCoordinates","getStride","$7e268a797fd34dbd$export$9099ad97b570f7c","SimpleGeometry","$7e268a797fd34dbd$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$7e268a797fd34dbd$var$getLayoutForStride","$49a9dfb608ce5f95$export$8f869025bba9609b","$49a9dfb608ce5f95$export$41b0d7466cde8385","$ba41d9b80f779606$exports","$40f507b383da395e$var$assignClosest","offset1","offset2","$40f507b383da395e$export$acf7548d1f0e8581","squaredDelta","$40f507b383da395e$export$ba38095f6bb45df2","ends","$40f507b383da395e$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$40f507b383da395e$export$3dd3914e22f9012e","$6cb5b4913a2f0936$export$e175f505890ac90f","$6cb5b4913a2f0936$export$ab1a51db55485752","coordinatess","opt_ends","jj","$d043153e418ded33$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$d043153e418ded33$export$383ea8a1f2974dfb","$d043153e418ded33$export$e29de4fdb2175738","$d043153e418ded33$export$1df19a1eb5514c2f","simplifiedEnds","$3185dd1b8645ed57$export$92f32d891164b0ac","opt_coordinates","$3185dd1b8645ed57$export$d82a8a3167f968d","opt_coordinatess","$3185dd1b8645ed57$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$40a616a92c640fdd$export$9bf2059fd656d5e9","twiceArea","$40a616a92c640fdd$export$99cb92d00fd73c87","$43c0695b48c31937$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$43c0695b48c31937$var$__extends","getArea","$7e268a797fd34dbd$exports","$fd187036c4ad2ec2$export$9099ad97b570f7c","Point","$fd187036c4ad2ec2$var$__extends","$6cb5b4913a2f0936$export$a53e62528b652807","$7b5592c4b91a07ed$export$f7b55b637f92fd7","$7b5592c4b91a07ed$export$e2ed757909b25f63","wn","$7b5592c4b91a07ed$export$51e46a3625992b91","$b9b67588a55982e7$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$1c34f05d540d121d$export$40f3d9558cf6e846","ret","point1","point2","$76e31ee9dbbe302d$export$26f047a5bfac4b1a","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$4b239fe5fbbd9442$export$525a75abb91115e3","$76e31ee9dbbe302d$export$717c2c7c46a5bf3d","$76e31ee9dbbe302d$export$f14bd9270666b480","$32fb60cc2618c78c$export$c77fe031a1447f2e","$ee95668e612b360f$export$add61ad31d0a68b4","edge","$ee95668e612b360f$export$586adaf930d9fdb6","opt_right","right","isClockwise","$ee95668e612b360f$export$325e57738fd8b321","$67ee9fdd559ae60e$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$67ee9fdd559ae60e$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$fd187036c4ad2ec2$exports","getLinearRingCount","getLinearRing","$43c0695b48c31937$exports","getLinearRings","linearRings","$67ee9fdd559ae60e$export$9099ad97b570f7c","$67ee9fdd559ae60e$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$67ee9fdd559ae60e$export$b50d271c6e9656cd","$67ee9fdd559ae60e$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$67ee9fdd559ae60e$export$5d1798f0e1df079","getRadius","startAngle","$4d09fd224bce9aac$var$animationCallback","returnValue","$4d09fd224bce9aac$export$535fae5a159fbda4","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$4d09fd224bce9aac$export$8b6914b45b83f21f","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$e1ddb1e9ae31ae02$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$e1ddb1e9ae31ae02$export$7690ad4e930f454b","constraint","$4d09fd224bce9aac$export$9665b691bc2d5ca0","theta","opt_tolerance","enableRotation","constrainRotation","$4d09fd224bce9aac$export$5d87c27d7d9f380e","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$4d09fd224bce9aac$var$calculateCenterOn","rotX","rotY","$4d09fd224bce9aac$export$9099ad97b570f7c","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$4d09fd224bce9aac$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nearest","baseLevel","fit","geometryOrExtent","$67ee9fdd559ae60e$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$3f0417c20d1cc4a3$export$c563c2b7121f8771","$3f0417c20d1cc4a3$export$48d31d2725e4d98b","$7f90c67a94ff7584$export$9099ad97b570f7c","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$3bf57b305f2befe1$exports","view","$4d09fd224bce9aac$exports","$7f90c67a94ff7584$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$5e7cdcfae3171aaa$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","toString","$7f90c67a94ff7584$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$85c0a5b12bf0966d$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","parseFloat","$8f4a601d9be32279$export$9099ad97b570f7c","Control","target_","listenerKeys","$8f4a601d9be32279$var$__extends","mapEvent","$061c199bdbf67255$export$9099ad97b570f7c","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$061c199bdbf67255$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$8f4a601d9be32279$exports","$c0271bd4f0f131b5$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$c0271bd4f0f131b5$var$__extends","resetNorth_","$a099fe81d7933b1b$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$a099fe81d7933b1b$var$__extends","zoomByDelta_","currentZoom","newZoom","$9b8240cd930c7251$export$9099ad97b570f7c","$cc7ed3d15f79f09e$export$63568b31cb17dd4d","$cc7ed3d15f79f09e$export$d2c07614bfd6a817","$cc7ed3d15f79f09e$export$9099ad97b570f7c","Interaction","setActive","$cc7ed3d15f79f09e$var$__extends","active","$05d04f741d9f44ea$export$9099ad97b570f7c","DoubleClickZoom","delta_","$05d04f741d9f44ea$var$__extends","stopEvent","shiftKey","$cc7ed3d15f79f09e$exports","zoomByDelta","$4e21594aff042ad9$export$e61edea4dfe4ed9b","$4e21594aff042ad9$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$4e21594aff042ad9$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$4e21594aff042ad9$var$isPointerDraggingEvent","$719344b2915a5282$export$8dbdea330bbd6b3c","conditions","pass","$719344b2915a5282$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$719344b2915a5282$export$584a07df7b145c47","hasAttribute","activeElement","$719344b2915a5282$export$363947888fb85da6","$719344b2915a5282$export$a8612972eacfc116","$719344b2915a5282$export$9f5e19851eeaf2c1","$719344b2915a5282$export$1734dfcac3c09b2f","$719344b2915a5282$export$59c8376875f673f8","$719344b2915a5282$export$5bbcce8021828272","tagName","$719344b2915a5282$export$d31d3f3aa38542a8","pointerType","$719344b2915a5282$export$45cd27c0322d6513","isPrimary","$30483e29507706cc$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$30483e29507706cc$var$__extends","centroid","$4e21594aff042ad9$exports","update","getDistance","getAngle","centerpx","$fba38e1bcb241519$export$9099ad97b570f7c","DragRotate","lastAngle_","$fba38e1bcb241519$var$__extends","$aceb96e89d56f634$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$aceb96e89d56f634$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$20cb6644c41e6461$var$DragBoxEventType","$20cb6644c41e6461$export$4d9b552836937ca2","DragBoxEvent","$20cb6644c41e6461$var$__extends","$20cb6644c41e6461$export$9099ad97b570f7c","DragBox","box_","$aceb96e89d56f634$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$c82213a35099ea60$export$9099ad97b570f7c","DragZoom","out_","out","$c82213a35099ea60$var$__extends","factor","$20cb6644c41e6461$exports","$b33346ced3ffa1bb$export$9099ad97b570f7c","$a55d85978dd11fe1$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$a55d85978dd11fe1$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$231d0cdbd522b255$export$9099ad97b570f7c","KeyboardZoom","$231d0cdbd522b255$var$__extends","charCode","charCodeAt","$49ab15a508fcdc65$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$3750bcddcbf4c872$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$3750bcddcbf4c872$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$3750bcddcbf4c872$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$6a2e253f5cb0bc62$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$6a2e253f5cb0bc62$var$__extends","rotationDelta","touch0","touch1","$9dd5b3aa2e054d06$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$9dd5b3aa2e054d06$var$__extends","scaleDelta","$a9d71ecad6ede6f8$export$9099ad97b570f7c","Map1","$a099fe81d7933b1b$exports","zoomOptions","$c0271bd4f0f131b5$exports","rotateOptions","attribution","$061c199bdbf67255$exports","attributionOptions","$070ebaa1cd5f7208$export$b403fbac94228e09","altShiftDragRotate","$fba38e1bcb241519$exports","doubleClickZoom","$05d04f741d9f44ea$exports","zoomDelta","zoomDuration","dragPan","$30483e29507706cc$exports","pinchRotate","$6a2e253f5cb0bc62$exports","pinchZoom","$9dd5b3aa2e054d06$exports","keyboard","$a55d85978dd11fe1$exports","$231d0cdbd522b255$exports","mouseWheelZoom","$3750bcddcbf4c872$exports","shiftDragZoom","$c82213a35099ea60$exports","$7251b9d3abaab321$export$b403fbac94228e09","$a9d71ecad6ede6f8$var$__extends","$de107509ffcc1e1e$exports","$7f90c67a94ff7584$exports","$62cad3baa594a7e9$exports","t1","t2","r1","e1","a1","h1","o","u","p","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","all","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$2afaec311bc855ad$export$9099ad97b570f7c","$e12c8bb44acdd73c$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$b30624b926c21759$export$55029509b82b2e2b","$1930bd353b5dd973$export$9099ad97b570f7c","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","renderOptions_","$1930bd353b5dd973$var$__extends","getFill","getPoints","getRadius2","getStroke","createHitDetectionCanvas_","image","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$bf4e1aa287034bcd$export$9099ad97b570f7c","CircleStyle","$bf4e1aa287034bcd$var$__extends","setRadius","$1930bd353b5dd973$exports","$2977a884eb0897b3$export$9099ad97b570f7c","Fill","color_","setColor","$2051e0d06771d465$export$9099ad97b570f7c","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$2bbb9f7aac5f2c94$var$Style","Style","geometryFunction_","$2bbb9f7aac5f2c94$var$defaultGeometryFunction","setGeometry","image_","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$2bbb9f7aac5f2c94$var$defaultStyles","$2bbb9f7aac5f2c94$export$33d0043adf82cc14","$bf4e1aa287034bcd$exports","$2bbb9f7aac5f2c94$export$9099ad97b570f7c","$94242b274ad2f2ed$var$Property","$94242b274ad2f2ed$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","$94242b274ad2f2ed$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","opt_style","styleFunction","styles_1","$2bbb9f7aac5f2c94$export$4aaa4bacaec09e94","$df0635a74a7822e1$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$df0635a74a7822e1$export$c649c04369bd3370","$df0635a74a7822e1$export$2513c58bc344fc5c","$df0635a74a7822e1$export$84e3c67fd41b07f5","$df0635a74a7822e1$export$6cd4b1e0c0e7240c","$df0635a74a7822e1$export$9099ad97b570f7c","$4d95c64ce828af6b$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$602faaef6592ac32$export$9099ad97b570f7c","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$602faaef6592ac32$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$1629b032c2c05b7a$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$1629b032c2c05b7a$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$602faaef6592ac32$exports","$8503ee84237976ea$export$9099ad97b570f7c","CanvasLineStringBuilder","$8503ee84237976ea$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$0537f4f8a36c0b60$export$9099ad97b570f7c","CanvasPolygonBuilder","$0537f4f8a36c0b60$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$4f3943dd3f2f8692$export$9099ad97b570f7c","$cc27ec6f48b585fa$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$d4f3e170528ef1db$export$3964e67694391753","$d4f3e170528ef1db$export$9099ad97b570f7c","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$d4f3e170528ef1db$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$ad370384483cb7cc$var$BATCH_CONSTRUCTORS","$0537f4f8a36c0b60$exports","$1629b032c2c05b7a$exports","$8503ee84237976ea$exports","$d4f3e170528ef1db$exports","$ad370384483cb7cc$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$7971363be443bf07$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$7971363be443bf07$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","imageState","$d3c91b778f21fae8$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$d3c91b778f21fae8$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$7971363be443bf07$exports","$e33d80fd92b6dc93$export$9099ad97b570f7c","$2ec7b6c5a4a595c6$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$2c5e6ed7a2421d9f$export$7326ac1b36a49776","$fbecb62010b6a32d$var$tmpExtent","$fbecb62010b6a32d$var$p1","$fbecb62010b6a32d$var$p2","$fbecb62010b6a32d$var$p3","$fbecb62010b6a32d$var$p4","$fbecb62010b6a32d$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$fbecb62010b6a32d$var$rtlRegEx","fromCharCode","$fbecb62010b6a32d$var$horizontalTextAlign","align","test","TEXT_ALIGN","$fbecb62010b6a32d$export$9099ad97b570f7c","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$3f8842a01a05d29f$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$93b70df51285fcd1$var$ORDER","$93b70df51285fcd1$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$93b70df51285fcd1$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$93b70df51285fcd1$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$93b70df51285fcd1$export$9099ad97b570f7c","$699b1a7f567cffb4$export$9099ad97b570f7c","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$699b1a7f567cffb4$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$7be39e8ef53520fe$export$9099ad97b570f7c","$58814494b0ffc538$export$9099ad97b570f7c","$244f7fbdc76b1fe6$export$9099ad97b570f7c","ImageBase","$244f7fbdc76b1fe6$var$__extends","$9d0a6d02ef4dbef8$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$9d0a6d02ef4dbef8$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$244f7fbdc76b1fe6$exports","$e40ce0ac0e40cff8$var$taintedTestContext","$e40ce0ac0e40cff8$var$IconImage","IconImage","imageState_","tainted_","$e40ce0ac0e40cff8$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$9d0a6d02ef4dbef8$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$e40ce0ac0e40cff8$export$7eb84799c931fe91","$e3932ef79b782730$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$e40ce0ac0e40cff8$exports","offset_","offsetOrigin_","offsetOrigin","$e3932ef79b782730$var$__extends","setAnchor","iconImageSize","$73cf95c6d003b56f$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$73cf95c6d003b56f$export$65a5cfeed6fd0c33","feature1","feature2","$73cf95c6d003b56f$export$f0ea347488340e3d","$73cf95c6d003b56f$export$522dfd100dd96ba1","$73cf95c6d003b56f$var$renderGeometry","$73cf95c6d003b56f$var$renderFeatureInternal","getGeometries","$b2ab5ea43be4855f$export$9099ad97b570f7c","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$b2ab5ea43be4855f$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$ea4701d35a7bcfcb$export$e7468c0ae08395df","clipped","transforms","imageSmoothingEnabled","$699b1a7f567cffb4$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$e3932ef79b782730$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$ce4b2e7cdf1ad653$export$9fd146a6491490e3","resultFeatures","$ce4b2e7cdf1ad653$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","$4b239fe5fbbd9442$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","loadFeatures","$73cf95c6d003b56f$export$f3b3f9822f340683","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$d3c91b778f21fae8$exports","$d16efd1165653604$export$9099ad97b570f7c","VectorLayer","$d16efd1165653604$var$__extends","$b2ab5ea43be4855f$exports","$94242b274ad2f2ed$exports","$971276aecb1c0996$export$9099ad97b570f7c","opt_maxEntries","rbush_","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","concat","rbush","$2317568ccbc72da2$var$adaptAttributions","attributionLike","$2317568ccbc72da2$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$2317568ccbc72da2$var$__extends","getContextOptions","refresh","setAttributions","setState","$860c7bb87df2949a$export$9099ad97b570f7c","$5de5d36893087699$export$8dbdea330bbd6b3c","$2c6eefd9d65aa1d3$export$9099ad97b570f7c","$5f956e0dd2b94819$var$withCredentials","$5f956e0dd2b94819$export$52988233cf090939","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$5f956e0dd2b94819$export$4355fa6d12274ca5","dataProjection","addFeatures","$e56c3ef950abbf44$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$e56c3ef950abbf44$var$__extends","$e56c3ef950abbf44$export$9099ad97b570f7c","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$2317568ccbc72da2$exports","$d9384f01d604a2a6$export$9099ad97b570f7c","$87fb90d07b93a774$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$87fb90d07b93a774$var$__extends","getPreload","getUseInterimTilesOnError","$848a86622bea988b$var$TileRange","TileRange","containsTileRange","getHeight","$848a86622bea988b$export$ea8082d0226d35a5","$848a86622bea988b$export$9099ad97b570f7c","$0704a0db83121540$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$0704a0db83121540$var$__extends","isDrawableTile","tileState","getTile","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","endTransition","postRenderFunction","tileSource1","frameState1","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$0704a0db83121540$export$9099ad97b570f7c","$adffffba3f1e99ac$export$9099ad97b570f7c","TileLayer","$adffffba3f1e99ac$var$__extends","$0704a0db83121540$exports","$87fb90d07b93a774$exports","$150b5bd0bfcaba04$export$9099ad97b570f7c","Tile","interimTile","transition_","transitionStarts_","$150b5bd0bfcaba04$var$__extends","release","refreshInterimChain","getTileCoord","$00b94bfd7801f3c8$export$9099ad97b570f7c","ImageTile","tileLoadFunction","tileLoadFunction_","$00b94bfd7801f3c8$var$__extends","naturalWidth","naturalHeight","$150b5bd0bfcaba04$exports","$72092921cefc513c$var$brokenDiagonalRendering_","$8d02cc6e51329a90$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$7125477b3730d11b$export$5f986e3acaff8610","msImageSmoothingEnabled","$72092921cefc513c$var$drawTestTriangle","v1","v2","$72092921cefc513c$var$verifyBrokenDiagonalRendering","$72092921cefc513c$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$72092921cefc513c$export$792a797b69be0d58","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$1cba8f77b2fc8147$export$27dc5719ceda6735","$72092921cefc513c$var$isBrokenDiagonalRendering","ud","vd","steps","$938fa94ea91032bd$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$72092921cefc513c$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$938fa94ea91032bd$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$350327925a545431$export$9099ad97b570f7c","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$298e07180ebbc18c$export$ea8082d0226d35a5","opt_tileCoord","$298e07180ebbc18c$export$1039fb0288fd71e3","$298e07180ebbc18c$export$a0f0ccbe5bbc0789","$b8c0af040d9dc0fe$export$9099ad97b570f7c","TileCache","$b8c0af040d9dc0fe$var$__extends","pruneExceptNewestZ","$298e07180ebbc18c$export$5208a752d34424e5","$1e36dd0d5814997b$export$9099ad97b570f7c","$ec3aa58fac71f355$var$tmpTileCoord","$ec3aa58fac71f355$export$9099ad97b570f7c","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$cb780d18f7933e5c$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$cb780d18f7933e5c$var$resolutionsFromExtent","$cb780d18f7933e5c$export$57c49ef1657592d4","$cb780d18f7933e5c$export$9666e825b22d806d","$cb780d18f7933e5c$export$6dfef52f91d4f582","opt_maxResolution","half","$824311a81ea848b7$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$b8c0af040d9dc0fe$exports","tmpSize","tileOptions","$824311a81ea848b7$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","$cb780d18f7933e5c$export$5a0d9577a24f3c5b","$298e07180ebbc18c$export$b46b80619528d4e5","$824311a81ea848b7$export$8434c8db61edbf9d","TileSourceEvent","$824311a81ea848b7$export$9099ad97b570f7c","$88df26af4a8f1ef6$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$88df26af4a8f1ef6$export$2d2faeb2e9d58b93","templates","tileUrlFunctions","$298e07180ebbc18c$export$4639c7f2947f4458","$88df26af4a8f1ef6$export$c6a04e0c49b28953","$1dbd919805fd1d18$export$9099ad97b570f7c","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","$1dbd919805fd1d18$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$824311a81ea848b7$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","$88df26af4a8f1ef6$export$47abe479fba0e55d","$505aa269794a499f$var$defaultTileLoadFunction","imageTile","$505aa269794a499f$export$9099ad97b570f7c","TileImage","tileClass","$00b94bfd7801f3c8$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$505aa269794a499f$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$938fa94ea91032bd$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$1dbd919805fd1d18$exports","$72436993edd2ca04$export$9099ad97b570f7c","XYZ","xyzOptions","gridOptions","$cb780d18f7933e5c$export$5731532c605ee56","$72436993edd2ca04$var$__extends","$505aa269794a499f$exports","$e418fa376f25023c$export$bd9c1867755cf54e","$e418fa376f25023c$export$9099ad97b570f7c","OSM","$e418fa376f25023c$var$__extends","$72436993edd2ca04$exports","$6074b396fc14353d$export$7cf753b6a6534915","$6074b396fc14353d$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","$6074b396fc14353d$var$__extends","setGeometryName","getGeometryName","handleGeometryChange_","setId","$8c10c901171144f0$export$55be7a9e3fef4787","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$106eee51eb5027f3$export$26b1c556c0e0f127","$8c10c901171144f0$export$1a804b04fa5a0253","extrapolate","lo","hi","m0","$7646f09864b67151$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","$7646f09864b67151$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","$519b73d6d11e86d3$export$9099ad97b570f7c","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","$519b73d6d11e86d3$export$534b7b915a5ec453","write","transformed","decimals","power_1","$ecbcc92603ce3f8a$var$getText","$ecbcc92603ce3f8a$export$9099ad97b570f7c","TextFeature","$ecbcc92603ce3f8a$var$__extends","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","$6f8a46fd52256a68$export$48b2dcc2b30085f8","opt_destOffset","destOffset","$9c362a12a28ffa94$export$9f51b94628890a3b","numbers","opt_factor","lastNumbers","num","$9c362a12a28ffa94$export$c17d1112ce3a4cba","$9c362a12a28ffa94$export$cf4a33ed98160e52","encoded","$9c362a12a28ffa94$export$79fdd0c358803332","$9c362a12a28ffa94$export$b738def81c75daed","$9c362a12a28ffa94$export$79de2350df130af5","$9c362a12a28ffa94$export$198333b29da49b92","$9c362a12a28ffa94$export$eb6f5335926374a1","$9c362a12a28ffa94$export$136a77958125a9fe","current","$9c362a12a28ffa94$export$9099ad97b570f7c","Polyline","factor_","geometryLayout_","geometryLayout","$9c362a12a28ffa94$var$__extends","$6074b396fc14353d$exports","getStrideForLayout","$7646f09864b67151$exports","$ecbcc92603ce3f8a$exports","$f56b5bf3c43f068e$export$9099ad97b570f7c","Text1","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$599cb9096c101a3c$export$9099ad97b570f7c","$28f1cbaddf44444c$var$Property","$28f1cbaddf44444c$export$9099ad97b570f7c","Overlay","insertFirst","autoPan","autoPanAnimation","margin","autoPanMargin","rendered","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","$28f1cbaddf44444c$var$__extends","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","msTransform","getOptions","$389e5a4e3b3db42b$var$coordinates","$389e5a4e3b3db42b$var$distances","$389e5a4e3b3db42b$exports","aid_stations","getLatLongFromDistance","$4e9d5e5d5066f735$var$vectorSource","$e56c3ef950abbf44$exports","$4e9d5e5d5066f735$var$vectorLayer","$d16efd1165653604$exports","$4e9d5e5d5066f735$var$styles","route","rectangle","SQRT2","icon","icon2","$4e9d5e5d5066f735$var$map","$a9d71ecad6ede6f8$exports","$adffffba3f1e99ac$exports","$e418fa376f25023c$exports","$4e9d5e5d5066f735$var$utils","reject","fetch","$4e9d5e5d5066f735$var$element","$4e9d5e5d5066f735$var$popup","$28f1cbaddf44444c$exports","$4e9d5e5d5066f735$var$lines","$4e9d5e5d5066f735$var$markerFeature","$4e9d5e5d5066f735$var$markerPrediction","splits","runner","$4e9d5e5d5066f735$var$runners","NAME","$","popover","MARK","TIME","sT","parse","eT","d_p","random","$4e9d5e5d5066f735$var$getPrediction","latlong","BIB","csv","headers","currentline","$4e9d5e5d5066f735$var$csvJSON","datalist","startsWith","exptime","km","cT","toLocaleString","$4e9d5e5d5066f735$var$getExpTime","html","content"],"version":3,"file":"index.6dde243b.js.map"}